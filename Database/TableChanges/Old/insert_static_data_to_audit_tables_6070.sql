BEGIN	
	PRINT 'Start Migrating  - CounterParty '
		INSERT INTO source_counterparty_audit
		  (
			source_counterparty_id,
			source_system_id,
			counterparty_id,
			counterparty_name,
			counterparty_desc,
			int_ext_flag,
			netting_parent_counterparty_id,
			[address],
			phone_no,
			mailing_address,
			fax,
			type_of_entity,
			contact_name,
			contact_title,
			contact_address,
			contact_address2,
			contact_phone,
			contact_fax,
			instruction,
			confirm_from_text,
			confirm_to_text,
			confirm_instruction,
			counterparty_contact_title,
			counterparty_contact_name,
			create_user,
			create_ts,
			update_user,
			update_ts,
			parent_counterparty_id,
			customer_duns_number,
			is_jurisdiction,
			counterparty_contact_id,
			email,
			contact_email,
			city,
			[STATE],
			zip,
			is_active,
			user_action
		  )
		SELECT source_counterparty_id,
			   source_system_id,
			   counterparty_id,
			   counterparty_name,
			   counterparty_desc,
			   int_ext_flag,
			   netting_parent_counterparty_id,
			   [address],
			   phone_no,
			   mailing_address,
			   fax,
			   type_of_entity,
			   contact_name,
			   contact_title,
			   contact_address,
			   contact_address2,
			   contact_phone,
			   contact_fax,
			   instruction,
			   confirm_from_text,
			   confirm_to_text,
			   confirm_instruction,
			   counterparty_contact_title,
			   counterparty_contact_name,
			   create_user,
			   create_ts,
			   update_user,
			   update_ts,
			   parent_counterparty_id,
			   customer_duns_number,
			   is_jurisdiction,
			   counterparty_contact_id,
			   email,
			   contact_email,
			   city,
			   [STATE],
			   zip,
			   is_active,
			   'insert' [user_action]
		FROM   source_counterparty	
		WHERE source_counterparty_id NOT IN (SELECT source_counterparty_id FROM source_counterparty_audit WHERE user_action = 'insert')
	PRINT 'End - CounterParty '
END

BEGIN
	PRINT 'Start Migrating  - Source Book '
	INSERT INTO source_book_audit
	  (
		source_book_id,
		source_system_id,
		source_system_book_id,
		source_system_book_type_value_id,
		source_book_name,
		source_book_desc,
		source_parent_book_id,
		source_parent_type,
		create_user,
		create_ts,
		update_user,
		update_ts,
		user_action
	  )
	SELECT source_book_id,
		   source_system_id,
		   source_system_book_id,
		   source_system_book_type_value_id,
		   source_book_name,
		   source_book_desc,
		   source_parent_book_id,
		   source_parent_type,
		   create_user,
		   create_ts,
		   update_user,
		   update_ts,
		   'insert' [user_action]
	FROM   source_book
	WHERE source_book_id NOT IN (SELECT source_book_id FROM source_book_audit WHERE user_action = 'insert')
	PRINT 'End - Source Book '
END

BEGIN 
	PRINT 'Start Migrating  - Contract '
	INSERT INTO contract_group_audit
	  (
		contract_id,
		sub_id,
		contract_name,
		contract_date,
		receive_invoice,
		settlement_accountant,
		billing_cycle,
		invoice_due_date,
		volume_granularity,
		hourly_block,
		currency,
		volume_mult,
		onpeak_mult,
		offpeak_mult,
		[TYPE],
		reverse_entries,
		volume_uom,
		rec_uom,
		contract_specialist,
		term_start,
		term_end,
		[name],
		company,
		[STATE],
		city,
		zip,
		[address],
		address2,
		telephone,
		email,
		fax,
		name2,
		company2,
		telephone2,
		fax2,
		email2,
		source_contract_id,
		source_system_id,
		contract_desc,
		create_user,
		create_ts,
		update_user,
		update_ts,
		energy_type,
		area_engineer,
		metering_contract,
		miso_queue_number,
		substation_name,
		project_county,
		voltage,
		time_zone,
		contract_service_agreement_id,
		contract_charge_type_id,
		billing_from_date,
		billing_to_date,
		contract_report_template,
		Subledger_code,
		UD_Contract_id,
		extension_provision_description,
		term_name,
		increment_name,
		ferct_tarrif_reference,
		point_of_delivery_control_area,
		point_of_delivery_specific_location,
		contract_affiliate,
		point_of_receipt_control_area,
		point_of_receipt_specific_location,
		no_meterdata,
		billing_start_month,
		increment_period,
		bookout_provision,
		contract_status,
		holiday_calender_id,
		holiday_calendar_id,
		billing_from_hour,
		billing_to_hour,
		block_type,
		is_active,
		payment_calendar,
		pnl_date,
		pnl_calendar,
		user_action
	  )
	SELECT contract_id,
		   sub_id,
		   contract_name,
		   contract_date,
		   receive_invoice,
		   settlement_accountant,
		   billing_cycle,
		   invoice_due_date,
		   volume_granularity,
		   hourly_block,
		   currency,
		   volume_mult,
		   onpeak_mult,
		   offpeak_mult,
		   [TYPE],
		   reverse_entries,
		   volume_uom,
		   rec_uom,
		   contract_specialist,
		   term_start,
		   term_end,
		   [name],
		   company,
		   [STATE],
		   city,
		   zip,
		   [address],
		   address2,
		   telephone,
		   email,
		   fax,
		   name2,
		   company2,
		   telephone2,
		   fax2,
		   email2,
		   source_contract_id,
		   source_system_id,
		   contract_desc,
		   create_user,
		   create_ts,
		   update_user,
		   update_ts,
		   energy_type,
		   area_engineer,
		   metering_contract,
		   miso_queue_number,
		   substation_name,
		   project_county,
		   voltage,
		   time_zone,
		   contract_service_agreement_id,
		   contract_charge_type_id,
		   billing_from_date,
		   billing_to_date,
		   contract_report_template,
		   Subledger_code,
		   UD_Contract_id,
		   extension_provision_description,
		   term_name,
		   increment_name,
		   ferct_tarrif_reference,
		   point_of_delivery_control_area,
		   point_of_delivery_specific_location,
		   contract_affiliate,
		   point_of_receipt_control_area,
		   point_of_receipt_specific_location,
		   no_meterdata,
		   billing_start_month,
		   increment_period,
		   bookout_provision,
		   contract_status,
		   holiday_calender_id,
		   holiday_calendar_id,
		   billing_from_hour,
		   billing_to_hour,
		   block_type,
		   is_active,
		   payment_calendar,
		   pnl_date,
		   pnl_calendar,
		   'insert' [user_action]
	FROM   contract_group cg
	WHERE cg.contract_id NOT IN (SELECT contract_id FROM contract_group_audit WHERE user_action = 'insert')
	PRINT 'End - Contract '
END

BEGIN
	PRINT 'Start Migrating  - Deal Type '
	INSERT INTO source_deal_type_audit
	  (
	    source_deal_type_id,
	    source_system_id,
	    deal_type_id,
	    source_deal_type_name,
	    source_deal_desc,
	    sub_type,
	    expiration_applies,
	    disable_gui_groups,
	    break_individual_deal,
	    seperate_rec_value_used,
	    create_user,
	    create_ts,
	    update_user,
	    update_ts,
	    user_action
	  )
	SELECT source_deal_type_id,
	       source_system_id,
	       deal_type_id,
	       source_deal_type_name,
	       source_deal_desc,
	       sub_type,
	       expiration_applies,
	       disable_gui_groups,
	       break_individual_deal,
	       seperate_rec_value_used,
	       create_user,
	       create_ts,
	       update_user,
	       update_ts,
	       'insert' [user_action]
	FROM   source_deal_type sdt
	WHERE sdt.source_deal_type_id NOT IN (SELECT source_deal_type_id FROM source_deal_type_audit WHERE user_action = 'insert')
	PRINT 'End - Deal Type '
END

BEGIN
	PRINT 'Start Migrating  - UOM Conversion '
	INSERT INTO rec_volume_unit_conversion_audit
	  (
		rec_volume_unit_conversion_id,
		state_value_id,
		curve_id,
		assignment_type_value_id,
		from_source_uom_id,
		to_source_uom_id,
		conversion_factor,
		uom_label,
		curve_label,
		create_user,
		create_ts,
		update_user,
		update_ts,
		effective_date,
		source,
		to_curve_id,
		user_action
	  )
	SELECT rec_volume_unit_conversion_id,
		   state_value_id,
		   curve_id,
		   assignment_type_value_id,
		   from_source_uom_id,
		   to_source_uom_id,
		   conversion_factor,
		   uom_label,
		   curve_label,
		   create_user,
		   create_ts,
		   update_user,
		   update_ts,
		   effective_date,
		   source,
		   to_curve_id,
		   'insert' [user_action]
	FROM   rec_volume_unit_conversion rvuc
	WHERE rvuc.rec_volume_unit_conversion_id NOT IN (SELECT rec_volume_unit_conversion_id FROM rec_volume_unit_conversion_audit WHERE user_action = 'insert')
	PRINT 'End - UOM Conversion '
END

BEGIN
	PRINT 'Start Migrating  - UOM '
	INSERT INTO source_uom_audit
	(
		source_uom_id,
		source_system_id,
		uom_id,
		uom_name,
		uom_desc,
		create_user,
		create_ts,
		update_user,
		update_ts,
		user_action
	)
	SELECT 
		source_uom_id,
		source_system_id,
		uom_id,
		uom_name,
		uom_desc,
		create_user,
		create_ts,
		update_user,
		update_ts,
		'insert' [user_action]
	FROM source_uom
	WHERE source_uom_id NOT IN (SELECT source_uom_id FROM source_uom_audit WHERE user_action = 'insert')
	PRINT 'End - UOM '	
END

BEGIN
	PRINT 'Start Migrating  - Source Trader '
	INSERT INTO source_traders_audit
	  (
		source_trader_id,
		source_system_id,
		trader_id,
		trader_name,
		trader_desc,
		create_user,
		create_ts,
		update_user,
		update_ts,
		user_login_id,
		user_action
	  )
	SELECT source_trader_id,
		   source_system_id,
		   trader_id,
		   trader_name,
		   trader_desc,
		   create_user,
		   create_ts,
		   update_user,
		   update_ts,
		   user_login_id,
		   'insert' [user_action]
	FROM   source_traders 
	WHERE source_trader_id NOT IN (SELECT source_trader_id FROM source_traders_audit WHERE user_action = 'insert')
	PRINT 'End - Source Trader '	
END

BEGIN
	PRINT 'Start Migrating  - Price Curve Definition '	
	INSERT INTO source_price_curve_def_audit
	(
		source_curve_def_id,
		source_system_id,
		curve_id,
		curve_name,
		curve_des,
		commodity_id,
		market_value_id,
		market_value_desc,
		source_currency_id,
		source_currency_to_id,
		source_curve_type_value_id,
		uom_id,
		proxy_source_curve_def_id,
		formula_id,
		obligation,
		sort_order,
		fv_level,
		create_user,
		create_ts,
		update_user,
		update_ts,
		Granularity,
		exp_calendar_id,
		risk_bucket_id,
		reference_curve_id,
		monthly_index,
		program_scope_value_id,
		curve_definition,
		block_type,
		block_define_id,
		index_group,
		display_uom_id,
		proxy_curve_id,
		hourly_volume_allocation,
		settlement_curve_id,
		time_zone,
		udf_block_group_id,
		is_active,
		ratio_option,
		curve_tou,
		proxy_curve_id3,
		asofdate_current_month,
		monte_carlo_model_parameter_id,
		user_action
	)
	SELECT 
		source_curve_def_id,
		source_system_id,
		curve_id,
		curve_name,
		curve_des,
		commodity_id,
		market_value_id,
		market_value_desc,
		source_currency_id,
		source_currency_to_id,
		source_curve_type_value_id,
		uom_id,
		proxy_source_curve_def_id,
		formula_id,
		obligation,
		sort_order,
		fv_level,
		create_user,
		create_ts,
		update_user,
		update_ts,
		Granularity,
		exp_calendar_id,
		risk_bucket_id,
		reference_curve_id,
		monthly_index,
		program_scope_value_id,
		curve_definition,
		block_type,
		block_define_id,
		index_group,
		display_uom_id,
		proxy_curve_id,
		hourly_volume_allocation,
		settlement_curve_id,
		time_zone,
		udf_block_group_id,
		is_active,
		ratio_option,
		curve_tou,
		proxy_curve_id3,
		asofdate_current_month,
		monte_carlo_model_parameter_id,
		'insert' [user_action]
	FROM source_price_curve_def
	WHERE source_curve_def_id NOT IN (SELECT source_curve_def_id FROM source_price_curve_def_audit WHERE user_action = 'insert')
	PRINT 'End - Price Curve Definition '
END
	

BEGIN
	PRINT 'Start Migrating  - Portfolio Hierarchy'
	INSERT INTO portfolio_hierarchy_audit
	  (
		entity_id,
		entity_name,
		entity_type_value_id,
		hierarchy_level,
		parent_entity_id,
		create_user,
		create_ts,
		update_user,
		update_ts,
		user_action
	  )
	SELECT entity_id,
		   entity_name,
		   entity_type_value_id,
		   hierarchy_level,
		   parent_entity_id,
		   create_user,
		   create_ts,
		   update_user,
		   update_ts,
		   'insert' [user_action]
	FROM   portfolio_hierarchy ph
	WHERE ph.entity_id NOT IN (SELECT entity_id FROM portfolio_hierarchy_audit WHERE user_action = 'insert')
	PRINT 'End - Portfolio Hierarchy'	
END

BEGIN
	PRINT 'Start Migrating  - FAS Subsidiaries '
	INSERT INTO fas_subsidiaries_audit
	(
		fas_subsidiary_id,
		entity_type_value_id,
		disc_source_value_id,
		disc_type_value_id,
		func_cur_value_id,
		days_in_year,
		long_term_months,
		entity_name,
		address1,
		address2,
		city,
		state_value_id,
		zip_code,
		country_value_id,
		entity_url,
		tax_payer_id,
		contact_user_id,
		primary_naics_code_id,
		secondary_naics_code_id,
		entity_category_id,
		entity_sub_category_id,
		utility_type_id,
		ticker_symbol_id,
		ownership_status,
		partners,
		holding_company,
		domestic_vol_initiatives,
		domestic_registeries,
		international_registeries,
		confidentiality_info,
		exclude_indirect_emissions,
		organization_boundaries,
		base_year_from,
		base_year_to,
		tax_perc,
		user_action,
		update_user,
		update_ts,
		counterparty_id
	)
	SELECT fas_subsidiary_id,
		   entity_type_value_id,
		   disc_source_value_id,
		   disc_type_value_id,
		   func_cur_value_id,
		   days_in_year,
		   long_term_months,
		   entity_name,
		   address1,
		   address2,
		   city,
		   state_value_id,
		   zip_code,
		   country_value_id,
		   entity_url,
		   tax_payer_id,
		   contact_user_id,
		   primary_naics_code_id,
		   secondary_naics_code_id,
		   entity_category_id,
		   entity_sub_category_id,
		   utility_type_id,
		   ticker_symbol_id,
		   ownership_status,
		   partners,
		   holding_company,
		   domestic_vol_initiatives,
		   domestic_registeries,
		   international_registeries,
		   confidentiality_info,
		   exclude_indirect_emissions,
		   organization_boundaries,
		   base_year_from,
		   base_year_to,
		   tax_perc,
		   'insert' [user_action],
		   update_user,
		   update_ts,
		   counterparty_id
	FROM   fas_subsidiaries fs
	WHERE fs.fas_subsidiary_id NOT IN (SELECT fas_subsidiary_id FROM fas_subsidiaries_audit WHERE user_action = 'insert')
	PRINT 'END - FAS Subsidiaries '
END

BEGIN
	PRINT 'Start Migrating  - FAS Strategy '
	INSERT INTO fas_strategy_audit
	  (
		fas_strategy_id,
		source_system_id,
		hedge_type_value_id,
		fx_hedge_flag,
		mes_gran_value_id,
		gl_grouping_value_id,
		no_links,
		no_links_fas_eff_test_profile_id,
		mes_cfv_value_id,
		mes_cfv_values_value_id,
		mismatch_tenor_value_id,
		strip_trans_value_id,
		asset_liab_calc_value_id,
		test_range_from,
		test_range_to,
		additional_test_range_from,
		additional_test_range_to,
		include_unlinked_hedges,
		include_unlinked_items,
		gl_number_id_st_asset,
		gl_number_id_st_liab,
		gl_number_id_lt_asset,
		gl_number_id_lt_liab,
		gl_number_id_item_st_asset,
		gl_number_id_item_st_liab,
		gl_number_id_item_lt_asset,
		gl_number_id_item_lt_liab,
		gl_number_id_aoci,
		gl_number_id_pnl,
		gl_number_id_set,
		gl_number_id_cash,
		oci_rollout_approach_value_id,
		additional_test_range_from2,
		additional_test_range_to2,
		gl_number_id_inventory,
		gl_number_id_expense,
		options_premium_approach,
		gl_number_id_gross_set,
		gl_id_amortization,
		gl_id_interest,
		base_year_from,
		base_year_to,
		subentity_name,
		subentity_desc,
		relationship_to_entity,
		distinct_estimation_method,
		distinct_output_metrics,
		distinct_foreign_country,
		primary_naics_code_id,
		secondary_naics_code_id,
		organization_boundary_id,
		sub_entity,
		rollout_per_type,
		first_day_pnl_threshold,
		gl_first_day_pnl,
		gl_id_st_tax_asset,
		gl_id_st_tax_liab,
		gl_id_lt_tax_asset,
		gl_id_lt_tax_liab,
		gl_id_tax_reserve,
		user_action,
		update_user,
		update_ts,
		gl_tenor_option,
		fun_cur_value_id
	  )
	SELECT fas_strategy_id,
		   source_system_id,
		   hedge_type_value_id,
		   fx_hedge_flag,
		   mes_gran_value_id,
		   gl_grouping_value_id,
		   no_links,
		   no_links_fas_eff_test_profile_id,
		   mes_cfv_value_id,
		   mes_cfv_values_value_id,
		   mismatch_tenor_value_id,
		   strip_trans_value_id,
		   asset_liab_calc_value_id,
		   test_range_from,
		   test_range_to,
		   additional_test_range_from,
		   additional_test_range_to,
		   include_unlinked_hedges,
		   include_unlinked_items,
		   gl_number_id_st_asset,
		   gl_number_id_st_liab,
		   gl_number_id_lt_asset,
		   gl_number_id_lt_liab,
		   gl_number_id_item_st_asset,
		   gl_number_id_item_st_liab,
		   gl_number_id_item_lt_asset,
		   gl_number_id_item_lt_liab,
		   gl_number_id_aoci,
		   gl_number_id_pnl,
		   gl_number_id_set,
		   gl_number_id_cash,
		   oci_rollout_approach_value_id,
		   additional_test_range_from2,
		   additional_test_range_to2,
		   gl_number_id_inventory,
		   gl_number_id_expense,
		   options_premium_approach,
		   gl_number_id_gross_set,
		   gl_id_amortization,
		   gl_id_interest,
		   base_year_from,
		   base_year_to,
		   subentity_name,
		   subentity_desc,
		   relationship_to_entity,
		   distinct_estimation_method,
		   distinct_output_metrics,
		   distinct_foreign_country,
		   primary_naics_code_id,
		   secondary_naics_code_id,
		   organization_boundary_id,
		   sub_entity,
		   rollout_per_type,
		   first_day_pnl_threshold,
		   gl_first_day_pnl,
		   gl_id_st_tax_asset,
		   gl_id_st_tax_liab,
		   gl_id_lt_tax_asset,
		   gl_id_lt_tax_liab,
		   gl_id_tax_reserve,
		   'insert' [user_action],
		   update_user,
		   update_ts,
		   gl_tenor_option,
		   fun_cur_value_id
	FROM   fas_strategy
	WHERE fas_strategy_id NOT IN (SELECT fas_strategy_id FROM fas_strategy_audit WHERE user_action = 'insert')
	PRINT 'End - FAS Strategy '	
END


BEGIN
	PRINT 'Start Migrating  - FAS Book '
	INSERT INTO fas_books_audit
	(
		fas_book_id,
		no_link,
		no_links_fas_eff_test_profile_id,
		gl_number_id_st_asset,
		gl_number_id_st_liab,
		gl_number_id_lt_asset,
		gl_number_id_lt_liab,
		gl_number_id_item_st_asset,
		gl_number_id_item_st_liab,
		gl_number_id_item_lt_asset,
		gl_number_id_item_lt_liab,
		gl_number_id_aoci,
		gl_number_id_pnl,
		gl_number_id_set,
		gl_number_id_cash,
		gl_number_id_inventory,
		gl_number_id_expense,
		gl_number_id_gross_set,
		gl_id_amortization,
		gl_id_interest,
		convert_uom_id,
		cost_approach_id,
		gl_id_st_tax_asset,
		gl_id_st_tax_liab,
		gl_id_lt_tax_asset,
		gl_id_lt_tax_liab,
		gl_id_tax_reserve,
		user_action,
		update_user,
		update_ts,
		legal_entity,
		tax_perc,
		fun_cur_value_id,
		hedge_item_same_sign
	)
	SELECT 
		fas_book_id,
		no_link,
		no_links_fas_eff_test_profile_id,
		gl_number_id_st_asset,
		gl_number_id_st_liab,
		gl_number_id_lt_asset,
		gl_number_id_lt_liab,
		gl_number_id_item_st_asset,
		gl_number_id_item_st_liab,
		gl_number_id_item_lt_asset,
		gl_number_id_item_lt_liab,
		gl_number_id_aoci,
		gl_number_id_pnl,
		gl_number_id_set,
		gl_number_id_cash,
		gl_number_id_inventory,
		gl_number_id_expense,
		gl_number_id_gross_set,
		gl_id_amortization,
		gl_id_interest,
		convert_uom_id,
		cost_approach_id,
		gl_id_st_tax_asset,
		gl_id_st_tax_liab,
		gl_id_lt_tax_asset,
		gl_id_lt_tax_liab,
		gl_id_tax_reserve,
		'insert' [user_action],
		update_user,
		update_ts,
		legal_entity,
		tax_perc,
		fun_cur_value_id,
		hedge_item_same_sign
	FROM fas_books
	WHERE fas_book_id NOT IN (SELECT fas_book_id FROM fas_books_audit WHERE user_action = 'insert')
	PRINT 'End - FAS Book '
END

BEGIN
	PRINT 'Start Migrating  - App roles'	
	INSERT INTO application_security_role_audit
	  (
		role_id,
		role_name,
		role_description,
		role_type_value_id,
		process_map_file_name,
		create_user,
		create_ts,
		update_user,
		update_ts,
		user_action
	  )
	SELECT role_id,
		   role_name,
		   role_description,
		   role_type_value_id,
		   process_map_file_name,
		   create_user,
		   create_ts,
		   update_user,
		   update_ts,
		   'insert' [user_action]
	FROM   application_security_role asr
	WHERE asr.role_id NOT IN (SELECT role_id FROM application_security_role_audit WHERE user_action = 'insert')
	PRINT 'End - App roles'
END

BEGIN
	PRINT 'Start Migrating  - Hourly Block'	
	DECLARE @hourly_block_type_id INT

	SELECT @hourly_block_type_id = sdt.[type_id] FROM static_data_type sdt WHERE sdt.[type_name] = 'Hourly Block'	

	INSERT INTO hourly_block_sdv_audit
	(
		value_id,
		[type_id],
		code,
		[description],
		entity_id,
		xref_value_id,
		xref_value,
		category_id,
		create_user,
		create_ts,
		update_user,
		update_ts,
		user_action
	)
	SELECT value_id,
		[type_id],
		code,
		[description],
		entity_id,
		xref_value_id,
		xref_value,
		category_id,
		create_user,
		create_ts,
		update_user,
		update_ts,
		'insert' [user_action]
	FROM   static_data_value sdv
	WHERE  sdv.[type_id] = @hourly_block_type_id
		AND sdv.value_id NOT IN (SELECT value_id FROM hourly_block_sdv_audit WHERE user_action = 'insert')
	PRINT 'End - Hourly Block'
END

BEGIN
	PRINT 'Start Migrating  - App Users'	
	
	INSERT INTO application_users_audit
	  (
	    user_login_id,
	    user_f_name,
	    user_m_name,
	    user_l_name,
	    user_pwd,
	    user_title,
	    entity_id,
	    user_address1,
	    user_address2,
	    user_address3,
	    city_value_id,
	    state_value_id,
	    user_zipcode,
	    user_off_tel,
	    user_main_tel,
	    user_pager_tel,
	    user_mobile_tel,
	    user_fax_tel,
	    user_emal_add,
	    message_refresh_time,
	    region_id,
	    user_active,
	    temp_pwd,
	    expire_date,
	    lock_account,
	    reports_to_user_login_id,
	    create_user,
	    create_ts,
	    update_user,
	    update_ts,
	    timezone_id,
	    user_action
	  )
	SELECT user_login_id,
	       user_f_name,
	       user_m_name,
	       user_l_name,
	       user_pwd,
	       user_title,
	       entity_id,
	       user_address1,
	       user_address2,
	       user_address3,
	       city_value_id,
	       state_value_id,
	       user_zipcode,
	       user_off_tel,
	       user_main_tel,
	       user_pager_tel,
	       user_mobile_tel,
	       user_fax_tel,
	       user_emal_add,
	       message_refresh_time,
	       region_id,
	       user_active,
	       temp_pwd,
	       expire_date,
	       lock_account,
	       reports_to_user_login_id,
	       create_user,
	       create_ts,
	       update_user,
	       update_ts,
	       timezone_id,
	       'insert' [user_action]
	FROM   application_users	
	WHERE user_login_id NOT IN (SELECT user_login_id FROM application_users_audit WHERE user_action = 'insert')
	PRINT 'End - App Users'
END