
 
    IF OBJECT_ID(N'[dbo].[spa_excel_addin]', N'P') IS NOT NULL
    	DROP PROCEDURE [dbo].[spa_excel_addin]
    GO
    
    SET ANSI_NULLS ON
    GO
    
    SET QUOTED_IDENTIFIER ON
    GO
   
   /**   
    Excel add-in miscelleanous api request operation
    Parameters
    @xml_parameter: XML request generated by excel add-in
	@runtime_user : Runtime user currently not used.   
	*/

    CREATE PROCEDURE [dbo].[spa_excel_addin](@xml_parameter XML, @runtime_user NVARCHAR(2000))
    AS
    	SET NOCOUNT ON
    	DECLARE @json_content NVARCHAR(MAX) = ''
    	DECLARE @process_id NVARCHAR(100) = REPLACE(NEWID(), '-', '_')
    	DECLARE @ixp_rule_hash VARCHAR(500)
    	
    	BEGIN
    		DECLARE @operation VARCHAR(100), @sql VARCHAR(MAX), @paramset_hash VARCHAR(255), @report_paramset_id VARCHAR(255), @app_user_name NVARCHAR(255)
			SELECT @operation = @xml_parameter.value('(/Root/PSRecordset/Operation[1])[1]', 'varchar(100)')
			SELECT @app_user_name = @xml_parameter.value('(/Root/PSRecordset/AppUserName[1])[1]', 'nvarchar(255)')
			-- Override db user by application user
			--EXEC sys.sp_set_session_context @key = N'DB_USER', @value = @app_user_name;
			
			IF (@operation = 'ORGANIZATION_NAME')
			BEGIN
				SET @sql = 'SELECT ph.entity_name [Name] FROM portfolio_hierarchy ph WHERE ph.entity_id = -1'
			END
			ELSE IF (@operation = 'LIST_REPORTS')
			BEGIN
				SET @sql = 'EXEC spa_exposed_excel_addin_reports'
			END
			ELSE IF (@operation = 'LIST_PARAMETERS')
			BEGIN
				Declare @report_id INT
				SELECT @paramset_hash = @xml_parameter.value('(/Root/PSRecordset/ParamsetHash[1])[1]', 'varchar(100)')
				--SELECT @paramset_hash

				SELECT @report_id = r.report_id, @report_paramset_id = rps.report_paramset_id 
				FROM report r 
					INNER JOIN report_page rp ON  rp.report_id = r.report_id
					INNER JOIN report_paramset rps ON  rps.page_id = rp.report_page_id
				WHERE rps.paramset_hash = @paramset_hash

				SET @sql = 'EXEC spa_view_report @flag = ''c'', @report_name = '''', @report_id =' + CAST(@report_id AS varchar)+ ', @report_param_id =' + CAST(@report_paramset_id AS varchar)+ ', @call_from = ''excel_addin'''
			END
			ELSE IF (@operation = 'REPORT_DATA')
			BEGIN
				SELECT @paramset_hash = @xml_parameter.value('(/Root/PSRecordset/ParamsetHash[1])[1]', 'varchar(100)')
				SET @sql = 'SELECT 
									   rp.report_paramset_id [ParamsetId],
									   rpt.report_page_tablix_id [TablixId],
									   rp.name [ReportName],
									   rp.page_id PageID,
									   rp.report_status_id [ReportStatusId],
									   rp.paramset_hash [ParamsetHash]
								FROM   report_paramset rp
									   INNER JOIN report_page_tablix rpt
											ON  rpt.page_id = rp.page_id
									   INNER JOIN report_page rp2
											ON  rpt.page_id = rp2.report_page_id WHERE rp.paramset_hash=''' + @paramset_hash + ''''	
			END
			ELSE IF (@operation = 'PORTFOLIO_TREE')
			BEGIN
				SELECT @paramset_hash = @xml_parameter.value('(/Root/PSRecordset/ParamsetHash[1])[1]', 'varchar(100)')

				--	product category TRM Tracker hardcode 
				DECLARE @view_id_base_no INT = 100000000, @function_id INT 
				select top 1 @function_id =  @view_id_base_no  + ISNULL(rd.source_id, 0) from report_paramset rp
				inner join report_dataset_paramset rdp on rp.report_paramset_id = rdp.paramset_id
				inner join report_dataset rd on rd.report_dataset_id = rdp.root_dataset_id
				where rp.[paramset_hash] = @paramset_hash
	
				-- If report is generated from sql data source , setting function id to NULL will retrive all portfolio
				IF EXISTS (select ds.type_id from report_paramset rp
					inner join report_dataset_paramset rdp on rp.report_paramset_id = rdp.paramset_id
					inner join report_dataset rd on rd.report_dataset_id = rdp.root_dataset_id
					inner join data_source ds on ds.data_source_id = rd.source_id  
					where rp.[paramset_hash] = @paramset_hash
					AND ds.type_id = 2
				)
				BEGIN
					--	Used View Report function_id to get allowed book structure as book structure privilege cannot be defined for SQL Data Source at the moment. 
					SET @function_id = 10202200
				END

				IF OBJECT_ID('tempdb..#portfolios') IS NOT NULL
					DROP TABLE #portfolios

				CREATE TABLE #portfolios
				(
					entity_id INT, entity_name nvarchar(max), have_rights int, node_type int, sourcesytem nvarchar(100)
				)
				INSERT INTO #portfolios
				EXEC spa_getPortfolioHierarchy @function_id = @function_id, @flag = 't'

				SET @sql = 'SELECT 
								sub.entity_id SubsidiaryId
								,stra.entity_id StrategyId
								,book.entity_id BookId
								,ssbm.book_deal_type_map_id SubBookId
								,sub.entity_name AS Subsidiary
								,stra.entity_name AS Strategy
								,book.entity_name AS Book
								,ssbm.logical_name SubBook
							FROM #portfolios pf
							LEFT JOIN source_system_book_map ssbm ON pf.entity_id = ssbm.book_deal_type_map_id AND pf.node_type = -1
							LEFT JOIN portfolio_hierarchy book ON ssbm.fas_book_id = book.entity_id and book.hierarchy_level = 0
							LEFT JOIN portfolio_hierarchy stra ON book.parent_entity_id = stra.entity_id and stra.hierarchy_level = 1
							LEFT JOIN portfolio_hierarchy sub ON stra.parent_entity_id = sub.entity_id and sub.parent_entity_id is null 
								and sub.hierarchy_level = 2
						WHERE  ssbm.logical_name IS NOT       NULL'
			END
			ELSE IF @operation = 'BIND_COMBO'
			BEGIN
				DECLARE @datasource NVARCHAR(MAX)
				SELECT @sql = @xml_parameter.value('(/Root/PSRecordset/DataSource[1])[1]', 'nvarchar(MAX)')
			END
			ELSE IF @operation = 'DATA_BROWSER'
			BEGIN
				DECLARE @grid_name NVARCHAR(MAX)
				SELECT @grid_name = @xml_parameter.value('(/Root/PSRecordset/GridName[1])[1]', 'nvarchar(MAX)')
		
				SET @sql = 'SELECT agd.load_sql [LoadSql],
								   agcd.column_name [ColumnName],
								   agcd.column_label [ColumnLabel],
								   ISNULL(agcd.is_hidden, ''n'') [Hidden],
								   agcd.column_order [ColumnOrder]
							FROM   adiha_grid_columns_definition agcd
								   INNER JOIN adiha_grid_definition agd
										ON  agcd.grid_id = agd.grid_id
							WHERE  agd.grid_name = ''' + @grid_name + ''' 
							ORDER BY
								   agcd.column_order'
			END
			ELSE IF @operation = 'DATA_BROWSER_DATA'
			BEGIN
				Declare @browser_name VARCHAR(200), @browser_query VARCHAR(MAX), @sql_version VARCHAR(50)

				--	Detect SQL Version
				SELECT @sql_version = dbo.FNAGetMSSQLVersion()
				
				SELECT @browser_name = @xml_parameter.value('(/Root/PSRecordset/Query[1])[1]', 'nvarchar(MAX)')

				SELECT @browser_query = agd.load_sql
				FROM adiha_grid_definition agd
				WHERE  agd.grid_name = @browser_name
				IF @sql_version > 12
				BEGIN
					DECLARE @grid_definition_columns VARCHAR(5000)
					SELECT @grid_definition_columns = STUFF((SELECT ',' + agcd.column_name + ' NVARCHAR(1024)' 
											 FROM   adiha_grid_columns_definition agcd 
													INNER JOIN adiha_grid_definition agd 
															ON agcd.grid_id = agd.grid_id 
											 WHERE  agd.grid_name = @browser_name 
											 ORDER  BY agcd.column_order 
											 FOR xml path('')), 1, 1, '') 

					SET @sql = 'CREATE TABLE #data_browser_data_table (' 
							   + @grid_definition_columns 
							   + ') '
					SET @sql += ' INSERT INTO #data_browser_data_table ' + @browser_query

					SET @sql += 'DECLARE @outputJson nvarchar(max) set @outputJson = (select * from #data_browser_data_table for json auto, INCLUDE_NULL_VALUES    ) SELECT @outputJson [ResultJson]' 
					EXEC(@sql) 
					RETURN
				END
				ELSE
				BEGIN
					SET @sql = @browser_query
				END
			END
			ELSE IF @operation = 'SAVED_FILTERS'
			BEGIN
				
				SELECT @report_paramset_id = @xml_parameter.value('(/Root/PSRecordset/ReportParamsetId[1])[1]', 'VARCHAR(255)')
				
				IF OBJECT_ID('tempdb..#saved_report_filters') IS NOT NULL 
					DROP TABLE tempdb..#saved_report_filters
				CREATE TABLE #saved_report_filters ([Values] INT, [Text] NVARCHAR(MAX), [Order] INT  )
	
				DECLARE @xml as xml = '<ApplicationFilter report_id="' + CAST(@report_paramset_id as varchar) + '"></ApplicationFilter>'
				INSERT INTO #saved_report_filters ([Values], [Text] , [Order])
				EXEC spa_application_ui_filter @flag='s', @xml_string= @xml
				SET @sql = 'SELECT [Values] [Id], [Text] [Name] , [Order] FROM #saved_report_filters'
			END
			ELSE IF @operation = 'SAVED_FILTERS_VALUES'
			BEGIN
				DECLARE @saved_filter_name VARCHAR(500)
				SELECT @report_paramset_id = @xml_parameter.value('(/Root/PSRecordset/ReportParamsetId[1])[1]', 'VARCHAR(255)'),
					@saved_filter_name = @xml_parameter.value('(/Root/PSRecordset/FilterName[1])[1]', 'VARCHAR(500)')
				
				IF OBJECT_ID('tempdb..#saved_report_filters_values') IS NOT NULL 
					DROP TABLE tempdb..#saved_report_filters_values

				CREATE TABLE #saved_report_filters_values ([FarrmsFieldId] NVARCHAR(MAX), [FieldValue] NVARCHAR(MAX)  )
	
				DECLARE @xml2 as xml = '<ApplicationFilter name="'+ @saved_filter_name +'" report_id="' + CAST(@report_paramset_id AS VARCHAR) + '"/>'
				INSERT INTO #saved_report_filters_values ([FarrmsFieldId] , [FieldValue])
				EXEC spa_application_ui_filter @flag = 'a', @xml_string = @xml2
				SET @sql = 'SELECT [FarrmsFieldId], [FieldValue] [Value] FROM #saved_report_filters_values'
			END
			ELSE IF @operation = 'DATA_LABEL'
			BEGIN
				DECLARE @databrowser_name VARCHAR(500), @databrowser_values  VARCHAR(2000)
				SELECT @databrowser_name = @xml_parameter.value('(/Root/PSRecordset/DataBrowserName[1])[1]', 'VARCHAR(500)'),
					@databrowser_values = @xml_parameter.value('(/Root/PSRecordset/DataBrowserValues[1])[1]', 'VARCHAR(2000)')
					
				DECLARE @columns VARCHAR(MAX)
				DECLARE @key_column VARCHAR(100)
				DECLARE @load_sql VARCHAR(MAX)

				DECLARE @column_label_name VARCHAR(100)
				SELECT TOP 1 @key_column = agcd.column_name, @load_sql = agd.load_sql, @column_label_name = rs1.[ColumnName]
				FROM   adiha_grid_columns_definition agcd
					   INNER JOIN adiha_grid_definition agd
							ON  agcd.grid_id = agd.grid_id
					   CROSS APPLY (SELECT TOP 1
										   agcd1.column_name [ColumnName]
									FROM   adiha_grid_columns_definition agcd1
									WHERE  agcd1.grid_id = agd.grid_id
									AND  agd.grid_name = @databrowser_name
										   AND agcd1.column_order > 1
									ORDER BY
										   agcd.column_order) rs1
				WHERE  agd.grid_name = @databrowser_name
				ORDER BY
					   agcd.column_order
       
				SELECT @columns = COALESCE(@columns + ',', '') + agcd.column_name + 
					   ' VARCHAR(2000) '
				FROM   adiha_grid_columns_definition agcd
					   INNER JOIN adiha_grid_definition agd
							ON  agcd.grid_id = agd.grid_id
				WHERE  agd.grid_name = @databrowser_name
				ORDER BY
					   agcd.column_order

				DECLARE @table_name VARCHAR(1000) = 'adiha_process.dbo.' + @databrowser_name + '_' + @process_id

				SET @sql = 'CREATE TABLE ' + @table_name + '(' + @columns + 
					') 
				INSERT INTO ' + @table_name + '
				 ' + @load_sql + ' '

				EXEC (@sql)
				SET @sql = 'select DISTINCT ' + @column_label_name + ' [DataLabel] From ' + @table_name + CASE WHEN ISNULL(@databrowser_values,'') <> '' THEN ' WHERE ' + @key_column +  ' IN (' + @databrowser_values + ')' ELSE '' END 
			END
			ELSE IF @operation = 'REPORT_COLUMNS'
			BEGIN
				SELECT @process_id = @xml_parameter.value('(/Root/PSRecordset/ProcessId[1])[1]', 'VARCHAR(2000)')
				
				SET @sql ='  SELECT COLUMN_NAME [Name],
				                    ORDINAL_POSITION [Position]
				             FROM   [adiha_process].INFORMATION_SCHEMA.COLUMNS  WITH(NOLOCK) 
				             WHERE  TABLE_NAME = ''excel_addin_report_results_' + @process_id + '''
				             ORDER BY
				                    ORDINAL_POSITION ASC'
			END
			ELSE IF @operation ='REPORT_XML'
			BEGIN
				
				DECLARE @spa_rfx_query NVARCHAR(MAX), @reportXml NVARCHAR(MAX), @process_table NVARCHAR(1024)
				
				SELECT @spa_rfx_query = 'EXEC spa_rfx_run_sql ' + @xml_parameter.value('(/Root/PSRecordset/SpaRfxQuery[1])[1]', 'NVARCHAR(MAX)'),
					@process_id = @xml_parameter.value('(/Root/PSRecordset/ProcessId[1])[1]', 'VARCHAR(2000)')
			
				SET @process_table = 'adiha_process.dbo.excel_addin_report_results_' + @process_id
				
				SET @sql = 'IF OBJECT_ID(''' + @process_table + ''') IS NOT NULL  DROP TABLE ' + @process_table
				EXEC (@sql)
				
				SET @spa_rfx_query += ',''' + @process_table + ''',''t'''
				--PRINT @spa_rfx_query
				EXEC (@spa_rfx_query)
				EXEC spa_raw_xml @process_table, @reportXml OUTPUT 
				--SELECT @process_table
				--SELECT @reportXml [ReportXml]
				SELECT @reportXml [ResultJson]
				RETURN
			END
			ELSE IF @operation = 'IXP_RULES'
			BEGIN
				SET @sql = 'EXEC spa_exposed_excel_addin_reports @option = ''r'''
			END
			ELSE IF @operation = 'IXP_RULE_COLUMNS'
			BEGIN
				SELECT @ixp_rule_hash = @xml_parameter.value('(/Root/PSRecordset/IxpRuleHash[1])[1]', 'VARCHAR(500)')
				SET @sql = 'EXEC spa_exposed_excel_addin_reports @option = ''s'', @ixp_rule_hash=''' + @ixp_rule_hash + ''''

			END
			ELSE IF @operation = 'IXP_IMPORT'
			BEGIN
				DECLARE @json_data NVARCHAR(MAX), @status NVARCHAR(MAX), @ixp_rule_id INT
				SELECT @json_data = @xml_parameter.value('(/Root/PSRecordset/JsonData[1])[1]', 'NVARCHAR(MAX)'),
				@process_id = @xml_parameter.value('(/Root/PSRecordset/ProcessId[1])[1]', 'VARCHAR(255)'),
				@ixp_rule_hash = @xml_parameter.value('(/Root/PSRecordset/IxpRuleHash[1])[1]', 'VARCHAR(255)')
				
				SET @process_table = 'adiha_process.dbo.excel_addin_data_import_' + @process_id
				
				EXEC [spa_import_from_json] @json_content = @json_data, @process_table_name = @process_table, @status = @status OUTPUT

				SELECT @ixp_rule_id = ixp_rules_id FROM ixp_rules ir WHERE ir.ixp_rule_hash = @ixp_rule_hash
				-- Run Ixp Rule
				SET @sql = 'EXEC spa_ixp_rules @flag = ''t'',@process_id = ''' + @process_id + ''',@ixp_rules_id =' + @ixp_rule_id + ',@run_table = ''' + @process_table + ''',@source = ''21400'',@run_with_custom_enable = ''n'''
			END
			ELSE IF @operation = 'DynamicDateOption'
			BEGIN
				SET @sql = 'select  0 [Id], '''' [Description] UNION ALL SELECT  value_id [Id], code [Description] FROM static_data_value WHERE type_id = 45600 AND description <> ''Use Report Setting'''
			END
			ELSE IF @operation = 'AdjustType'
			BEGIN
				SET @sql = 'SELECT value_id [Id], code [Description] FROM static_data_value WHERE type_id = 106400'
			END
			EXEC spa_build_json @sql_command = @sql, @json_field_list = null, @json_content = @json_content OUTPUT
			SELECT @json_content [ResultJson]
			
    	END
    	