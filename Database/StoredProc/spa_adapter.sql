

/*
	Author : Vishwas Khanal
	Date   : 26.Oct.2009
	Desc   : This SP will transform the data of staging table to the desired format of the import temp table.
*/
IF OBJECT_ID('dbo.spa_adapter','p') IS NOT NULL
DROP PROC dbo.spa_adapter
GO
CREATE PROC [dbo].[spa_adapter]
@dataType		VARCHAR(10),
@parseType		varchar(100)		   ,
@process_id		VARCHAR(100)=null,
@job_name		VARCHAR(100)=null,
@send_email		VARCHAR(1)='y',
@user VARCHAR(50) = NULL
AS

/*
----BEGIN

DECLARE @dataType VARCHAR(10),@parseType varchar(100)  ,
@process_id		VARCHAR(100),@job_name	VARCHAR(100),@send_email VARCHAR(1)

select @dataType='spc',
@parseType='6'		   ,
@process_id	='dfffd',
@job_name='wwggfffwdddfffaa',
@send_email	='n'

DROP TABLE #ErrorHandler
DROP TABLE #tmp
DROP TABLE  #source_table_columns 

--*/

/*
@client
				ladwp 
				gateway

@dataType
				spc  - Source Price Curve
				spcd - Source Price Curve Definition

@parseType		
				Source could be different for the same @dataType and format of the file could be different depending upon 
				the source. So, to differentiate the insertion logic to @table this 
				parameter is used.

				1 - The file in .ftp format
				2 - CSV file generated by data scrapping from NYMEX site.
				3 - XML file generated by data scrapping from Treasury site.
*/
	--declare @send_email varchar(1)
	DECLARE @errorMsg			VARCHAR(200)	,
			@errorcode			VARCHAR(200)	,
			@detail_errorMsg	VARCHAR(200)	,
			@url				VARCHAR(500)	,
			@desc				VARCHAR(500)	,
			@table				VARCHAR(1000)	,
			@sql				VARCHAR(8000)	,		  
			@desc_detail		VARCHAR(8000)	,
			@error				INT				,
			@id					INT				,
			@count				INT				,
			@totalcount			INT				,
			@run_start_time		DATETIME		


	DECLARE @tablename TABLE (tname VARCHAR(1000))

	declare  @call_import_data bit
	set @call_import_data=0
	DELETE @tablename

	DECLARE @table_no VARCHAR(10)
	SET @table_no=4008
	
	IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item in(1,2,3,4))	--  Price curve
		SET @table_no=4008
	ELSE IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=5)	-- RWE Deal
		SET @table_no=4005
	
	SET @user = ISNULL(@user, dbo.FNADBuser())
	INSERT INTO @tablename EXEC dbo.spa_import_temp_table @table_no,NULL,@user

	SELECT @table = tname FROM @tablename

	
	DECLARE @as_of_date_import DATETIME
	set @as_of_date_import = GETDATE()
	-- Creation Of Temp Tables
	CREATE TABLE #ErrorHandler
	(
		err_code		VARCHAR(50) COLLATE DATABASE_DEFAULT 	,
		module			VARCHAR(50) COLLATE DATABASE_DEFAULT 	,
		area			VARCHAR(50) COLLATE DATABASE_DEFAULT 	,
		[status]		VARCHAR(50) COLLATE DATABASE_DEFAULT 	,
		msg				VARCHAR(500) COLLATE DATABASE_DEFAULT ,
		recommendation  VARCHAR(1000) COLLATE DATABASE_DEFAULT 
	)

	CREATE TABLE #tmp 
	(
		curve_id						VARCHAR(100) COLLATE DATABASE_DEFAULT ,
		source_system_id				INT,
		as_of_date						DATETIME,
		Assessment_curve_type_value_id  INT,
		curve_source_value_id			INT,
		maturity_date					DATETIME,
		maturity_hour					INT,
		curve_value						varchar(100) COLLATE DATABASE_DEFAULT 
	)
/*
	CREATE TABLE #tmp_data 
	(
		details			VARCHAR(100) COLLATE DATABASE_DEFAULT ,
		asOfDate		VARCHAR(100) COLLATE DATABASE_DEFAULT ,
		update_ts		VARCHAR(100) COLLATE DATABASE_DEFAULT 
	)
*/
	CREATE TABLE #source_table_columns  
	( 
		column_name		VARCHAR(100) COLLATE DATABASE_DEFAULT , 
		no_months		INT
	)

	SET @run_start_time=GETDATE()
	SET @process_id=null
	IF @process_id IS NULL SET @process_id = REPLACE(NEWID(),'-','_')
	
	SELECT @url = './dev/spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status ''' + @process_id + ''','''+@user+''''
	SELECT @desc = '<a target="_blank" href="' + @url + '">View Log</a>'
	DECLARE @no_file INT = NULL
	
		-- empty folder case	
	IF @dataType = 'spc' AND NOT EXISTS(SELECT 1 FROM stage_source_price_curve_platts)
	BEGIN
			SET @no_file = 1
	END
			
	IF @dataType = 'spc'
	BEGIN
				SET @parseType = ISNULL(NULLIF(@parseType,''), '0')

		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=1)
		BEGIN		
			BEGIN TRY
			

--				DELETE @tablename
--
--				INSERT INTO @tablename EXEC dbo.spa_import_temp_table 4008
--
--				SELECT @table = tname FROM @tablename

				DELETE FROM stage_source_price_curve_platts WHERE [index] IS NULL OR [index] = '' OR flag IN ('X','D') 
 
--				INSERT INTO #tmp_data (details ,asOfDate,update_ts) 
--					SELECT details,asOfDate,MAX(UPDATE_TS) UPDATE_TS FROM stage_source_price_curve_platts  GROUP BY details,asOfDate 

				 INSERT INTO #tmp
				 SELECT DISTINCT curve_id,2,SUBSTRING(src.update_ts,1,4)+'-'+SUBSTRING(src.update_ts,5,2)+'-'+SUBSTRING(src.update_ts,7,2),77,4500,
					'20'+ CASE SUBSTRING(src.details,6,2) WHEN '00' THEN SUBSTRING(src.update_ts,3,2) ELSE SUBSTRING(src.details,6,2) END +'-' -- For year
						+ CASE SUBSTRING(src.details,6,2) WHEN '00' THEN SUBSTRING(src.update_ts,5,2) ELSE --- For month
						 CASE UPPER(SUBSTRING(src.details,5,1)) WHEN 'A' THEN '01'
																WHEN 'B' THEN '02'
																WHEN 'C' THEN '03'
																WHEN 'D' THEN '04'
																WHEN 'E' THEN '05'
																WHEN 'F' THEN '06'
																WHEN 'G' THEN '07'
																WHEN 'H' THEN '08'
																WHEN 'I' THEN '09'
																WHEN 'J' THEN '10'
																WHEN 'K' THEN '11'
																WHEN 'L' THEN '12' END END 
						+ '-01', --For day				
					NULL,src.[index]
					FROM stage_source_price_curve_platts src
--					INNER JOIN #tmp_data mx
--						ON RTRIM(src.details)=RTRIM(mx.details) AND RTRIM(src.asOfDate)=RTRIM(mx.asOfDate) AND RTRIM(src.UPDATE_TS)=RTRIM(mx.UPDATE_TS)
					 INNER JOIN source_price_curve_def 
						ON SUBSTRING(src.details,1,4) = curve_id 
							WHERE src.[index] IS NOT NULL						
							AND SUBSTRING(src.details,5,1)<>'0'		
				EXEC('INSERT INTO '+ @table +
					'(
						source_curve_def_id
						, source_system_id
						, as_of_date
						, Assessment_curve_type_value_id
						, curve_source_value_id
						, maturity_date
						, maturity_hour
						, curve_value
						, is_dst
						, table_code
					)
				 SELECT curve_id,
						 source_system_id,
						 as_of_date,
						 Assessment_curve_type_value_id,
						 curve_source_value_id,
						 maturity_date,
						 NULL,
						 curve_value,
						 0,
						 4008
					FROM #tmp ')
					set @call_import_data=1

			--	INSERT INTO #ErrorHandler EXEC spa_import_data_job @table,'4008',@job_name,@process_id,@user,'y'

			END TRY 
			BEGIN CATCH				
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error','Import Data','Platts','Data Error','Error in FTP format Data ('+ERROR_MESSAGE()+')','Please verify connection.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'Platts','Data Error','Error in FTP format Data ('+ERROR_MESSAGE()+')'
			END CATCH	

			--EXEC spa_complete_compliance_activities 'c',105,'<root><row Platts="12" ></row></root>',@desc	
					
		END		
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=2)	-- NYMEX Wep Page Scrapping
		BEGIN
			BEGIN TRY
--				DELETE @tablename
--				INSERT INTO @tablename EXEC dbo.spa_import_temp_table 4008
--
--				SELECT @table = tname FROM @tablename

				SELECT @sql =
				' INSERT INTO '+ @table + 
				'(
						source_curve_def_id
						, source_system_id
						, as_of_date
						, Assessment_curve_type_value_id
						, curve_source_value_id
						, maturity_date
						, maturity_hour
						, curve_value
						, is_dst
						, table_code
					)
				SELECT spcd.curve_id,2,asOfDate,77,4500, a.maturity_date,NULL,[Settle],0 ,4008 from
				( 
					SELECT  asOfDate, ''20''+RIGHT(MaturityDate,2)+''-''+
							CASE LEFT(MaturityDate,3) WHEN ''JAN'' THEN ''01''
													  WHEN ''FEB'' THEN ''02''
													  WHEN ''MAR'' THEN ''03''
													  WHEN ''APR'' THEN ''04''
													  WHEN ''MAY'' THEN ''05''
													  WHEN ''JUN'' THEN ''06''
													  WHEN ''JLY'' THEN ''07''
													  WHEN ''AUG'' THEN ''08''
													  WHEN ''SEP'' THEN ''09''
													  WHEN ''OCT'' THEN ''10''
													  WHEN ''NOV'' THEN ''11''
													  ELSE ''12'' END + ''-01'' [maturity_date],
							[Settle]
						FROM stage_source_price_curve_nymex  
						WHERE MATURITYDATE <> ''Total''
					)  a cross join source_price_curve_def spcd where spcd.market_value_id=''Nymex'''

				EXEC spa_print @sql			
				EXEC(@sql)	
				set @call_import_data=1


--				INSERT INTO #ErrorHandler EXEC spa_import_data_job @table,'4008',@job_name,@process_id,@user,'y'

			END TRY 
			BEGIN CATCH				
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error','Import Data','NYMEX','Data Error','Error in NYMEX Data ('+ERROR_MESSAGE()+')','Please verify connection.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'NYMEX','Data Error','Error in NYMEX Data ('+ERROR_MESSAGE()+')'
			END CATCH
					
			--EXEC spa_complete_compliance_activities 'c',108,'<root><row Nymex="13" ></row></root>',@desc			

		END
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=3)	-- Treasury Wep Page Scrapping
		BEGIN
			BEGIN TRY
--				DELETE @tablename
--
--				INSERT INTO @tablename EXEC dbo.spa_import_temp_table 4008
--
--				SELECT @table = tname FROM @tablename
				
				INSERT INTO #source_table_columns(column_name, no_months)
					SELECT '1mo',1
							UNION ALL SELECT '3mo',3
							UNION ALL SELECT '6mo',6
							UNION ALL SELECT '1yr',12
							UNION ALL SELECT '2yr',24
							UNION ALL SELECT '3yr',36
							UNION ALL SELECT '5yr',60
							UNION ALL SELECT '7yr',84
							UNION ALL SELECT '10yr',120
							UNION ALL SELECT '20yr',240
							UNION ALL SELECT '30yr',360
				
				SELECT @sql =
					'INSERT INTO '+ @table +'
									(
										[source_curve_def_id],
										[source_system_id],
										[as_of_date],
										[Assessment_curve_type_value_id],
										[curve_source_value_id],
										[maturity_date],
										[maturity_hour],
										[curve_value],
										[is_dst])
					SELECT 
					final_set.curve_id
					, final_set.source_system_id
					, final_set.asofdate
					, final_set.Assessment_curve_type_value_id
					, final_set.curve_source_value_id
					, final_set.maturity_date
					, final_set.maturity_hour
					, final_set.Curve_value
					, final_set.is_dst
					 FROM 
					(					
						SELECT spcd.curve_id,2 [source_system_id],asofdate,77[Assessment_curve_type_value_id],4500[curve_source_value_id],a.maturity_date,NULL [maturity_hour],a.Curve_value,0 [is_dst]
						from 
					(
						select asofdate,maturity_date,Curve_value from 
						(
							SELECT RowNumber,dt.asofdate,DATEADD(MONTH,no_months, cast(stuff(asofdate,1,2,''01'') AS DATETIME)) maturity_date  , col.column_name  from #source_table_columns col 
							CROSS JOIN 
							(
								SELECT ROW_NUMBER() OVER(ORDER BY id) AS RowNumber,* FROM stage_source_price_curve_treasury WHERE asOfDate IS NOT NULL
							) dt
						) cur_date 
						INNER JOIN
						(
							SELECT RowNumber, column_name, Curve_value
							FROM 
							   (
									SELECT ROW_NUMBER() OVER(ORDER BY id) AS RowNumber,[1mo], [3mo],[6mo],[1yr],[2yr],[3yr],[5yr],[7yr],[10yr],[20yr],[30yr],[30yrDisplay] from stage_source_price_curve_treasury where asOfDate is  null
								) p
							UNPIVOT
							   ( Curve_value FOR column_name IN 
								  ([1mo], [3mo],[6mo],[1yr],[2yr],[3yr],[5yr],[7yr],[10yr],[20yr],[30yr],[30yrDisplay])
								)AS unpvt
						) cur_value on cur_date.RowNumber=cur_value.RowNumber and cur_date.column_name=cur_value.column_name 
							WHERE Curve_value IS NOT NULL
						)  a cross join source_price_curve_def spcd where spcd.market_value_id=''Treasury Yield''
					) final_set
				WHERE asofdate = REPLACE(CONVERT(VARCHAR(20),GETDATE(),6),'' '',''-'')'
				
				EXEC spa_print @sql	
				EXEC(@sql)	
				set @call_import_data=1

--				INSERT INTO #ErrorHandler EXEC spa_import_data_job @table,'4008',@job_name,@process_id,@user,'y'
			END TRY 
			BEGIN CATCH				
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error','Import Data','Treasury','Data Error','Error in Treasury Data ('+ERROR_MESSAGE()+')','Please verify connection.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'Treasury','Data Error','Error in Treasury Data ('+ERROR_MESSAGE()+')'
			END CATCH
		END
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=4)	-- RWE Price curve
		BEGIN
			set @send_email='n'
			set @call_import_data=1
			update stage_spc set [source_curve_def_id]=replace([source_curve_def_id],'#','_')
			-- your code here. Find the imported data in the table stage_spc
			BEGIN TRY
				set @sql ='INSERT INTO '+ @table + '
			   (
					[source_curve_def_id],
					[source_system_id],
					[as_of_date],
					[Assessment_curve_type_value_id],
					[curve_source_value_id],
					[maturity_date],
					[maturity_hour],
					[curve_value],
					[table_code]
					)
				 select 
					[source_curve_def_id],
					3 [source_system_id],
					CONVERT(datetime,[as_of_date],105) [as_of_date],
					77 [Assessment_curve_type_value_id],
					4500 [curve_source_value_id],
					convert(varchar(10),CONVERT(datetime,[maturity_date],105),101) [maturity_date],
					[maturity_hour],
					[curve_value],
					4008 [table_code]
					 from stage_spc
					'
			
			exec spa_print @sql
			EXEC(@sql)
			SELECT  @as_of_date_import=max(CONVERT(datetime,[as_of_date],105)) from stage_spc
				
			END TRY 
			BEGIN CATCH				
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error','Import Data','RWE Price curve','Data Error','Error in RWE Price curve Data ('+ERROR_MESSAGE()+')','Please verify connection.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'RWE Price curve','Data Error','Error in RWE Price curve Data ('+ERROR_MESSAGE()+')'
			END CATCH
	
			
		END
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=5)	-- RWE Deal
		BEGIN
			-- your code here. Find the imported data in the table stage_sdd
			set @send_email='n'
			set @call_import_data=1
						
		--	update stage_sdd set [fileName]=substring([fileName],17,7)
			SELECT  @as_of_date_import=max(CAST('20'+substring([fileName],17,7) AS DATETIME)) from stage_sdd


			---logic for voided deal
			CREATE TABLE #void_deal(deal_id VARCHAR(150) COLLATE DATABASE_DEFAULT )

			insert into deal_voided_in_external(source_deal_header_id,deal_id,voided_date,create_ts,tran_status)
			OUTPUT  inserted.deal_id INTO #void_deal
			select sdh.source_deal_header_id,s.deal_id, max(CAST('20'+substring(s.[fileName],17,7) AS DATETIME)) voided_date ,GETDATE() create_ts,'v' tran_status
			FROM  stage_sdd s INNER JOIN source_deal_header sdh ON s.deal_id=sdh.deal_id AND sdh.source_system_id =3
			AND CONVERT(datetime,s.[contract_expiration_date],105)> @as_of_date_import
			LEFT JOIN deal_voided_in_external v on sdh.source_deal_header_id=v.source_deal_header_id
			WHERE v.source_deal_header_id is null
			GROUP BY s.deal_id ,sdh.source_deal_header_id
			HAVING SUM(abs(CAST(isnull(s.[deal_volume],0) AS FLOAT)))=0
--------------------------------------------


--			BEGIN TRY
			SELECT @table = tname FROM @tablename
			update stage_sdd set curve_id=replace(curve_id,'#','_'), payindex=replace(payindex,'#','_'), receiveindex=replace(receiveindex,'#','_')
			set @sql ='INSERT INTO '+ @table + '
		   ([deal_id]
           ,[source_system_id]
           ,[term_start]
           ,[term_end]
           ,[Leg]
           ,[contract_expiration_date]
           ,[fixed_float_leg]
           ,[buy_sell_flag]
           ,[curve_id]
           ,[fixed_price]
           ,[fixed_price_currency_id]
           ,[option_strike_price]
           ,[deal_volume]
           ,[deal_volume_frequency]
           ,[deal_volume_uom_id]
           ,[block_description]
           ,[deal_detail_description]
           ,[formula_id]
           ,[deal_date]
           ,[ext_deal_id]
           ,[physical_financial_flag]
           ,[structured_deal_id]
           ,[counterparty_id]
           ,[source_deal_type_id]
           ,[source_deal_sub_type_id]
           ,[option_flag]
           ,[option_type]
           ,[option_excercise_type]
           ,[source_system_book_id1]
           ,[source_system_book_id2]
           ,[source_system_book_id3]
           ,[source_system_book_id4]
           ,[description1]
           ,[description2]
           ,[description3]
           ,[deal_category_value_id]
           ,[trader_id]
           ,[header_buy_sell_flag]
           ,[broker_id]
           ,[contract_id]
           ,[legal_entity]
           ,[table_code])
			 select 
				   sdd.[deal_id]
				   ,3
				   ,convert(VARCHAR(10),CONVERT(datetime,sdd.[contract_expiration_date],105),120) [term_start]
				   ,dateadd(month,1,CONVERT(datetime,sdd.[contract_expiration_date],105))-1 [term_end]
				   ,1
				   ,dateadd(month,1,CONVERT(datetime,sdd.[contract_expiration_date],105))-1 [contract_expiration_date]
				   ,''t''
				   ,case when isnull(ExternalIndicator,''n'')=''y'' then
           				case when sdd.curve_id=PayIndex then ''b''
           					when sdd.curve_id=ReceiveIndex then ''s''
           				end	
					  when isnull(ExternalIndicator,''n'')=''n'' then
           				case when sdd.curve_id=PayIndex then ''s''
           					when sdd.curve_id=ReceiveIndex then ''b''
           				end	
           			end	 [buy_sell_flag]
				   ,sdd.[curve_id]
				   ,[fixed_price]
				   ,''GBP'' [fixed_price_currency_id]
				   ,[option_strike_price]
				   ,[deal_volume]
				   ,''m'' [deal_volume_frequency]
				   ,case when sc.commodity_id=''Natural Gas'' then ''M3''
						when sc.commodity_id=''Coal'' then ''Metric Ton''
						when sc.commodity_id=''Electricity'' then ''Mwh''
					end [deal_volume_uom_id]
				   ,[block_description]
				   ,[deal_detail_description]
				   ,sdd.[formula_id]
				   ,CONVERT(datetime,sdd.[deal_date],105) [deal_date]
				   ,[ext_deal_id]
				   ,case when [source_deal_type_id]=''-SWP'' then ''t'' else ''p'' end [physical_financial_flag]
				   ,[structured_deal_id]
				   ,[counterparty_id]
				   ,right([source_deal_type_id],3) [source_deal_type_id]
				   ,[source_deal_sub_type_id]
				   ,''n'' [option_flag]
				   ,[option_type]
				   ,[option_excercise_type]
				   ,[source_system_book_id1]
				   ,[source_system_book_id2]
				   ,sdd.curve_id [source_system_book_id3]
				   ,ExternalIndicator [source_system_book_id4]
				   ,[description1]
				   ,[description2]
				   ,[description3]
				   ,475
				   ,[trader_id]
				   ,case when isnull(ExternalIndicator,''n'')=''y'' then
           				case when sdd.curve_id=PayIndex then ''b''
           					when sdd.curve_id=ReceiveIndex then ''s''
           				end	
					  when isnull(ExternalIndicator,''n'')=''n'' then
           				case when sdd.curve_id=PayIndex then ''s''
           					when sdd.curve_id=ReceiveIndex then ''b''
           				end	
           			end	 [header_buy_sell_flag]
				   ,[broker_id]
				   ,[contract_id]
				   ,[legal_entity]
				   ,4005 [table_code]	
				from stage_sdd sdd left join source_price_curve_def spcd on spcd.curve_id=sdd.curve_id 
					left join source_commodity sc on sc.source_commodity_id=spcd.commodity_id
				where 
				     CONVERT(datetime,sdd.[contract_expiration_date],105)>'''+ cast(@as_of_date_import as varchar)+'''
				'
			
			exec spa_print @sql
			EXEC(@sql)
--			select *  from stage_sdd
--			exec('select * from '+@table)
--return
--











--			END TRY 
--			BEGIN CATCH				
--					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
--						SELECT @process_id,'Error','Import Data','RWE Deal','Data Error','Error in RWE Deal Data ('+ERROR_MESSAGE()+')','Please verify connection.'
--
--					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
--						SELECT @process_id,'RWE Deal','Data Error','Error in RWE Deal Data ('+ERROR_MESSAGE()+')'
--			END CATCH
			
		END
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=6)	-- RWE MTM
		BEGIN
			set @send_email='n'
			set @call_import_data=0
			-- your code here. Find the imported data in the table select * from stage_ddf
			BEGIN TRY
			BEGIN tran

			update stage_ddf set [fileName]=substring([fileName],11,7)
			DELETE [dbo].[source_deal_discount_factor] FROM [source_deal_discount_factor] s
			INNER JOIN source_deal_header sdh ON s.source_deal_header_id=sdh.source_deal_header_id
			INNER JOIN stage_ddf t on s.as_of_date= CAST('20'+t.[fileName] AS DATETIME)
			AND t.source_deal_header_id=sdh.deal_id AND convert(VARCHAR(10),CONVERT(datetime,t.[maturity],105),120)=s.maturity
			AND sdh.source_system_id=3
			
			INSERT INTO [dbo].[source_deal_discount_factor](
				[as_of_date] ,
				[source_deal_header_id],
				[maturity],
				[market_price],
				[discount_factor],
				[create_user],
				[create_ts])
			select	CAST('20'+a.[fileName] AS DATETIME),
			sdh.source_deal_header_id,
			convert(VARCHAR(10),CONVERT(datetime,a.[maturity],105),120),
			isnull(market_price,0),
			isnull(discount_factor,0),dbo.FNADBUser(),GETDATE()
			FROM stage_ddf a INNER JOIN source_deal_header sdh ON a.source_deal_header_id=sdh.deal_id AND sdh.source_system_id=3
			
			SELECT  @as_of_date_import=max(CAST('20'+[fileName] AS DATETIME)) from stage_ddf

			
			INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
				SELECT @process_id,'Success','Import Data','RWE MTM','Data Import',cast(COUNT(*) AS VARCHAR)+ ' deal detail discount factors imported successfully out of  rows '+cast(COUNT(*) AS VARCHAR)+' records.','Please verify data.'
				FROM stage_ddf a INNER JOIN source_deal_header sdh ON a.source_deal_header_id=sdh.deal_id
			COMMIT
			END TRY 
			BEGIN CATCH	
				ROLLBACK			
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error','Import Data','RWE MTM','Data Error','Error in RWE MTM Data ('+ERROR_MESSAGE()+')','Please check data.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'RWE MTM','Data Error','Error in RWE MTM Data ('+ERROR_MESSAGE()+')'
			END CATCH

		END

		if @call_import_data=1
			INSERT INTO #ErrorHandler EXEC spa_import_data_job @table,@table_no,@job_name,@process_id,@user,'y',6
		
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=5)	-- RWE Deal
			UPDATE source_deal_header	SET		term_frequency = 'm'	WHERE term_frequency IS null
	END

	IF @dataType = 'Error'
	BEGIN
		SET @parseType = ISNULL(NULLIF(@parseType,''), '0')
		EXEC spa_print 'Problem in connection'
		INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
			SELECT  @process_id,'Error','Import Data',CASE item WHEN 1 THEN 'Platts'
												WHEN 2 THEN 'NYMEX'
												WHEN 3 THEN 'Treasury'
												WHEN 4 THEN 'RWE price curve'
												WHEN 5 THEN 'RWE deal'
												WHEN 6 THEN 'RWE MTM discount factor'
												ELSE 'Data'
										END,'Data Error','Error in connection(' 
							+ CASE item WHEN '1' THEN 'FTP URL'
										WHEN '2' THEN 'NYMEX Web site'
										WHEN '3' THEN 'Treasury Web site'
										WHEN '4' THEN 'RWE price curve'
										WHEN '5' THEN 'RWE deal'
										WHEN '6' THEN 'RWE MTM discount factor'
										ELSE 'Data'
								END +').','Please verify the connection string.' 
						FROM dbo.splitCommaseperatedValues(@parseType) GROUP BY item

		INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
			SELECT  @process_id,CASE item WHEN 1 THEN 'Platts'
												WHEN 2 THEN 'NYMEX'
												WHEN 3 THEN 'Treasury'
												WHEN 4 THEN 'RWE price curve'
												WHEN 5 THEN 'RWE deal'
												WHEN 6 THEN 'RWE MTM discount factor'
												ELSE 'Data'
										END,'Data Error','Error in connection('
							+ CASE item WHEN '1' THEN 'FTP URL'
										WHEN '2' THEN 'NYMEX Web site'
										WHEN '3' THEN 'Treasury Web site'
										WHEN '4' THEN 'RWE price curve'
										WHEN '5' THEN 'RWE deal'
										WHEN '6' THEN 'RWE MTM discount factor'
										ELSE 'Data'										
								END +').' FROM dbo.splitCommaseperatedValues(@parseType) GROUP BY item
	END 
	declare @url_email varchar(2000)
	SELECT @count=COUNT(*) FROM source_system_data_import_status_detail WHERE process_id=@process_id AND ([type]='Error' OR [type]='Data Error'OR [type]='Data Warning')
	IF @count >0
		SET @errorcode='e'
	ELSE
		SET @errorcode='s'
	SELECT @url_email =php_path+ '/dev/spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status ''' + @process_id + ''','''+@user+''''
		from connection_string
	
				
	SELECT @url = './dev/spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status ''' + @process_id + ''','''+@user+''''

	SELECT @desc = '<a target="_blank" href="' + @url + '">' 
									+ CASE item WHEN 1 THEN 'Price Import from Platts completed for as of date:'+ dbo.FNAUserDateFormat(@as_of_date_import, @user)
												WHEN 2 THEN 'Price Import from NYMEX completed for as of date:'+ dbo.FNAUserDateFormat(@as_of_date_import, @user)
												WHEN 3 THEN 'Price Import fromTreasury completed for as of date:'+ dbo.FNAUserDateFormat(@as_of_date_import, @user)
												WHEN 4 THEN 'Price curve import completed for as of date:'+ dbo.FNAUserDateFormat(@as_of_date_import, @user)
												WHEN 5 THEN 'Deal import completed for as of date:'+ dbo.FNAUserDateFormat(@as_of_date_import, @user)
												WHEN 6 THEN 'MTM discount factor import completed for as of date:' + dbo.FNAUserDateFormat(@as_of_date_import, @user)
												ELSE 'Data import completed for as of date:' + dbo.FNAUserDateFormat(@as_of_date_import, @user)
										END +
				CASE WHEN (@errorcode = 'e') THEN ' (ERRORS found)' ELSE '' END +
				'.</a>' FROM dbo.splitCommaseperatedValues(@parseType)  GROUP BY item

	IF  NOT EXISTS(SELECT 'x' FROM import_data_files_audit WHERE process_id=@process_id)
		INSERT import_data_files_audit
		(	dir_path,
			imp_file_name,
			as_of_date,
			[status],
			elapsed_time,
			process_id,
			create_user
		)
		VALUES
		(
			'Auto Import',
			'Data upload',
			CONVERT(VARCHAR(10),isnull(@as_of_date_import,GETDATE()),120),
			@errorcode,
			DATEDIFF(ss,@run_start_time,GETDATE()),
			@process_id,
			@user
		)

	--emailing if error found
	IF @count >0
	BEGIN
		IF @send_email='y'
		BEGIN
			IF  NOT EXISTS(SELECT 'k' FROM message_board WHERE process_id=@process_id)
			BEGIN
				SELECT @desc =  
							CASE item WHEN 1 THEN 'Price Import from Platts'
									  WHEN 2 THEN 'Price Import from NYMEX'
									  WHEN 3 THEN 'Price Import from Treasury'
									  WHEN 4 THEN 'Price Import from price curve'
									  WHEN 5 THEN 'Deal import'
									  WHEN 6 THEN 'Discount factor import'
									  ELSE 'Data'
							END +' completed for as of date:' + dbo.FNAUserDateFormat(GETDATE(), @user) + 
						' (ERRORS found)' FROM dbo.splitCommaseperatedValues(@parseType)  GROUP BY item
				
				SET @desc_detail=''

				SELECT  @desc_detail=@desc_detail+ isnull([description],'')+' ('+isnull(source,'')+');' FROM source_system_data_import_status
					WHERE process_id=@process_id and code='Error'

				EXEC spa_interface_Adapter_email @process_id,2,@desc,@desc_detail,@url_email

				RETURN
			END
		END
	END

	IF @send_email='y'
	BEGIN
		IF NOT EXISTS(SELECT 'x' FROM message_board WHERE process_id=@process_id)
		BEGIN
			DECLARE list_user CURSOR FOR 
					SELECT application_users.user_login_id	
							FROM dbo.application_role_user 
								INNER JOIN dbo.application_security_role 
									ON dbo.application_role_user.role_id = dbo.application_security_role.role_id 
								INNER JOIN dbo.application_users 
									ON dbo.application_role_user.user_login_id = dbo.application_users.user_login_id
					WHERE (dbo.application_users.user_active = 'y') AND (dbo.application_security_role.role_type_value_id =2) 
							--AND  dbo.application_users.user_emal_add  IS NOT NULL
					GROUP BY dbo.application_users.user_login_id,  dbo.application_users.user_emal_add

			OPEN list_user

			FETCH NEXT FROM list_user INTO 	@user

			WHILE @@FETCH_STATUS = 0
			BEGIN				
				EXEC  spa_message_board 'i', @user,NULL, 'Import Data',@desc, '', '', @errorcode, 'Interface Adaptor',null,@process_id
				FETCH NEXT FROM list_user INTO 	@user
			END

			CLOSE list_user
			DEALLOCATE list_user
		END
	END
	ELSE
	BEGIN
		IF  NOT EXISTS(SELECT 'x' FROM message_board WHERE process_id=@process_id)
		BEGIN
			
			DECLARE list_user CURSOR FOR 
					SELECT application_users.user_login_id	
							FROM dbo.application_role_user 
								INNER JOIN dbo.application_security_role 
									ON dbo.application_role_user.role_id = dbo.application_security_role.role_id 
								INNER JOIN dbo.application_users 
									ON dbo.application_role_user.user_login_id = dbo.application_users.user_login_id
					WHERE (dbo.application_users.user_active = 'y') AND (dbo.application_security_role.role_type_value_id =2) 
					GROUP BY dbo.application_users.user_login_id

			OPEN list_user
			FETCH NEXT FROM list_user INTO 	@user

			WHILE @@FETCH_STATUS = 0
			BEGIN				
				IF @no_file = 1 
				EXEC  spa_message_board 'i', @user,NULL, 'Import Data','Error: Price Curve Not found', '', '', @errorcode, 'Interface Adaptor',NULL,@process_id
					ELSE 
				EXEC  spa_message_board 'i', @user,NULL, 'Import Data',@desc, '', '', @errorcode, 'Interface Adaptor',NULL,@process_id
			FETCH NEXT FROM list_user INTO 	@user
			END

				CLOSE list_user
				DEALLOCATE list_user
		END
	END

	/*
	select * from message_board --where process_id='11242009_1637'
	select * from message_board --where process_id='11242009_1637'
	select * from source_system_data_import_status ---where process_id='11242009_1637'
	select * from source_system_data_import_status_detail --where process_id='11242009_1637'

	delete message_board --where process_id='11242009_1637'
	delete message_board --where process_id='11242009_1637'
	delete source_system_data_import_status --where process_id='11242009_1637'
	delete source_system_data_import_status_detail --where process_id='11242009_1637'
	*/
--END -- End Of tjhe Procedure
