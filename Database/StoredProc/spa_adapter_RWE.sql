
IF OBJECT_ID('dbo.spa_adapter_rwe','p') IS NOT NULL
DROP PROC dbo.spa_adapter_rwe
GO
CREATE PROC dbo.spa_adapter_rwe
@dataType		VARCHAR(10),
@parseType		varchar(100)=null	   ,
@process_id		VARCHAR(100)=null,
@job_name		VARCHAR(100)=null,
@send_email		VARCHAR(1)='y',
@err_msg VARCHAR(5000)=null
AS


/*


----BEGIN

DECLARE @dataType VARCHAR(10),@parseType varchar(100)  ,
@process_id		VARCHAR(100),@job_name	VARCHAR(100),@send_email VARCHAR(1),@err_msg VARCHAR(5000)

select @dataType='spc',
@parseType='4' ,--'4'		   ,
@process_id	='20100908_135529',
@job_name='wwggfffwdddffqfaa',
@send_email	='n',@err_msg='tttttttttttttttttttttttttt'


DROP TABLE #tmp_status
DROP TABLE #ErrorHandler
DROP TABLE #void_deal
DROP TABLE #tmp_dicount_factor
--DROP TABLE  #source_table_columns 

--*/

/*
@client
				ladwp 
				gateway

@dataType
				spc  - Source Price Curve
				spcd - Source Price Curve Definition

@parseType		
				Source could be different for the same @dataType and format of the file could be different depending upon 
				the source. So, to differentiate the insertion logic to @table this 
				parameter is used.

				1 - The file in .ftp format
				2 - CSV file generated by data scrapping from NYMEX site.
				3 - XML file generated by data scrapping from Treasury site.
*/
	--declare @send_email varchar(1)
DECLARE @errorMsg			VARCHAR(200)	,
	@errorcode			VARCHAR(200)	,
	@detail_errorMsg	VARCHAR(200)	,
	@url				VARCHAR(500)	,
	@desc				VARCHAR(500)	,
	@user				VARCHAR(100)	,			  	
	@table				VARCHAR(1000)	,
	@sql				VARCHAR(8000)	,		  
	@desc_detail		VARCHAR(8000)	,
	@error				INT				,
	@id					INT				,
	@count				INT				,
	@totalcount			INT				,
	@run_start_time		DATETIME		


DECLARE @tablename TABLE (tname VARCHAR(1000))
declare @e_time INT, @e_time_text varchar(100)

declare  @filename VARCHAR(200),@as_of_date VARCHAR(10),@import_process_table VARCHAR(MAX),@msg_board_err bit 
,@main_process_id VARCHAR(50),@process_id1 VARCHAR(50),@process_id2 VARCHAR(50),@process_id3 VARCHAR(50),@start_ts DATETIME

IF @process_id IS NULL
begin
	SET @process_id = REPLACE(NEWID(),'-','_')
	SET @start_ts=GETDATE()

END
ELSE
BEGIN
	IF LEN(@process_id)=15
		SET @start_ts=convert(datetime,left(@process_id,8)+' ' + left(right(@process_id,6),2)+':'+ left(right(@process_id,4),2)+':'+right(@process_id,2),120)
	ELSE
		SET @start_ts=GETDATE()
END
EXEC spa_print 'SSIS Run Time:', @start_ts
DELETE @tablename

DECLARE @table_no VARCHAR(10),@folderEndurOrUser VARCHAR(1), @url_email varchar(2000),@no_rec INT, @out_of_rec INT 
,@max_date VARCHAR(20),@create_time VARCHAR(20),@fileType VARCHAR(20),@filename_status VARCHAR(1000),	@i as tinyint




SELECT @user = dbo.FNADBuser()	
DECLARE @as_of_date_import DATETIME

-- Creation Of Temp Tables
CREATE TABLE #ErrorHandler
(
	err_code		VARCHAR(50) COLLATE DATABASE_DEFAULT	,
	module			VARCHAR(50) COLLATE DATABASE_DEFAULT	,
	area			VARCHAR(50) COLLATE DATABASE_DEFAULT	,
	[status]		VARCHAR(50) COLLATE DATABASE_DEFAULT	,
	msg				VARCHAR(500) COLLATE DATABASE_DEFAULT,
	recommendation  VARCHAR(1000) COLLATE DATABASE_DEFAULT
)
create table #tmp_status (
	process_id varchar(50) COLLATE DATABASE_DEFAULT,source varchar(500) COLLATE DATABASE_DEFAULT,[type]  varchar(500) COLLATE DATABASE_DEFAULT,[description]  varchar(5000) COLLATE DATABASE_DEFAULT
)
--	SET @process_id=null


	set @main_process_id=@process_id
--	SELECT @url = './dev/spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status ''' + @process_id + ''','''+@user+''''
--	SELECT @desc = '<a target="_blank" href="' + @url + '">View Log</a>'
	
	set @send_email='n'


IF @parseType IS null OR  @parseType='NULL' OR @parseType='' --to handle SSIS Error exception 
BEGIN
	
	IF @max_date IS null
		set @max_date=CONVERT(VARCHAR(10),GETDATE(),120)
	SET @msg_board_err=1
	goto messageboard

END



	IF @dataType = 'spc'
	BEGIN
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=5)	-- RWE Deal
		BEGIN
				SET @process_id = REPLACE(NEWID(),'-','_')
				set @i=1
				exec dbo.spa_deal_interface_adapter;

				SET @table_no=4005

				CREATE TABLE #void_deal(
						source_deal_header_id INT 
						,deal_id VARCHAR(150) COLLATE DATABASE_DEFAULT 
						,voided_date DATETIME
						,create_ts DATETIME
						,tran_status VARCHAR(10) COLLATE DATABASE_DEFAULT
				)
				
				DELETE @tablename
				INSERT INTO @tablename EXEC dbo.spa_import_temp_table @table_no
				SELECT @table = tname FROM @tablename
				DECLARE cur_files CURSOR LOCAL FOR 
				SELECT [filename],max(fileAsOfDate)  fileAsOfDate,folderEndurOrUser,max(fileType) fileType,max(fileTimeStamp )fileTimeStamp
				  FROM adiha_process.dbo.stage_deals 
				GROUP BY folderEndurOrUser,[FILENAME] 
				ORDER BY folderEndurOrUser,fileType,fileAsOfDate,fileTimeStamp 
				OPEN cur_files
				FETCH NEXT FROM cur_files INTO @filename,@as_of_date,@folderEndurOrUser,@fileType,@create_time
				WHILE @@FETCH_STATUS = 0
				BEGIN
					BEGIN TRY
					set @as_of_date=left(replace(replace(replace(@filename,'IAS39_PHY_TRADE_PWR_',''),'IAS39_PHY_TRADE_',''),'IAS39_FIN_TRADE_',''),8)
					EXEC spa_print '########################################################Start: ', @import_process_table
					if isnull(@max_date,'19000101')<@as_of_date
						set @max_date=@as_of_date
					SET @run_start_time=GETDATE()

					--SET @import_process_table = dbo.FNAProcessTableName(@folderEndurOrUser+replace(@filename,'.txt',''), @user, @process_id)

					SET @import_process_table = dbo.FNAProcessTableName('deal'+cast(@i as varchar), @user, @process_id)
					set @i=@i+1

					--select @import_process_table
					set @filename_status=case when @folderEndurOrUser='e' then 'Endur/' else 'User/' end + @filename
					EXEC('select * into ' +@import_process_table +' from '+ @table)
					TRUNCATE table #ErrorHandler
		--------------------------------------------------------------------------------------

					set @sql ='INSERT INTO '+ @import_process_table + '
					   ([deal_id]
					   ,[source_system_id]
					   ,[term_start]
					   ,[term_end]
					   ,[Leg]
					   ,[contract_expiration_date]
					   ,[fixed_float_leg]
					   ,[buy_sell_flag]
					   ,[curve_id]
					   ,[fixed_price]
					   ,[fixed_price_currency_id]
					   ,[option_strike_price]
					   ,[deal_volume]
					   ,[deal_volume_frequency]
					   ,[deal_volume_uom_id]
					   ,[block_description]
					   ,[deal_detail_description]
					   ,[formula_id]
					   ,[deal_date]
					   ,[ext_deal_id]
					   ,[physical_financial_flag]
					   ,[structured_deal_id]
					   ,[counterparty_id]
					   ,[source_deal_type_id]
					   ,[source_deal_sub_type_id]
					   ,[option_flag]
					   ,[option_type]
					   ,[option_excercise_type]
					   ,[source_system_book_id1]
					   ,[source_system_book_id2]
					   ,[source_system_book_id3]
					   ,[source_system_book_id4]
					   ,[description1]
					   ,[description2]
					   ,[description3]
					   ,[deal_category_value_id]
					   ,[trader_id]
					   ,[header_buy_sell_flag]
					   ,[broker_id]
					   ,[contract_id]
					   ,[legal_entity]
					   ,[table_code])
						select 
						   sdd.[deal_id]
						   ,3
						   ,convert(VARCHAR(10),CONVERT(datetime,sdd.[term_start],103),120) [term_start]
						   ,dateadd(month,1,CONVERT(datetime,sdd.[term_start],103))-1 [term_end]
						   ,1
						   ,convert(VARCHAR(10),CONVERT(datetime,sdd.[contract_expiration_date],103),120) [contract_expiration_date]
						   ,''t''
						   ,
           					case when sdd.curve_id=PayIndex then ''s''
           							when sdd.curve_id=ReceiveIndex then ''b''
           					end	 [buy_sell_flag]
						   ,sdd.[curve_id]
						   ,[fixed_price]						
							,case when len(sdd.[curve_id_name])-charindex(''.'',sdd.[curve_id_name],1)=3 then
								right(sdd.[curve_id_name],3) 
							else
								''UNKNOWN''	
							end	[fixed_price_currency_id]
						   ,[option_strike_price]
						   ,[deal_volume]
						   ,''m'' [deal_volume_frequency]
						   ,case when source_system_book_id1=''FI_UKGAS'' then ''Therms''
								when source_system_book_id1=''FI_COAL'' then ''Metric Tons''
								when source_system_book_id1=''FI_UKPWR'' then ''MWh''
								else
									''UNKNOWN''	
							end [deal_volume_uom_id]
						   ,[block_description]
						   ,[deal_detail_description]
						   ,sdd.[formula_id]
						   ,CONVERT(datetime,sdd.[deal_date],103) [deal_date]
						   ,[ext_deal_id]
						   ,case when [source_deal_type_id]=''PHY'' then ''p'' else ''f'' end [physical_financial_flag]
						   ,[structured_deal_id]
						   ,[counterparty_id]
							,[source_deal_type_id]
						   ,[source_deal_sub_type_id]
						   ,''n'' [option_flag]
						   ,[option_type]
						   ,[option_excercise_type]
						   ,[source_system_book_id1]
						   ,[source_system_book_id2]
						   ,sdd.curve_id [source_system_book_id3]
						   ,ExternalIndicator [source_system_book_id4]
						   ,[description1]
						   ,[description2]
						   ,[description3]
						   ,475
						   ,[trader_id]
						   ,
           						case when sdd.curve_id=PayIndex then ''s''
           							when sdd.curve_id=ReceiveIndex then ''b''
           						end	
           						 [header_buy_sell_flag]
						   ,[broker_id]
						   ,[contract_id]
						   ,[legal_entity]
						   ,4005 [table_code]	
						from stage_sdd sdd left join source_price_curve_def spcd on spcd.curve_id=sdd.curve_id and spcd.source_system_id =3
							left join source_commodity sc on sc.source_commodity_id=spcd.commodity_id and sc.source_system_id=3
						where 
							 CONVERT(datetime,sdd.[term_start],103)> CAST('''+@as_of_date  +''' AS DATETIME)
							 and sdd.filename='''+ @filename + ''' AND folderEndurOrUser='''+ @folderEndurOrUser+'''
						'
					
					exec spa_print @sql
					EXEC(@sql)
					
					INSERT INTO #ErrorHandler EXEC spa_import_data_job @import_process_table,@table_no,@job_name,@process_id,@user,'y',6,NULL,NULL,@filename_status
					IF EXISTS(SELECT 1 FROM #ErrorHandler WHERE err_code='Error') 
						set @errorcode='e'
					ELSE
						set @errorcode='s'

					--------------------------------Voided Deal----------------------------------------
					
					EXEC spa_print 'Insert into deal_voided_in_external'
					insert into deal_voided_in_external(source_deal_header_id,deal_id,voided_date,create_ts,tran_status)
					OUTPUT  inserted.source_deal_header_id,inserted.deal_id,inserted.voided_date,inserted.create_ts,inserted.tran_status INTO #void_deal
					select sdh.source_deal_header_id,s.deal_id, CAST(@as_of_date  AS DATETIME) voided_date ,GETDATE() create_ts,'v' tran_status
					FROM  stage_sdd s INNER JOIN source_deal_header sdh ON s.deal_id=sdh.deal_id AND sdh.source_system_id =3 
					AND trade_status='V' AND s.[filename]=@filename AND folderEndurOrUser=@folderEndurOrUser
					AND CONVERT(datetime,s.[term_start],103)> CAST(@as_of_date  AS DATETIME)
					LEFT JOIN deal_voided_in_external v on sdh.source_deal_header_id=v.source_deal_header_id
					WHERE v.source_deal_header_id is null
					GROUP BY s.deal_id ,sdh.source_deal_header_id
				
					if  exists(select * from #void_deal)
					begin
						insert into source_system_data_import_status(process_id,code,module,source,type,[description],recommendation) 
								select @process_id,'Warning',@filename_status,'voided_deal','Data Warning',cast(count(*) as varchar)+' Voided deals found in RWE Endur(at:'+ cast(getdate() as varchar)+')','Please verify and correct the voided deal in FasTracker.'
								from #void_deal
						insert into source_system_data_import_status_detail(process_id,source,
								type,[description]) 
								select @process_id,'voided_deal',@filename_status,'Voided Deal Found in RWE Endur(Deal_ID:'+deal_id+' Voided_Date:'+dbo.fnadateformat(voided_date)+')' from #void_deal
					end

					TRUNCATE	TABLE #void_deal
					
				----------------------------------------------	
					
					
					insert import_data_files_audit(dir_path,
						imp_file_name,
						as_of_date,
						status,
						elapsed_time,
						process_id,
						create_user,
						source_system_id)
					values('Endur',
						@filename_status,
						convert(varchar(10),cast(@as_of_date as DATETIME),120),
						@errorcode,
						datediff(ss,@run_start_time,getdate()),
						@process_id,
						@user,
						3)
					set	@as_of_date_import=cast(@as_of_date as DATETIME)
					
					END TRY 
					BEGIN CATCH	
						INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
							SELECT @process_id,'Error','Import Data',@filename_status,'Data Error','Error in RWE Deal Data ('+ERROR_MESSAGE()+')','Please verify connection.'

						INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
							SELECT @process_id,@filename_status,@filename_status,'Error in RWE Deal Data ('+ERROR_MESSAGE()+')'
							
		--				IF CURSOR_STATUS('local', 'cur_files') >= 0 
		--				BEGIN
		--					CLOSE cur_files
		--					DEALLOCATE cur_files;
		--				END
					END CATCH
					FETCH NEXT FROM cur_files INTO @filename,@as_of_date,@folderEndurOrUser,@fileType,@create_time
					
				END
				CLOSE cur_files
				DEALLOCATE cur_files
					
				EXEC spa_print '##########################################################End: ', @import_process_table
			
			UPDATE source_deal_header	SET		term_frequency = 'm'	WHERE term_frequency IS NULL
			set @process_id1=@process_id
			goto Messaging
			level_4005:			

		END
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=6)	-- RWE MTM
		BEGIN
			SET @process_id = REPLACE(NEWID(),'-','_')
			SET @table_no=4006
			DELETE @tablename
			INSERT INTO @tablename EXEC dbo.spa_import_temp_table @table_no
			SELECT @table = tname FROM @tablename
			set @i=1
			DECLARE cur_files CURSOR local FOR 
			SELECT [filename],max(fileAsOfDate)  fileAsOfDate,folderEndurOrUser,max(fileType) fileType,max(fileTimeStamp )fileTimeStamp
			  FROM adiha_process.dbo.stage_ddf GROUP BY folderEndurOrUser,[FILENAME] 
				ORDER BY folderEndurOrUser,fileType,fileAsOfDate,fileTimeStamp 
			OPEN cur_files
			FETCH NEXT FROM cur_files INTO @filename,@as_of_date,@folderEndurOrUser,@fileType,@create_time
			WHILE @@FETCH_STATUS = 0
			BEGIN
				BEGIN TRY

				set @as_of_date=left(replace(replace(replace(@filename,'IAS39_MTM_PWR_UKTrades_',''),'IAS39_MTM_PWR_',''),'IAS39_MTM_',''),8)
				if isnull(@max_date,'19000101')<@as_of_date
					set @max_date=@as_of_date

				SET @run_start_time=GETDATE()
				SET @import_process_table = dbo.FNAProcessTableName('mtm'+cast(@i as varchar), @user, @process_id)
				set @i=@i+1

				set @filename_status=case when @folderEndurOrUser='e' then 'Endur/' else 'User/' end + @filename

				EXEC('select * into ' +@import_process_table +' from '+ @table)
				TRUNCATE table #ErrorHandler

				EXEC spa_print 'insert into #tmp_dicount_factor'
				
				SELECT sdh.source_deal_header_id,CAST(@as_of_date AS DATETIME) as_of_date,CONVERT(datetime,t.[maturity],103) maturity
				into #tmp_dicount_factor from source_deal_header sdh inner join adiha_process.dbo.stage_ddf t ON
				 t.source_deal_header_id=sdh.deal_id AND sdh.source_system_id=3
					and CONVERT(datetime,t.[maturity],103)> CAST(@as_of_date  AS DATETIME)
					AND  t.[fileName]=@filename  AND folderEndurOrUser=@folderEndurOrUser
					

				create index index_tmp_dicount_factor on #tmp_dicount_factor (source_deal_header_id, as_of_date,maturity)
									
				EXEC spa_print 'DELETE [dbo].[source_deal_discount_factor]'

				DELETE [dbo].[source_deal_discount_factor] FROM [source_deal_discount_factor] s
					INNER JOIN #tmp_dicount_factor sdh
					ON  sdh.source_deal_header_id=s.source_deal_header_id AND sdh.as_of_date=s.as_of_date and sdh.maturity=s.maturity
					
				DROP TABLE #tmp_dicount_factor
					
				EXEC spa_print 'INSERT INTO [dbo].[source_deal_discount_factor]'
				INSERT INTO [dbo].[source_deal_discount_factor](
					[as_of_date] ,
					[source_deal_header_id],
					[maturity],
					[market_price],
					[discount_factor],
					[create_user],
					[create_ts])
				select	CAST(@as_of_date AS DATETIME),
				sdh.source_deal_header_id,
				convert(VARCHAR(10),CONVERT(datetime,a.[maturity],105),120),
				isnull(a.market_price,0),
				isnull(a.discount_factor,0),dbo.FNADBUser(),GETDATE()
				FROM adiha_process.dbo.stage_ddf a 
				INNER JOIN source_deal_header sdh ON a.source_deal_header_id=sdh.deal_id AND sdh.source_system_id=3
				AND a.[fileName]=@filename  AND folderEndurOrUser=@folderEndurOrUser and CONVERT(datetime,a.[maturity],103)> CAST(@as_of_date  AS DATETIME)
				
				set	@as_of_date_import=cast(@as_of_date as DATETIME)
				
				SET @sql='
				INSERT INTO  '+ @import_process_table +'
				   ([source_deal_header_id]
				   ,[source_system_id]
				   ,[term_start]
				   ,[term_end]
				   ,[Leg]
				   ,[pnl_as_of_date]
				   ,[und_pnl]
				   ,[und_intrinsic_pnl]
				   ,[und_extrinsic_pnl]
				   ,[dis_pnl]
				   ,[dis_intrinsic_pnl]
				   ,[dis_extrinisic_pnl]
				   ,[pnl_source_value_id]
				   ,[pnl_currency_id]
				   ,[pnl_conversion_factor]
				   ,[pnl_adjustment_value]
				   ,[deal_volume]
				   )
  				select	
					a.source_deal_header_id,
					3 [source_system_id]
					,convert(VARCHAR(10),CONVERT(datetime,a.[maturity],103),120) [term_start]
					,dateadd(month,1,CONVERT(datetime,a.[maturity],103))-1 [term_end]
					,1 leg
					,CAST('''+@as_of_date  +''' AS DATETIME)  [pnl_as_of_date]
					,a.undiscounted_MTM_value [und_pnl],a.undiscounted_MTM_value [und_intrinsic_pnl],0 [und_extrinsic_pnl]
					,a.Discounted_MTM_value [dis_pnl],a.Discounted_MTM_value [dis_intrinsic_pnl],0 [dis_extrinisic_pnl]
					,775 [pnl_source_value_id]
					,isnull(sc.currency_id,''UNKNOWN'') [pnl_currency_id] --??
					,1 [pnl_conversion_factor]
					,0 [pnl_adjustment_value]
					,0 [deal_volume]
					FROM adiha_process.dbo.stage_ddf a left JOIN source_deal_header sdh ON a.source_deal_header_id=sdh.deal_id AND sdh.source_system_id=3
						left JOIN source_deal_detail sdd ON sdd.source_deal_header_id = sdh.source_deal_header_id
						 AND  convert(VARCHAR(10),CONVERT(datetime,a.[maturity],103),120)=sdd.term_start
						 AND sdd.leg=1
						left join source_currency sc on sc.source_currency_id=sdd.fixed_price_currency_id
  				where 
  					CONVERT(datetime,a.[maturity],103)> CAST('''+@as_of_date  +''' AS DATETIME)
						and a.filename='''+@filename +'''  AND folderEndurOrUser='''+@folderEndurOrUser+''' 
				   '
			   EXEC spa_print @sql
			   EXEC(@sql)
			   
				select	@no_rec =COUNT(*) FROM adiha_process.dbo.stage_ddf a INNER JOIN source_deal_header sdh 
					ON a.source_deal_header_id=sdh.deal_id AND sdh.source_system_id=3 AND a.[fileName]=@filename  AND folderEndurOrUser=@folderEndurOrUser
					where CONVERT(datetime,a.[maturity],103)> CAST(@as_of_date AS DATETIME)
  					
  					
				SELECT  @out_of_rec=COUNT(*) FROM adiha_process.dbo.stage_ddf WHERE [fileName]=@filename  AND folderEndurOrUser=@folderEndurOrUser
					and CONVERT(datetime,[maturity],103)> CAST(@as_of_date AS DATETIME)
				
				INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
					SELECT @process_id,CASE WHEN @out_of_rec= @no_rec THEN 'Success' ELSE 'Status' end,@filename_status,'MTM Discount Factor','Data Import',cast(@no_rec AS VARCHAR)+ ' deal detail discount factors imported successfully out of  rows '+cast(@out_of_rec AS VARCHAR)+' records.','Please verify data.'
					--FROM adiha_process.dbo.stage_ddf a INNER JOIN source_deal_header sdh ON a.source_deal_header_id=sdh.deal_id
									
				INSERT INTO #ErrorHandler EXEC spa_import_data_job @import_process_table,@table_no,@job_name,@process_id,@user,'y',6,NULL,NULL,@filename_status
				IF EXISTS(SELECT 1 FROM #ErrorHandler WHERE err_code='Error') 
					set @errorcode='e'
				ELSE
					set @errorcode='s'
				
				insert import_data_files_audit(dir_path,
					imp_file_name,
					as_of_date,
					status,
					elapsed_time,
					process_id,
					create_user,
					source_system_id)
				values('Endur',
					@filename_status,
					convert(varchar(10),cast(@as_of_date as DATETIME),120),
					@errorcode,
					datediff(ss,@run_start_time,getdate()),
					@process_id,
					@user,
					3)
					
					
				END TRY 
				BEGIN CATCH	
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error',@filename_status,'RWE MTM','Data Error','Error in RWE MTM Data ('+ERROR_MESSAGE()+')','Please check data.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'RWE MTM',@filename_status,'Error in RWE MTM Data ('+ERROR_MESSAGE()+')'
						
	--				IF CURSOR_STATUS('local', 'cur_files') >= 0 
	--				BEGIN
	--					CLOSE cur_files
	--					DEALLOCATE cur_files;
	--				END
				END CATCH	
					
				FETCH NEXT FROM cur_files INTO @filename,@as_of_date,@folderEndurOrUser,@fileType,@create_time
				
			END
			CLOSE cur_files
			DEALLOCATE cur_files


			set @process_id2=@process_id

			goto Messaging
			level_4006:			

		END
		IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=4)	-- RWE Price curve
		BEGIN
			SET @process_id = REPLACE(NEWID(),'-','_')
			SET @table_no=4008
			update adiha_process.dbo.stage_spc set [source_curve_def_id]=replace([source_curve_def_id],'#','_')
			set @i=1
			DELETE @tablename
			INSERT INTO @tablename EXEC dbo.spa_import_temp_table @table_no
			SELECT @table = tname FROM @tablename
		
			DECLARE cur_files CURSOR local FOR 
			SELECT [filename],max(fileAsOfDate)  fileAsOfDate,folderEndurOrUser,max(fileType) fileType,max(fileTimeStamp )fileTimeStamp
			  FROM adiha_process.dbo.stage_spc GROUP BY folderEndurOrUser,[FILENAME] 
				ORDER BY folderEndurOrUser,fileType,fileAsOfDate,fileTimeStamp 
			OPEN cur_files
			FETCH NEXT FROM cur_files INTO @filename,@as_of_date,@folderEndurOrUser,@fileType,@create_time
			WHILE @@FETCH_STATUS = 0
			BEGIN
				BEGIN TRY
				
				set @as_of_date=left(replace(@filename,'IAS39_CURVE_',''),8)
				
				if isnull(@max_date,'19000101')<@as_of_date
					set @max_date=@as_of_date

				SET @run_start_time=GETDATE()

				SET @import_process_table = dbo.FNAProcessTableName('price'+cast(@i as varchar), @user, @process_id)
				set @i=@i+1

				--select @import_process_table
				set @filename_status=case when @folderEndurOrUser='e' then 'Endur/' else 'User/' end + @filename

				
				EXEC('select * into ' +@import_process_table +' from '+ @table)
				TRUNCATE table #ErrorHandler

				set @sql ='INSERT INTO '+ @import_process_table + '
				   (
						[source_curve_def_id],
						[source_system_id],
						[as_of_date],
						[Assessment_curve_type_value_id],
						[curve_source_value_id],
						[maturity_date],
						[maturity_hour],
						[curve_value],
						[table_code]
						)
					 select 
						[source_curve_def_id],
						3 [source_system_id],
						CONVERT(datetime,[as_of_date],105) [as_of_date],
						77 [Assessment_curve_type_value_id],
						4500 [curve_source_value_id], ---4500 --775
						convert(varchar(10),CONVERT(datetime,[maturity_date],105),101) [maturity_date],
						[maturity_hour],
						[curve_value],
						4008 [table_code]
						 from adiha_process.dbo.stage_spc  where filename='''+ @filename+''' AND folderEndurOrUser='''+@folderEndurOrUser +''''
			
				exec spa_print @sql
				EXEC(@sql)
									
				INSERT INTO #ErrorHandler EXEC spa_import_data_job @import_process_table,@table_no,@job_name,@process_id,@user,'y',6,NULL,NULL,@filename_status
				IF EXISTS(SELECT 1 FROM #ErrorHandler WHERE err_code='Error') 
					set @errorcode='e'
				ELSE
					set @errorcode='s'
				
				insert import_data_files_audit(dir_path,
					imp_file_name,
					as_of_date,
					status,
					elapsed_time,
					process_id,
					create_user,
					source_system_id)
				values('Endur',
					@filename_status,
					convert(varchar(10),cast(@as_of_date as DATETIME),120),
					@errorcode,
					datediff(ss,@run_start_time,getdate()),
					@process_id,
					@user,
					3)
					
				set	@as_of_date_import=cast(@as_of_date as DATETIME)
				
				END TRY 
				BEGIN CATCH	
					INSERT INTO source_system_data_import_status(process_id,code,module,source,[type],[description],recommendation) 
						SELECT @process_id,'Error',@filename_status,'RWE Price curve','Data Error','Error in RWE Price curve Data ('+ERROR_MESSAGE()+')','Please verify connection.'

					INSERT INTO source_system_data_import_status_detail(process_id,source,[type],[description]) 
						SELECT @process_id,'RWE Price curve',@filename_status,'Error in RWE Price curve Data ('+ERROR_MESSAGE()+')'
						
--					IF CURSOR_STATUS('local', 'cur_files') >= 0 
--					BEGIN
--						CLOSE cur_files
--						DEALLOCATE cur_files;
--					END
				END CATCH

				FETCH NEXT FROM cur_files INTO @filename,@as_of_date,@folderEndurOrUser,@fileType,@create_time
			END
			CLOSE cur_files
			DEALLOCATE cur_files
			
			set @process_id3=@process_id
			goto Messaging
			level_4008:			

		END
	IF EXISTS (SELECT 'x' FROM dbo.splitCommaseperatedValues(@parseType) WHERE item=7)	-- Deal Detail Hour
		BEGIN
			SET @process_id = REPLACE(NEWID(),'-','_')
			SET @table_no=4035
			--update adiha_process.dbo.stage_deal_detail_hour set [source_deal_detail_id]=replace([source_deal_detail_id],'.txt','')
					
		   insert   import_data_files_audit
					(
					  dir_path,
					  imp_file_name,
					  as_of_date,
					  status,
					  elapsed_time,
					  process_id,
					  create_user,
					  create_ts
					)
		   values   (
					  'Deal Hourly Data',
					  'Data upload (Table No.:' + @table_no + ')',
					  @start_ts,
					  's',
					  0,
					  @process_id,
					  @user,
					  getdate()
					)
	
			
			EXEC spa_import_deal_hourly_data 'adiha_process.dbo.stage_deal_detail_hour',@job_name,@process_id,'Deal Hourly Data',@user,@start_ts
--				IF EXISTS(SELECT 1 FROM #ErrorHandler WHERE err_code='Error') 
--					set @errorcode='e'
--				ELSE
--					set @errorcode='s'
			goto Messaging
			level_4035:	
		END
		
	END

	IF @dataType = 'Error'
	BEGIN
		
addError:		
		EXEC spa_print 'Problem in SSIS Side'
		
			INSERT INTO fas_eff_ass_test_run_log(process_id,code,module,source,[type],[description],nextsteps) 
			SELECT @main_process_id,'Error'	,'Import Data',
			CASE @parseType 
								WHEN '4' THEN 'RWE Price Curve'
								WHEN '6' THEN 'RWE MTM Discount Factor'
								WHEN '5' THEN 'RWE Deal'
								WHEN '7' THEN 'Deal Detail Hour'
								else 'File Format Error' 
				
							END
					,'Data Error',isnull(@err_msg,'Error found in import file.'),'Please verify data.'

		
		
			return		
								
	END 
	
messageboard:


	IF isnull(@msg_board_err,0) =1
		SET @errorcode='e'
	ELSE		
	BEGIN
		if exists(SELECT 1 FROM  fas_eff_ass_test_run_log WHERE process_id=@main_process_id AND code='Error')
			SET @errorcode='e'
		else
			SET @errorcode='s'
	end
	SELECT @url_email =php_path+ '/dev/spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status_from_ass_log ''' + @main_process_id + ''''
		from connection_string


		set  @e_time=datediff(ss,@start_ts,getdate())  
		set @e_time_text = cast(@e_time/60  as varchar) + ' Mins ' + cast(@e_time%60 as varchar) + ' Secs'
		--EXEC spa_print 'Complete Time:'+convert(varchar(30),GETDATE(),120)
		EXEC spa_print @e_time_text

	SELECT @url = './dev/spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status_from_ass_log ''' + @main_process_id + ''''
	SELECT @desc = '<a target="_blank" href="' + @url + '">Import process completed for as of date ' + dbo.FNAUserDateFormat(isnull(cast(@max_date AS DATETIME),GETDATE()), @user)
				+	CASE WHEN (@errorcode = 'e') THEN ' (ERRORS found)  ' ELSE '  ' END + '[Elapse time: ' + isnull(@e_time_text,'ooooooooooooooo') + '].</a>' 

	EXEC spa_print @desc
	--emailing if error found
	IF @errorcode='e'
	BEGIN
		IF @send_email='y'
		BEGIN
			IF  NOT EXISTS(SELECT 'k' FROM message_board WHERE process_id=@process_id)
			BEGIN
				
				SET @desc_detail=''

				SELECT  @desc_detail=@desc_detail+ isnull([description],'')+' ('+isnull(source,'')+');' FROM source_system_data_import_status
					WHERE (process_id=@process_id1 or process_id=@process_id1 or process_id=@process_id2) and code='Error'

				EXEC spa_interface_Adapter_email @process_id,1,@desc,@desc_detail,@url_email

				RETURN
			END
		END
	END

	IF @send_email='y'
	BEGIN
		IF NOT EXISTS(SELECT 'x' FROM message_board WHERE process_id=@main_process_id)
		BEGIN
			DECLARE list_user CURSOR FOR 
					SELECT application_users.user_login_id	
							FROM dbo.application_role_user 
								INNER JOIN dbo.application_security_role 
									ON dbo.application_role_user.role_id = dbo.application_security_role.role_id 
								INNER JOIN dbo.application_users 
									ON dbo.application_role_user.user_login_id = dbo.application_users.user_login_id
					WHERE (dbo.application_users.user_active = 'y') AND (dbo.application_security_role.role_type_value_id =2) 
							--AND  dbo.application_users.user_emal_add  IS NOT NULL
					GROUP BY dbo.application_users.user_login_id,  dbo.application_users.user_emal_add

			OPEN list_user

			FETCH NEXT FROM list_user INTO 	@user

			WHILE @@FETCH_STATUS = 0
			BEGIN				
				EXEC  spa_message_board 'i', @user,NULL, 'Import Data',@desc, '', '', @errorcode, 'Interface Adaptor',null,@main_process_id
				FETCH NEXT FROM list_user INTO 	@user
			END

			CLOSE list_user
			DEALLOCATE list_user
		END
	END
	ELSE
	BEGIN
		IF  NOT EXISTS(SELECT 'x' FROM message_board WHERE process_id=@process_id)
			EXEC  spa_message_board 'i', @user,NULL, 'Import Data',@desc, '', '', @errorcode, 'Interface Adaptor',NULL,@main_process_id
	END

--	DELETE message_board
--select * from message_board  --where process_id=@process_id
	
--	SET @process_id = REPLACE(NEWID(),'-','_')
--	set @main_process_id=@process_id

	IF not exists(select 1 from fas_eff_ass_test_run_log WHERE process_id=@main_process_id)
	BEGIN
		set @parseType='99'
		GOTO addError
	end

	RETURN	

Messaging:	

	SELECT @count=COUNT(*) FROM source_system_data_import_status WHERE process_id=@process_id AND code='Error' 
								AND source=CASE @table_no 
												WHEN '4008' THEN 'source_price_curve'
												WHEN '4006' THEN 'source_deal_pnl'
												WHEN '4005' THEN 'source_deal_detail'
												WHEN '4035' THEN 'deal_detail_hour'
								           END
								           
	IF @count >0
	BEGIN
		SET @errorcode='e'
		set @msg_board_err=1
	end
	ELSE
		SET @errorcode='s'

	SELECT @url = './spa_html.php?__user_name__=' + @user + '&spa=exec spa_get_import_process_status ''' + @process_id + ''','''+ @user+''''

	SELECT @desc = '<a target="_blank" href="' + @url + '">' 
									+ CASE @table_no 
												WHEN '4008' THEN 'Price curve import completed for as of date:'+ dbo.FNAUserDateFormat(isnull(CAST(@max_date AS DATETIME),GETDATE()), @user)
												WHEN '4005' THEN 'Deal import completed for as of date:'+ dbo.FNAUserDateFormat(isnull(CAST(@max_date AS DATETIME),GETDATE()), @user)
												WHEN '4006' THEN 'MTM discount factor import completed for as of date:' + dbo.FNAUserDateFormat(isnull(CAST(@max_date AS DATETIME),GETDATE()), @user)
												WHEN '4035' THEN 'Deal Hourly Data import completed.'
										END +
				CASE WHEN (@errorcode = 'e') THEN ' (ERRORS found)' ELSE '' END +
				'.</a>' 

	
	INSERT INTO fas_eff_ass_test_run_log(process_id,code,module,source,[type],[description],nextsteps) 
			SELECT @main_process_id,CASE WHEN (@errorcode = 'e') THEN 'Error' ELSE 'Success' END
			,'Import Data',CASE @table_no 
								WHEN '4008' THEN 'RWE Price Curve'
								WHEN '4006' THEN 'RWE MTM Discount Factor'
								WHEN '4005' THEN 'RWE Deal'
								WHEN '4035' THEN 'Deal Hourly Data'
							END
					,CASE WHEN (@errorcode = 'e') THEN 'Data Error' ELSE 'Data Success' END ,@desc,'Please verify data.'

	
IF @table_no='4005'
	GOTO level_4005			
else IF @table_no='4006'
	GOTO level_4006			
else IF @table_no='4008'
	GOTO level_4008			
else IF @table_no='4035'
	GOTO level_4035	


	/*
	* adiha_process.dbo.IAS39_FIN_TRADE_20100731_134802_farrms_admin_E7AF38C9_5151_4218_BD1E_E51940992835
	select * from message_board --where process_id='11242009_1637'
	select * from source_system_data_import_status ---where process_id='11242009_1637'
	select * from source_system_data_import_status_detail where  source='source_price_curve' process_id='11242009_1637'

	delete message_board --where process_id='11242009_1637'
	delete message_board --where process_id='11242009_1637'
	delete source_system_data_import_status --where process_id='11242009_1637'
	delete source_system_data_import_status_detail --where process_id='11242009_1637'
	*/
--END -- End Of tjhe Procedure
