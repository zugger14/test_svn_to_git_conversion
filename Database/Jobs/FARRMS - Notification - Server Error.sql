/*
Though this job is instance level job it should be applied in any database having email_notes table. 
Here, in case of sever error, email_notes table is used to notify servererror team through email.
*/
IF OBJECT_ID('dbo.email_notes') IS  NULL
BEGIN
PRINT 'Failed to add job. email_notes table doesn''t exists. This table is used to notify servererror team (failure case only).';
return
END

DECLARE @job_db_name NVARCHAR(250) = DB_NAME() 
	, @job_owner NVARCHAR(100) =  SYSTEM_USER	--dbo.FNAAppAdminID()    --in case of maintenance jobs, put SYSTEM_USER 
	, @job_category NVARCHAR(150) = N'FARRMS - Notification' 
	, @job_name NVARCHAR(500) 
	, @jobId BINARY(16)
	, @ReturnCode INT = 0
	, @cmd NVARCHAR(MAX)

SET @job_name = @job_category + N' - Server Error' 

IF  EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view WHERE name = @job_name) 
EXEC msdb.dbo.SP_DELETE_JOB @job_name = @job_name, @delete_unused_schedule = 1 

BEGIN TRANSACTION
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=@job_category AND category_class=1) 
BEGIN 
	EXEC @ReturnCode = msdb.dbo.SP_ADD_CATEGORY @CLASS=N'JOB', @type=N'LOCAL', @name=@job_category 

	IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback  
END 

SET @cmd = N'/*
			1. Check WindowsBase.dll CLR issue in each FARRMS db.
			*/
			
			IF OBJECT_ID(''tempdb..#no_clr_table'') IS NOT NULL
			DROP TABLE #no_clr_table

			CREATE TABLE #no_clr_table (db_names VARCHAR(MAX) COLLATE DATABASE_DEFAULT , db_err VARCHAR(MAX))

			DECLARE @db_name varchar(200) 
				, @command nvarchar(MAX) 
				

			DECLARE database_cursor CURSOR FOR 
			SELECT name 
			FROM MASTER.sys.databases  
			WHERE 1 = 1 
					AND is_read_only = 0
					AND state_desc NOT LIKE ''OFFLINE'' 
					AND [name] NOT LIKE ''adiha_%''
					AND [name] NOT LIKE ''ReportServer%''
					AND [database_id] > 4 
					AND HAS_DBACCESS(name) = 1

			OPEN database_cursor 

			FETCH NEXT FROM database_cursor INTO @db_name 

			WHILE @@FETCH_STATUS = 0 
			BEGIN 
				 SELECT @command = N''USE '' + @db_name + ''
						DECLARE @check_clr_status CHAR(1) = 1	--Set to 0 to exclude clr status checking.
 
							IF OBJECT_ID(N''''spa_excel_addin_parameters'''') IS NOT NULL AND  @check_clr_status  = 1
							BEGIN
								BEGIN TRY
									EXEC spa_excel_addin_parameters ''''C:\CLR File\Excel_Report.xlsx'''', ''''n'''', NULL	--TODO: Adjust path accordingly
								END TRY
								BEGIN CATCH		
									INSERT INTO #no_clr_table 
									SELECT '''''' + @db_name + '''''', ERROR_MESSAGE()
								END CATCH
							END				
						''
				 EXEC sp_executesql @command 

				 FETCH NEXT FROM database_cursor INTO @db_name 
			END 

			CLOSE database_cursor 
			DEALLOCATE database_cursor 
			'
		SET @cmd += '
			--Build email body
			DECLARE @mail_to VARCHAR(MAX)
				, @final_email_msg NVARCHAR(MAX)
				, @clr_final_email_msg NVARCHAR(MAX)
				, @build_email_msg NVARCHAR(MAX) = ''''
				, @build_email_msg_header NVARCHAR(MAX) = ''''
				, @build_email_msg_footer NVARCHAR(MAX) = ''
									</table>
									<br/>
									<br/>
									''
			IF EXISTS(SELECT 1 FROM  #no_clr_table)
			BEGIN
				SET @build_email_msg_header = ''The SQL Server Job <b>[FARRMS - Notification - CLR Check]</b> has been completed successfully on the server <b>"'' + @@SERVERNAME + ''"</b>.
							<br/>
							<br/>
							<b>Recommended Action:</b>
							<br/>
							CLR Needs to be deployed on following database using latest WindowsBase.dll on the server <b>'' + @@SERVERNAME + ''</b>:
							<br/>
							<br/>
							<table border=2 width=100%>
								<tr>
									<th style="padding:5px;color:#FFFFFF;background-color:#67AE5C;width:390px;">Database Name</th>
									<th style="padding:5px;color:#FFFFFF;background-color:#67AE5C;width:390px;">Error Description</th>
								</tr>
								''

				SELECT @build_email_msg = @build_email_msg + ''
					<tr>
						<td style="padding:5px">'' + db_names + ''</td>
						<td style="padding:5px">'' + db_err + ''</td>
					</tr>''
					FROM #no_clr_table
	
			END
			SELECT @clr_final_email_msg = @build_email_msg_header + @build_email_msg + @build_email_msg_footer
			
			IF @clr_final_email_msg IS NULL
			return
			'
		SET @cmd += '
			SET @final_email_msg = ''Hi,<br/><br/>'' + ISNULL(@clr_final_email_msg, '''') + ''<br>This message is auto-generated by <b>Pioneer System</b>. Please do not reply.''

			SET @mail_to = ''serverjobserror@pioneersolutionsglobal.com''
						--''sgyawali@pioneersolutionsglobal.com''

			IF NOT EXISTS(SELECT 1 from ' + @job_db_name + '.[dbo].email_notes 
					WHERE notes_subject = ''Notification: System error report'' 
						AND send_to = @mail_to
						AND (send_status = ''n'' OR (send_status = ''y'' AND DATEDIFF(MINUTE,create_ts,getdate()) < 30))
					) 
					AND (EXISTS(SELECT 1 FROM #no_clr_table))
			BEGIN
				INSERT INTO ' + @job_db_name + '.[dbo].email_notes
					  (
						send_from,
					   send_to,
					   notes_subject,
					   notes_text,
					   send_status,
					   active_flag
					  )

				VALUES( 
						   ''noreply@pioneersolutionsglobal.com'',
						   @mail_to,
						   ''Notification: System error report'',
						   @final_email_msg,
						   ''n'',
						   ''y'')
			END

			
			'

EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=@job_name, 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Check CLR status. If failed then inform  PS system administrator.', 
		@category_name=@job_category, 
		@owner_login_name=@job_owner, @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Check memcache status]    Script Date: 10/3/2019 4:40:18 PM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Check server status', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command= @cmd, 
		@database_name=@job_db_name, 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Check server status', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=62, 
		@freq_subday_type=4, 
		@freq_subday_interval=30, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20191003, 
		@active_end_date=99991231, 
		@active_start_time=0, 
		@active_end_time=235959
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO

