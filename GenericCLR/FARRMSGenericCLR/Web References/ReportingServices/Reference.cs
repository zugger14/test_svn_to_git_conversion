//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace FARRMSGenericCLR.ReportingServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportExecutionServiceSoap", Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValueOrFieldReference))]
    public partial class ReportExecutionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private TrustedUserHeader trustedUserHeaderValueField;
        
        private ServerInfoHeader serverInfoHeaderValueField;
        
        private ExecutionHeader executionHeaderValueField;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportExecutionService() {
            this.Url = "http://localhost:80/ReportServer/ReportExecution2005.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public TrustedUserHeader TrustedUserHeaderValue {
            get {
                return this.trustedUserHeaderValueField;
            }
            set {
                this.trustedUserHeaderValueField = value;
            }
        }
        
        public ServerInfoHeader ServerInfoHeaderValue {
            get {
                return this.serverInfoHeaderValueField;
            }
            set {
                this.serverInfoHeaderValueField = value;
            }
        }
        
        public ExecutionHeader ExecutionHeaderValue {
            get {
                return this.executionHeaderValueField;
            }
            set {
                this.executionHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tSecureMethods", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListSecureMethods() {
            object[] results = this.Invoke("ListSecureMethods", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSecureMethods(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSecureMethods", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListSecureMethods(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo LoadReport(string Report, string HistoryID) {
            object[] results = this.Invoke("LoadReport", new object[] {
                        Report,
                        HistoryID});
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadReport(string Report, string HistoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadReport", new object[] {
                        Report,
                        HistoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndLoadReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo2 LoadReport2(string Report, string HistoryID) {
            object[] results = this.Invoke("LoadReport2", new object[] {
                        Report,
                        HistoryID});
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadReport2(string Report, string HistoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadReport2", new object[] {
                        Report,
                        HistoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndLoadReport2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo LoadReportDefinition([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Definition, out Warning[] warnings) {
            object[] results = this.Invoke("LoadReportDefinition", new object[] {
                        Definition});
            warnings = ((Warning[])(results[1]));
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadReportDefinition(byte[] Definition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadReportDefinition", new object[] {
                        Definition}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndLoadReportDefinition(System.IAsyncResult asyncResult, out Warning[] warnings) {
            object[] results = this.EndInvoke(asyncResult);
            warnings = ((Warning[])(results[1]));
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo2 LoadReportDefinition2([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Definition, out Warning[] warnings) {
            object[] results = this.Invoke("LoadReportDefinition2", new object[] {
                        Definition});
            warnings = ((Warning[])(results[1]));
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadReportDefinition2(byte[] Definition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadReportDefinition2", new object[] {
                        Definition}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndLoadReportDefinition2(System.IAsyncResult asyncResult, out Warning[] warnings) {
            object[] results = this.EndInvoke(asyncResult);
            warnings = ((Warning[])(results[1]));
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo SetExecutionCredentials(DataSourceCredentials[] Credentials) {
            object[] results = this.Invoke("SetExecutionCredentials", new object[] {
                        Credentials});
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetExecutionCredentials(DataSourceCredentials[] Credentials, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetExecutionCredentials", new object[] {
                        Credentials}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndSetExecutionCredentials(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo2 SetExecutionCredentials2(DataSourceCredentials[] Credentials) {
            object[] results = this.Invoke("SetExecutionCredentials2", new object[] {
                        Credentials});
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetExecutionCredentials2(DataSourceCredentials[] Credentials, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetExecutionCredentials2", new object[] {
                        Credentials}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndSetExecutionCredentials2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo SetExecutionParameters(ParameterValue[] Parameters, string ParameterLanguage) {
            object[] results = this.Invoke("SetExecutionParameters", new object[] {
                        Parameters,
                        ParameterLanguage});
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetExecutionParameters(ParameterValue[] Parameters, string ParameterLanguage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetExecutionParameters", new object[] {
                        Parameters,
                        ParameterLanguage}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndSetExecutionParameters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo2 SetExecutionParameters2(ParameterValue[] Parameters, string ParameterLanguage) {
            object[] results = this.Invoke("SetExecutionParameters2", new object[] {
                        Parameters,
                        ParameterLanguage});
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetExecutionParameters2(ParameterValue[] Parameters, string ParameterLanguage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetExecutionParameters2", new object[] {
                        Parameters,
                        ParameterLanguage}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndSetExecutionParameters2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo ResetExecution() {
            object[] results = this.Invoke("ResetExecution", new object[0]);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetExecution(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetExecution", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndResetExecution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo2 ResetExecution2() {
            object[] results = this.Invoke("ResetExecution2", new object[0]);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetExecution2(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetExecution2", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndResetExecution2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public byte[] Render(string Format, string DeviceInfo, out string Extension, out string MimeType, out string Encoding, out Warning[] Warnings, out string[] StreamIds) {
            object[] results = this.Invoke("Render", new object[] {
                        Format,
                        DeviceInfo});
            Extension = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            Encoding = ((string)(results[3]));
            Warnings = ((Warning[])(results[4]));
            StreamIds = ((string[])(results[5]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRender(string Format, string DeviceInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Render", new object[] {
                        Format,
                        DeviceInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndRender(System.IAsyncResult asyncResult, out string Extension, out string MimeType, out string Encoding, out Warning[] Warnings, out string[] StreamIds) {
            object[] results = this.EndInvoke(asyncResult);
            Extension = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            Encoding = ((string)(results[3]));
            Warnings = ((Warning[])(results[4]));
            StreamIds = ((string[])(results[5]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public byte[] Render2(string Format, string DeviceInfo, PageCountMode PaginationMode, out string Extension, out string MimeType, out string Encoding, out Warning[] Warnings, out string[] StreamIds) {
            object[] results = this.Invoke("Render2", new object[] {
                        Format,
                        DeviceInfo,
                        PaginationMode});
            Extension = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            Encoding = ((string)(results[3]));
            Warnings = ((Warning[])(results[4]));
            StreamIds = ((string[])(results[5]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRender2(string Format, string DeviceInfo, PageCountMode PaginationMode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Render2", new object[] {
                        Format,
                        DeviceInfo,
                        PaginationMode}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndRender2(System.IAsyncResult asyncResult, out string Extension, out string MimeType, out string Encoding, out Warning[] Warnings, out string[] StreamIds) {
            object[] results = this.EndInvoke(asyncResult);
            Extension = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            Encoding = ((string)(results[3]));
            Warnings = ((Warning[])(results[4]));
            StreamIds = ((string[])(results[5]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "derStream", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public byte[] RenderStream(string Format, string StreamID, string DeviceInfo, out string Encoding, out string MimeType) {
            object[] results = this.Invoke("RenderStream", new object[] {
                        Format,
                        StreamID,
                        DeviceInfo});
            Encoding = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenderStream(string Format, string StreamID, string DeviceInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenderStream", new object[] {
                        Format,
                        StreamID,
                        DeviceInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndRenderStream(System.IAsyncResult asyncResult, out string Encoding, out string MimeType) {
            object[] results = this.EndInvoke(asyncResult);
            Encoding = ((string)(results[1]));
            MimeType = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo GetExecutionInfo() {
            object[] results = this.Invoke("GetExecutionInfo", new object[0]);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExecutionInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExecutionInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndGetExecutionInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("executionInfo")]
        public ExecutionInfo2 GetExecutionInfo2() {
            object[] results = this.Invoke("GetExecutionInfo2", new object[0]);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExecutionInfo2(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExecutionInfo2", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndGetExecutionInfo2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "DocumentMap", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public DocumentMapNode GetDocumentMap() {
            object[] results = this.Invoke("GetDocumentMap", new object[0]);
            return ((DocumentMapNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentMap(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentMap", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DocumentMapNode EndGetDocumentMap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocumentMapNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecutionInfo")]
        public ExecutionInfo LoadDrillthroughTarget(string DrillthroughID) {
            object[] results = this.Invoke("LoadDrillthroughTarget", new object[] {
                        DrillthroughID});
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadDrillthroughTarget(string DrillthroughID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadDrillthroughTarget", new object[] {
                        DrillthroughID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo EndLoadDrillthroughTarget(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecutionInfo")]
        public ExecutionInfo2 LoadDrillthroughTarget2(string DrillthroughID) {
            object[] results = this.Invoke("LoadDrillthroughTarget2", new object[] {
                        DrillthroughID});
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadDrillthroughTarget2(string DrillthroughID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadDrillthroughTarget2", new object[] {
                        DrillthroughID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExecutionInfo2 EndLoadDrillthroughTarget2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExecutionInfo2)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Tog" +
            "gleItem", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Found")]
        public bool ToggleItem(string ToggleID) {
            object[] results = this.Invoke("ToggleItem", new object[] {
                        ToggleID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginToggleItem(string ToggleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ToggleItem", new object[] {
                        ToggleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndToggleItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateDocumentMap", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PageNumber")]
        public int NavigateDocumentMap(string DocMapID) {
            object[] results = this.Invoke("NavigateDocumentMap", new object[] {
                        DocMapID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNavigateDocumentMap(string DocMapID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NavigateDocumentMap", new object[] {
                        DocMapID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndNavigateDocumentMap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateBookmark", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PageNumber")]
        public int NavigateBookmark(string BookmarkID, out string UniqueName) {
            object[] results = this.Invoke("NavigateBookmark", new object[] {
                        BookmarkID});
            UniqueName = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNavigateBookmark(string BookmarkID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NavigateBookmark", new object[] {
                        BookmarkID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndNavigateBookmark(System.IAsyncResult asyncResult, out string UniqueName) {
            object[] results = this.EndInvoke(asyncResult);
            UniqueName = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Fin" +
            "dString", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PageNumber")]
        public int FindString(int StartPage, int EndPage, string FindValue) {
            object[] results = this.Invoke("FindString", new object[] {
                        StartPage,
                        EndPage,
                        FindValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindString(int StartPage, int EndPage, string FindValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindString", new object[] {
                        StartPage,
                        EndPage,
                        FindValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndFindString(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PageNumber")]
        public int Sort(string SortItem, SortDirectionEnum Direction, bool Clear, out string ReportItem, out int NumPages) {
            object[] results = this.Invoke("Sort", new object[] {
                        SortItem,
                        Direction,
                        Clear});
            ReportItem = ((string)(results[1]));
            NumPages = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSort(string SortItem, SortDirectionEnum Direction, bool Clear, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Sort", new object[] {
                        SortItem,
                        Direction,
                        Clear}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSort(System.IAsyncResult asyncResult, out string ReportItem, out int NumPages) {
            object[] results = this.EndInvoke(asyncResult);
            ReportItem = ((string)(results[1]));
            NumPages = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExecutionHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t2", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PageNumber")]
        public int Sort2(string SortItem, SortDirectionEnum Direction, bool Clear, PageCountMode PaginationMode, out string ReportItem, out ExecutionInfo2 ExecutionInfo) {
            object[] results = this.Invoke("Sort2", new object[] {
                        SortItem,
                        Direction,
                        Clear,
                        PaginationMode});
            ReportItem = ((string)(results[1]));
            ExecutionInfo = ((ExecutionInfo2)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSort2(string SortItem, SortDirectionEnum Direction, bool Clear, PageCountMode PaginationMode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Sort2", new object[] {
                        SortItem,
                        Direction,
                        Clear,
                        PaginationMode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSort2(System.IAsyncResult asyncResult, out string ReportItem, out ExecutionInfo2 ExecutionInfo) {
            object[] results = this.EndInvoke(asyncResult);
            ReportItem = ((string)(results[1]));
            ExecutionInfo = ((ExecutionInfo2)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "RenderResource", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", DataType="base64Binary")]
        public byte[] GetRenderResource(string Format, string DeviceInfo, out string MimeType) {
            object[] results = this.Invoke("GetRenderResource", new object[] {
                        Format,
                        DeviceInfo});
            MimeType = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRenderResource(string Format, string DeviceInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRenderResource", new object[] {
                        Format,
                        DeviceInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetRenderResource(System.IAsyncResult asyncResult, out string MimeType) {
            object[] results = this.EndInvoke(asyncResult);
            MimeType = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tRenderingExtensions", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Extensions")]
        public Extension[] ListRenderingExtensions() {
            object[] results = this.Invoke("ListRenderingExtensions", new object[0]);
            return ((Extension[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListRenderingExtensions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListRenderingExtensions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Extension[] EndListRenderingExtensions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Extension[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "onUser", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogonUser(string userName, string password, string authority) {
            this.Invoke("LogonUser", new object[] {
                        userName,
                        password,
                        authority});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogonUser(string userName, string password, string authority, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogonUser", new object[] {
                        userName,
                        password,
                        authority}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogonUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "off", RequestNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ResponseNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logoff() {
            this.Invoke("Logoff", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogoff(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logoff", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogoff(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsNullable=false)]
    public partial class TrustedUserHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private byte[] userTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class Extension {
        
        private ExtensionTypeEnum extensionTypeField;
        
        private string nameField;
        
        private string localizedNameField;
        
        private bool visibleField;
        
        private bool isModelGenerationSupportedField;
        
        /// <remarks/>
        public ExtensionTypeEnum ExtensionType {
            get {
                return this.extensionTypeField;
            }
            set {
                this.extensionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string LocalizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsModelGenerationSupported {
            get {
                return this.isModelGenerationSupportedField;
            }
            set {
                this.isModelGenerationSupportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ExtensionTypeEnum {
        
        /// <remarks/>
        Delivery,
        
        /// <remarks/>
        Render,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DocumentMapNode {
        
        private string labelField;
        
        private string uniqueNameField;
        
        private DocumentMapNode[] childrenField;
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueName {
            get {
                return this.uniqueNameField;
            }
            set {
                this.uniqueNameField = value;
            }
        }
        
        /// <remarks/>
        public DocumentMapNode[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValue))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterValueOrFieldReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterValue : ParameterValueOrFieldReference {
        
        private string nameField;
        
        private string valueField;
        
        private string labelField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DataSourceCredentials {
        
        private string dataSourceNameField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class Warning {
        
        private string codeField;
        
        private string severityField;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string messageField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportMargins {
        
        private double topField;
        
        private double bottomField;
        
        private double leftField;
        
        private double rightField;
        
        /// <remarks/>
        public double Top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        public double Bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
            }
        }
        
        /// <remarks/>
        public double Left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        public double Right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportPaperSize {
        
        private double heightField;
        
        private double widthField;
        
        /// <remarks/>
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class PageSettings {
        
        private ReportPaperSize paperSizeField;
        
        private ReportMargins marginsField;
        
        /// <remarks/>
        public ReportPaperSize PaperSize {
            get {
                return this.paperSizeField;
            }
            set {
                this.paperSizeField = value;
            }
        }
        
        /// <remarks/>
        public ReportMargins Margins {
            get {
                return this.marginsField;
            }
            set {
                this.marginsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DataSourcePrompt {
        
        private string nameField;
        
        private string dataSourceIDField;
        
        private string promptField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                this.dataSourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ValidValue {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportParameter {
        
        private string nameField;
        
        private ParameterTypeEnum typeField;
        
        private bool typeFieldSpecified;
        
        private bool nullableField;
        
        private bool nullableFieldSpecified;
        
        private bool allowBlankField;
        
        private bool allowBlankFieldSpecified;
        
        private bool multiValueField;
        
        private bool multiValueFieldSpecified;
        
        private bool queryParameterField;
        
        private bool queryParameterFieldSpecified;
        
        private string promptField;
        
        private bool promptUserField;
        
        private bool promptUserFieldSpecified;
        
        private string[] dependenciesField;
        
        private bool validValuesQueryBasedField;
        
        private bool validValuesQueryBasedFieldSpecified;
        
        private ValidValue[] validValuesField;
        
        private bool defaultValuesQueryBasedField;
        
        private bool defaultValuesQueryBasedFieldSpecified;
        
        private string[] defaultValuesField;
        
        private ParameterStateEnum stateField;
        
        private bool stateFieldSpecified;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public ParameterTypeEnum Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Nullable {
            get {
                return this.nullableField;
            }
            set {
                this.nullableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified {
            get {
                return this.nullableFieldSpecified;
            }
            set {
                this.nullableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AllowBlank {
            get {
                return this.allowBlankField;
            }
            set {
                this.allowBlankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified {
            get {
                return this.allowBlankFieldSpecified;
            }
            set {
                this.allowBlankFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool MultiValue {
            get {
                return this.multiValueField;
            }
            set {
                this.multiValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified {
            get {
                return this.multiValueFieldSpecified;
            }
            set {
                this.multiValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool QueryParameter {
            get {
                return this.queryParameterField;
            }
            set {
                this.queryParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParameterSpecified {
            get {
                return this.queryParameterFieldSpecified;
            }
            set {
                this.queryParameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
            }
        }
        
        /// <remarks/>
        public bool PromptUser {
            get {
                return this.promptUserField;
            }
            set {
                this.promptUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptUserSpecified {
            get {
                return this.promptUserFieldSpecified;
            }
            set {
                this.promptUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Dependency")]
        public string[] Dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidValuesQueryBased {
            get {
                return this.validValuesQueryBasedField;
            }
            set {
                this.validValuesQueryBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesQueryBasedSpecified {
            get {
                return this.validValuesQueryBasedFieldSpecified;
            }
            set {
                this.validValuesQueryBasedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ValidValue[] ValidValues {
            get {
                return this.validValuesField;
            }
            set {
                this.validValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool DefaultValuesQueryBased {
            get {
                return this.defaultValuesQueryBasedField;
            }
            set {
                this.defaultValuesQueryBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValuesQueryBasedSpecified {
            get {
                return this.defaultValuesQueryBasedFieldSpecified;
            }
            set {
                this.defaultValuesQueryBasedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] DefaultValues {
            get {
                return this.defaultValuesField;
            }
            set {
                this.defaultValuesField = value;
            }
        }
        
        /// <remarks/>
        public ParameterStateEnum State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ParameterTypeEnum {
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        String,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ParameterStateEnum {
        
        /// <remarks/>
        HasValidValue,
        
        /// <remarks/>
        MissingValidValue,
        
        /// <remarks/>
        HasOutstandingDependencies,
        
        /// <remarks/>
        DynamicValuesUnavailable,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecutionInfo2))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo {
        
        private bool hasSnapshotField;
        
        private bool needsProcessingField;
        
        private bool allowQueryExecutionField;
        
        private bool credentialsRequiredField;
        
        private bool parametersRequiredField;
        
        private System.DateTime expirationDateTimeField;
        
        private System.DateTime executionDateTimeField;
        
        private int numPagesField;
        
        private ReportParameter[] parametersField;
        
        private DataSourcePrompt[] dataSourcePromptsField;
        
        private bool hasDocumentMapField;
        
        private string executionIDField;
        
        private string reportPathField;
        
        private string historyIDField;
        
        private PageSettings reportPageSettingsField;
        
        private int autoRefreshIntervalField;
        
        /// <remarks/>
        public bool HasSnapshot {
            get {
                return this.hasSnapshotField;
            }
            set {
                this.hasSnapshotField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedsProcessing {
            get {
                return this.needsProcessingField;
            }
            set {
                this.needsProcessingField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowQueryExecution {
            get {
                return this.allowQueryExecutionField;
            }
            set {
                this.allowQueryExecutionField = value;
            }
        }
        
        /// <remarks/>
        public bool CredentialsRequired {
            get {
                return this.credentialsRequiredField;
            }
            set {
                this.credentialsRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool ParametersRequired {
            get {
                return this.parametersRequiredField;
            }
            set {
                this.parametersRequiredField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDateTime {
            get {
                return this.expirationDateTimeField;
            }
            set {
                this.expirationDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExecutionDateTime {
            get {
                return this.executionDateTimeField;
            }
            set {
                this.executionDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public int NumPages {
            get {
                return this.numPagesField;
            }
            set {
                this.numPagesField = value;
            }
        }
        
        /// <remarks/>
        public ReportParameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        public DataSourcePrompt[] DataSourcePrompts {
            get {
                return this.dataSourcePromptsField;
            }
            set {
                this.dataSourcePromptsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasDocumentMap {
            get {
                return this.hasDocumentMapField;
            }
            set {
                this.hasDocumentMapField = value;
            }
        }
        
        /// <remarks/>
        public string ExecutionID {
            get {
                return this.executionIDField;
            }
            set {
                this.executionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ReportPath {
            get {
                return this.reportPathField;
            }
            set {
                this.reportPathField = value;
            }
        }
        
        /// <remarks/>
        public string HistoryID {
            get {
                return this.historyIDField;
            }
            set {
                this.historyIDField = value;
            }
        }
        
        /// <remarks/>
        public PageSettings ReportPageSettings {
            get {
                return this.reportPageSettingsField;
            }
            set {
                this.reportPageSettingsField = value;
            }
        }
        
        /// <remarks/>
        public int AutoRefreshInterval {
            get {
                return this.autoRefreshIntervalField;
            }
            set {
                this.autoRefreshIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo2 : ExecutionInfo {
        
        private PageCountMode pageCountModeField;
        
        /// <remarks/>
        public PageCountMode PageCountMode {
            get {
                return this.pageCountModeField;
            }
            set {
                this.pageCountModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum PageCountMode {
        
        /// <remarks/>
        Actual,
        
        /// <remarks/>
        Estimate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsNullable=false)]
    public partial class ServerInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string reportServerVersionNumberField;
        
        private string reportServerEditionField;
        
        private string reportServerVersionField;
        
        private string reportServerDateTimeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ReportServerVersionNumber {
            get {
                return this.reportServerVersionNumberField;
            }
            set {
                this.reportServerVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ReportServerEdition {
            get {
                return this.reportServerEditionField;
            }
            set {
                this.reportServerEditionField = value;
            }
        }
        
        /// <remarks/>
        public string ReportServerVersion {
            get {
                return this.reportServerVersionField;
            }
            set {
                this.reportServerVersionField = value;
            }
        }
        
        /// <remarks/>
        public string ReportServerDateTime {
            get {
                return this.reportServerDateTimeField;
            }
            set {
                this.reportServerDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsNullable=false)]
    public partial class ExecutionHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string executionIDField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ExecutionID {
            get {
                return this.executionIDField;
            }
            set {
                this.executionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum SortDirectionEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
}

#pragma warning restore 1591