<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/21/2009 10:59:52 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="VKHANAL"
  DTS:CreatorName="DPCS\vkhanal"
  DTS:DTSID="{7DAF8C7A-CA73-4C08-8442-08E7670BC9BD}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:ForceExecutionResult="0"
  DTS:LastModifiedProductVersion="11.0.7462.6"
  DTS:LocaleID="1033"
  DTS:ObjectName="ladwp"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="904"
  DTS:VersionGUID="{90DDF40F-B0F1-497A-901D-C678D2E09275}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FlatFile_Parse_1]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{BEFC76E3-F5F5-4234-A49A-026E63803CCE}"
      DTS:ObjectName="FlatFile_Parse_1">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ps_fileNameInProcessWithPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowsToSkip="2"
          DTS:HeaderRowDelimiter="_x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString=" \\rdc.ftp">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Line"
              DTS:DTSID="{1C6F846C-DE1A-4960-9911-C4D067E1EA03}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FlatFile_Parse_2]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:Description="FlatFile_Parse2"
      DTS:DTSID="{B2BCD8A8-7C4B-4179-AF41-B5CE380C954E}"
      DTS:ObjectName="FlatFile_Parse_2">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ps_fileNameInProcessWithPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowsToSkip="2"
          DTS:HeaderRowDelimiter="_x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString=" \\rdc.ftp">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{C0108B4A-FD9C-4140-A9C4-716DAABF58AE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 1"
              DTS:DTSID="{B66E4CEF-5F39-4219-A0DB-9E9DCF153C7E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 2"
              DTS:DTSID="{9E66244F-60E2-4146-9C93-7DEF2DCB057F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 3"
              DTS:DTSID="{6BFB763C-DC25-48C6-8221-9724EF39EFBB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 4"
              DTS:DTSID="{70786E30-8293-4E7B-A305-F5A4705D1DCA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 5"
              DTS:DTSID="{2EC1333D-4054-468D-AD12-9E7A4A21D962}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 6"
              DTS:DTSID="{37CA602B-1BD3-4722-B257-297758BC78CB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 7"
              DTS:DTSID="{22C2EC18-7B88-4E54-9514-DF9AA24E6D35}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 8"
              DTS:DTSID="{602D52A6-F40C-47A4-A848-6CB5421CBFA1}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLE_CONN_MainDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
      DTS:ObjectName="OLE_CONN_MainDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;&#xA;        Data Source=SG-D-SQL02;&#xA;        Initial Catalog=TRMTracker_Release_July2018;&#xA;     USER ID=farrms_admin; &#xA;      &#xA;        Application Name=SimplexSolver;">
          <DTS:Password
            DTS:Name="password"
            Sensitive="1"></DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Platts FTP]"
      DTS:CreationName="FTP"
      DTS:DelayValidation="True"
      DTS:DTSID="{F5D9CB29-6FF4-4B69-8AA8-803830CB1B82}"
      DTS:ObjectName="Platts FTP">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="ftp.platts.com:21">
          <DTS:FtpConnection
            DTS:ServerName="ftp.platts.com"
            DTS:ServerUserName="jocelyn_mariano"
            DTS:UsePassiveMode="True">
            <DTS:Property
              DTS:Name="ServerPassword"
              Sensitive="1"></DTS:Property>
          </DTS:FtpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="SSIS_DB_CONFIG_PATH_LADWP"
      DTS:ConfigurationType="5"
      DTS:CreationName=""
      DTS:DTSID="{FCCD081A-D37B-4912-8F58-B55F79CE60DC}"
      DTS:ObjectName="XML_CFG_GBL_MainDBConnection" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;OLE_CONN_MainDB&quot;;&quot;[dbo].[ssis_configurations]&quot;;&quot;PKG_NymexTreasuryPlattsPriceCurveImport&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{603EB548-9339-444B-A6AB-C727300B72CE}"
      DTS:ObjectName="SQL_CFG_NymexTreasuryPlattsPriceCurveImport" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="OLE_CONN_MainDB"
      DTS:CreationName="DTS.LogProviderSQLServer.3"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{67B1BCAA-A345-438B-A3C3-308F2D5B70FC}"
      DTS:ObjectName="SSIS log provider for SQL Server1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9834C53E-451C-460C-AD50-7BD6840D1739}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_asOfDate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{231F2F0F-CF42-483E-AD4F-C284706A0E39}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ps_counter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{155267E1-DE67-4055-BD8D-43053C02305D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_dateOption">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94128E32-92AD-4564-B3F5-E5260B0A112B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_destination">
      <DTS:VariableValue
        DTS:DataType="8">D:\ImportUAT\PriceCurvesy\Error</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2030665B-6B44-477C-8A71-B845ECB3D310}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_execAdapter">
      <DTS:VariableValue
        DTS:DataType="8">EXEC dbo.spa_adapter ? , ? , ?, ?, ?</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{570C6B43-129A-4F85-9E00-0A1D6B54AECA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_fileNameInProcess">
      <DTS:VariableValue
        DTS:DataType="8">\rdc.ftp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C7D8753-3C5B-4ADB-84D8-5690829A4E88}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ps_tempPath]+&quot;\\&quot;+ @[User::ps_fileNameInProcess]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_fileNameInProcessWithPath">
      <DTS:VariableValue
        DTS:DataType="8"> \\rdc.ftp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F72B875-EE48-42D8-8078-937BDE14C5FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_filesToProcess">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0EDC02C5-677C-4061-86BA-94264887F979}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="  @[User::PS_dateOption] == &quot;1&quot; ? &#xA;  &quot;/&quot; + REPLACE((DT_WSTR, 10)(DT_DBDATE)DATEADD(&quot;dd&quot;,-1, GETDATE()),&quot;-&quot;,&quot;&quot;) +  &quot;/*.*&quot;&#xA;  : &#xA;  &quot;/&quot; + REPLACE((DT_WSTR, 10)(DT_DBDATE)DATEADD(&quot;dd&quot;,-2, GETDATE()),&quot;-&quot;,&quot;&quot;) +  &quot;/*.*&quot; "
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_ftpLocForPriceCurves">
      <DTS:VariableValue
        DTS:DataType="8">/20190213/*.*</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{01DF74B3-38B8-412A-BF0C-6C4E09DBA823}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_FTP_Path">
      <DTS:VariableValue
        DTS:DataType="8">/today/*.*</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22A76DD7-4E3C-4D4D-988F-219F60E56B4D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_isFormatError">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AF156361-2B67-4333-A653-7CF5CC7956C7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_LocalPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\PriceCurves\Temp\Files\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D040DF9-1355-4617-851D-129F60CEC6BA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_module">
      <DTS:VariableValue
        DTS:DataType="8">PriceCurves</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F5CDF8D-6432-481E-B730-9473A0EE0BA3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_PackageSubDir">
      <DTS:VariableValue
        DTS:DataType="8">\NymexTreasuryPlattsPriceCurve\Package</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C49E11FE-46BA-4A12-B7CE-8AD12B8CE99B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_param_allParseTypes">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B65F7EF-D197-4891-BAA1-7BC4D011E0E1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_param_dataType">
      <DTS:VariableValue
        DTS:DataType="8">spc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F91F1443-197F-440A-A396-1B195B378B84}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;LADWPCurveImport_&quot;+ @[User::ps_param_processid]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_param_jobName">
      <DTS:VariableValue
        DTS:DataType="8">LADWPCurveImport_</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{941C8727-051D-48C5-8DE8-BD8E3BDD459B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ps_param_parseType">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49BDC821-A893-4552-BDB9-ED67CC78DECC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_param_processid">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22A14319-3C4D-4FCB-9C1C-893359B3CE42}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_param_sendMail">
      <DTS:VariableValue
        DTS:DataType="8">y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBF6F1F5-164A-439E-BE1F-9E243245ACFF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_parseCompleted">
      <DTS:VariableValue
        DTS:DataType="8">n</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A9D9CA8D-5091-47AF-984E-01196C7107DB}"
      DTS:Expression="@[User::ps_workspace]+&quot;\\&quot;+ @[User::ps_module]+&quot;\\Temp\\parseDetail.txt&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_parseDetail">
      <DTS:VariableValue
        DTS:DataType="8">D:\ImportUAT\PriceCurves\Temp\parseDetail.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97613F14-9EA5-4EDE-A671-6CC667A4956B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ps_parseRecordsCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{64309ACB-5FED-4ACA-BC19-1F29EE2F373B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ps_destination] + &quot;\\&quot;+SUBSTRING( @[User::ps_fileNameInProcess] , 1 , FINDSTRING( @[User::ps_fileNameInProcess],&quot;.&quot;,1) - 1 ) &#xA;+&quot;_&quot;+ (DT_STR, 2, 1252) datepart(&quot;mm&quot;, @[System::StartTime])+(DT_STR, 2, 1252)datepart(&quot;dd&quot;, @[System::StartTime])+(DT_STR, 4, 1252)datepart(&quot;yyyy&quot;, @[System::StartTime])&#xA;+&quot;_&quot;+ (DT_STR, 2, 1252)datepart(&quot;Hh&quot;, @[System::StartTime])+(DT_STR, 2, 1252)datepart(&quot;n&quot;, @[System::StartTime])+(DT_STR, 2, 1252)datepart(&quot;s&quot;, @[System::StartTime])+&#xA; SUBSTRING( @[User::ps_fileNameInProcess] , FINDSTRING( @[User::ps_fileNameInProcess],&quot;.&quot;,1) , LEN( @[User::ps_fileNameInProcess] ) ) "
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_renameFile">
      <DTS:VariableValue
        DTS:DataType="8">D:\ImportUAT\PriceCurvesy\Error\\rdc_2152019_4244.ftp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06F1A34F-F5B4-4CE8-9EB8-80D2F60AAD58}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_ServerName">
      <DTS:VariableValue
        DTS:DataType="8">ftp.platts.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B062CFC3-12A6-4149-A5B8-95A85CA3FE22}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_ServerPassword">
      <DTS:VariableValue
        DTS:DataType="8">ftp59663</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A6F91010-3B66-4B07-BDAC-09F01944DE77}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_ServerUserName">
      <DTS:VariableValue
        DTS:DataType="8">jocelyn_mariano</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EBF9257-9BFC-47A9-AF32-6FF82331E592}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_setupFileName">
      <DTS:VariableValue
        DTS:DataType="8">nymex</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F24CC03F-749A-46C5-A499-E211389AED84}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_SshPrivateKeyPath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7DEB7206-C992-46AD-9370-9529A56FB242}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_SSH_KEY">
      <DTS:VariableValue
        DTS:DataType="8">ssh-rsa 2048 sy9xqy25YcF8bs6l7Btrtwpqu65/5HE8b8+hrGhHJtI=</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B205B53E-AE05-4667-8CDD-40B6281FECF1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_successErrorflag">
      <DTS:VariableValue
        DTS:DataType="8">e</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E5DFF34-BE5E-477B-AA71-339A4F9B77F7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_tempPath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"> </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E5EF32E-5194-4053-95CB-D0B22F5A3DDF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 2, 1252) datepart(&quot;mm&quot;, @[System::StartTime])+(DT_STR, 2, 1252)datepart(&quot;dd&quot;, @[System::StartTime])+(DT_STR, 4, 1252)datepart(&quot;yyyy&quot;, @[System::StartTime])&#xA;+&quot;_&quot;+ (DT_STR, 2, 1252)datepart(&quot;Hh&quot;, @[System::StartTime])+(DT_STR, 2, 1252)datepart(&quot;n&quot;, @[System::StartTime])&#xA;+(DT_STR, 2, 1252)datepart(&quot;s&quot;, @[System::StartTime])"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_timeStamp">
      <DTS:VariableValue
        DTS:DataType="8">2152019_4244</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15B313AA-5CF5-4D2E-8B50-A23B4201E698}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PS_winscp_path">
      <DTS:VariableValue
        DTS:DataType="8">C:\Program Files (x86)\WinSCP\WinSCP.exe</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3F38B3C2-D728-4936-B7D0-57692087501A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_workspace">
      <DTS:VariableValue
        DTS:DataType="8">E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD7D703B-9E67-4F6F-9CBA-661A17A62B2E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ps_workspace]+&quot;\\&quot;+ @[User::ps_module]+&quot;\\Schema\\treasury.xsd&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ps_XMLSchema_treasury">
      <DTS:VariableValue
        DTS:DataType="8">E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\PriceCurves\Schema\treasury.xsd</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{67B1BCAA-A345-438B-A3C3-308F2D5B70FC}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\call spa_adapter"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{91780BBB-9DBE-4817-B95B-52D9EA6750D3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="1033"
      DTS:ObjectName="call spa_adapter"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::ps_execAdapter" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::ps_param_dataType"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::ps_param_allParseTypes"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::ps_param_processid"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::ps_param_jobName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="4"
            SQLTask:DtsVariableName="User::ps_param_sendMail"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clean all the staging tables"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ED9999D2-B6CE-4A40-BD6B-2C02C91DEC7B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clean all the staging tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
          SQLTask:SqlStatementSource="DELETE FROM stage_source_price_curve_platts&#xA;                          DELETE FROM stage_source_price_curve_nymex&#xA;                                                      DELETE FROM stage_source_price_curve_treasury" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get the no of Parse Types"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{565ACA9C-2F01-4CA3-87B6-603CCF88BF2B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get the no of Parse Types"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ScriptTask_8a40da5788d64675bdec03bc94f70778"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="ps_setupFileName,ps_workspace,ps_timeStamp"
          ReadWriteVariables="ps_parseRecordsCount,ps_parseDetail,ps_module,ps_param_processid">
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.
    Public Sub Main()
        Dts.Variables.Item("ps_module").Value = "PriceCurves"
        'Dts.Variables.Item("ps_param_dataType").Value = "spc"

        Dim parseDetail As String = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Temp\" & Dts.Variables("ps_setupFileName").Value.ToString & ".txt"
        Dim fs As New FileStream(parseDetail, FileMode.Open)  'Opens your file
        Dim sr As New StreamReader(fs)  'This variable reads your file                     
        Dim parseRecordsCount As Int32

        While Not (sr.ReadLine() Is Nothing)
            parseRecordsCount += 1
        End While

        parseRecordsCount = CInt(parseRecordsCount / 3)
        Dts.Variables("ps_parseRecordsCount").Value = parseRecordsCount
        Dts.Variables("ps_parseDetail").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Temp\" & Dts.Variables("ps_setupFileName").Value.ToString & ".txt"
        Dts.Variables("ps_param_processid").Value = Dts.Variables.Item("ps_timeStamp").Value
        
        'MsgBox(Dts.Variables("ps_parseDetail").Value.ToString)
        sr.Close()
        fs.Close()
    End Sub

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="scripttask_8a40da5788d64675bdec03bc94f70778.vbproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_8a40da5788d64675bdec03bc94f70778.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_8a40da5788d64675bdec03bc94f70778.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{C8440E95-5996-4D42-B952-55BC64FFCE46}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_8a40da5788d64675bdec03bc94f70778.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_8a40da5788d64675bdec03bc94f70778.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("3d596c7b-88ec-4cda-bb45-72b931db3618")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{F5C62EC3-1D21-4C9C-BE2F-1CF54035EE2E}</msb:ProjectId>
		<msb:DisplayName>scripttask_8a40da5788d64675bdec03bc94f70778</msb:DisplayName>
		<msb:CodeName>scripttask_8a40da5788d64675bdec03bc94f70778</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_8a40da5788d64675bdec03bc94f70778.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ScriptTask_8a40da5788d64675bdec03bc94f70778.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABw961IAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAADj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALg8AABTAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
PAAAAAAAAEgAAAACAAUAbCUAAEwXAAABAAAAAAAAALIkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAFAPYBAAAPAAARAm8lAAAKbyYAAApyMwAAcG8nAAAKckcAAHBvKAAAChyNIAAAARMEEQQW
Am8lAAAKbyYAAApyXwAAcG8nAAAKbykAAApvFQAACqIRBBdyeQAAcKIRBBgCbyUAAApvJgAACnIz
AABwbycAAApvKQAACm8VAAAKohEEGXJ9AABwohEEGgJvJQAACm8mAAAKcosAAHBvJwAACm8pAAAK
bxUAAAqiEQQbcq0AAHCiEQQoKgAACgsHGXMrAAAKCgZzLAAACg0rBAgX1gwJby0AAAot9AhsIwAA
AAAAAAhAWyguAAAKtwwCbyUAAApvJgAACnK3AABwbycAAAoIjCQAAAFvKAAACgJvJQAACm8mAAAK
cuEAAHBvJwAAChyNIAAAARMEEQQWAm8lAAAKbyYAAApyXwAAcG8nAAAKbykAAApvFQAACqIRBBdy
eQAAcKIRBBgCbyUAAApvJgAACnIzAABwbycAAApvKQAACm8VAAAKohEEGXJ9AABwohEEGgJvJQAA
Cm8mAAAKcosAAHBvJwAACm8pAAAKbxUAAAqiEQQbcq0AAHCiEQQoKgAACm8oAAAKAm8lAAAKbyYA
AApy/wAAcG8nAAAKAm8lAAAKbyYAAApyJQEAcG8nAAAKbykAAAooEQAACm8oAAAKCW8vAAAKBm8w
AAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPwH
AAAjfgAAaAgAANAJAAAjU3RyaW5ncwAAAAA4EgAAQAEAACNVUwB4EwAAEAAAACNHVUlEAAAAiBMA
AMQDAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAAAxAAAACgAAAAwAAAAZAAAA
BAAAAD0AAAACAAAANgAAAA8AAAAEAAAACAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAAC
AAAAAACYCQEAAAAAAAoAeAFOAQoArAGOAQYAvAG1AQoAFAJOAQYAkgK1AQoAFAPqAgYASgM5AwYA
dwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4AsQSbBA4AygSbBA4A9wTfBAYAIQUOBQoAYAU5BQoAeAUT
AA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1AQoAPQYTAAYAgQZiBgYApwaVBgYAzga9BgYA4QYOBQYA
CAf+BgYAEwf+BhIAIAc0BBYAeQdZBxYAkQdZBwYAowe1AQYAsQf+BgYAugf+BgYAyge1AQYA1Qe1
AQYA4Qe1ARIA9wc0BAYAYAjCBQYAgAjCBQYAuAieCAYA0QiVBgYA7ghiBgYA/AiVBgYAFwmVBgYA
MgmVBgYASwmVBgYAZAmVBgYAgQmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3
AAkAAQACAAABEAB4ADcADQABAAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcA
DQAGABEAAAEQAPcAAgElAAgAFQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAA
Ai0AMQAiAjoAMQBHAkcAIQAjA5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwA
VoCTBNwAUCAAAAAABhiIARMAAQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjK
ARsAAQCkIAAAAAATCPABKAABALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0C
YwABAAghAAAAAEYChgJoAAIAHCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4
AAIAZCEAAAAAAQDGAoAAAwCAIQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMA
BADQIQAAAAADGIgBEwAEANghAAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAE
ADAiAAAAABEYwwEXAAUARCIAAAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUA
sCIAAAAABgB5BBMABQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QAR
AIgBEwB5AIgBEwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoC
iwCBAIgBEwCJAIgBEwCRAIgBSAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZ
AIgBEwCxAIgBwAFEACMDkABMAAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgB
EwDJANYGeALJANwGeALRAIgBEwBRAIgBEwBRADIHggLpAIMHhwLxAJoHjAL5AFgGkgL5AAsElwIB
AaoHmwLZAIgBoQLhAIgBqQLhAMEHcQAZAc8HsALhANsHEwARAdsHEwApAYgBTAIxAYgBEwA5AYgB
wAJBAYgBEwBJAYgBSAFRAYgBSAFZAYgBSAFhAYgBSAFpAYgBSAFxAYgBSAF5AYgBSAGBAYgBSAGJ
AYgBSAEIACwA4AAIADAA5QApAIMATQEuANsBUQIuANMBiQMuAKsB7QIuAMsBcgMuAOMBUQIuAOsB
iQMuAJsBxQIuAKMBzgIuALMBNQMuALsBQgMuAOsAUQIuAIsBbAMuAMMBUQJAACsA5QBAABMA8ABD
ABMA8ABDABsA/wBJAIMAawFjABsA/wBjABMA8ABpAIMAXgGAACsA5QCDAHMA5QCDABsA/wCDAHsA
5QCJAIMAfwGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMAbwLgACsA5QDp
ABMAbwIAARMA8AAAASsA5QAJARsB5QAgARMA8AAgASsA5QAjAZMB5QAjAYsBUQJAARMA8ABAASsA
5QBgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA8AAAAisA5QA0
ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CtQIEAAEABgAFAAcABgAIAAgAAACsAU8AAABlAlQA
AAAUAlkAAABxAl4AAAAtA5gAAABKA7UAAADBA7oAAAC7A8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAH
AAkAAgAPAAsAAgASAA0AAgATAA8AAQAUAA8AAgAXABEAdQB1AIgAGAEfASYBLQEqAjECBIAAAAEA
AAAAAAAAAAAAAAAAAgEAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAE
AAAAAAAAAAAAAAABALUBAAAAAAsAAAAAAAAAAAAAANAAFQQAAAAACwAAAAAAAAAAAAAA0AA6BwAA
AAAAAAAAAQAAABkIAAAFAAQABgAEAAoACQAAABAADAC7AgAAEAAZALsCAAAAABsAuwItALYBLQA4
AgAAAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRp
b24AU2NyaXB0VGFza184YTQwZGE1Nzg4ZDY0Njc1YmRlYzAzYmM5NGY3MDc3OC52YnByb2ouTXkA
TXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlk
ZXJgMQBNeVJlc291cmNlcwBTY3JpcHRUYXNrXzhhNDBkYTU3ODhkNjQ2NzViZGVjMDNiYzk0Zjcw
Nzc4LnZicHJvai5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBTY3JpcHRUYXNrXzhhNDBkYTU3ODhk
NjQ2NzViZGVjMDNiYzk0ZjcwNzc4LnZicHJvagBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5j
dG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QA
LmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0
aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRl
cgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRp
b24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5n
AENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dl
dEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRl
eHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNl
TWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0
dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3Vs
dHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVl
AG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAE1haW4ARW51bQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5
c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdu
b3N0aWNzAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21w
aWxlclNlcnZpY2VzAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmli
dXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5z
dGFuY2UATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1l
LkludGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFN5c3RlbS5JTwBGaWxlU3RyZWFtAFN0cmVhbVJl
YWRlcgBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFi
bGVzAFZhcmlhYmxlAGdldF9JdGVtAFN0cmluZwBDb25jYXQARmlsZU1vZGUAU3RyZWFtAFJlYWRM
aW5lAE1hdGgAUm91bmQASW50MzIAQ2xvc2UAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRUYXNrXzhhNDBkYTU3ODhkNjQ2NzViZGVj
MDNiYzk0ZjcwNzc4LnZicHJvai5SZXNvdXJjZXMucmVzb3VyY2VzAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lv
bkF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAFNjcmlwdFRhc2tfOGE0MGRhNTc4OGQ2NDY3NWJkZWMwM2JjOTRmNzA3NzgudmJw
cm9qLmRsbAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUA
cwAAE3AAcwBfAG0AbwBkAHUAbABlAAAXUAByAGkAYwBlAEMAdQByAHYAZQBzAAAZcABzAF8AdwBv
AHIAawBzAHAAYQBjAGUAAANcAAANXABUAGUAbQBwAFwAACFwAHMAXwBzAGUAdAB1AHAARgBpAGwA
ZQBOAGEAbQBlAAAJLgB0AHgAdAAAKXAAcwBfAHAAYQByAHMAZQBSAGUAYwBvAHIAZABzAEMAbwB1
AG4AdAAAHXAAcwBfAHAAYQByAHMAZQBEAGUAdABhAGkAbAAAJXAAcwBfAHAAYQByAGEAbQBfAHAA
cgBvAGMAZQBzAHMAaQBkAAAZcABzAF8AdABpAG0AZQBTAHQAYQBtAHAAAABKhQ5VIDsmRqt2XhNW
D4b0AAi3elxWGTTgiQiwP19/EdUKOgMgAAEDAAABBAAAEgwHBhUSGAESDAQAABIIBwYVEhgBEggE
AAASEQcGFRIYARIRBAAAEhQHBhUSGAESFAQIABIMBAgAEggECAASEQQIABIUBCABAhwDIAAIBCAA
EhUDIAAOAh4ABxABAR4AHgAHMAEBARAeAAITAAQgABMABwYVEhkBEwAEKAATAAMGEh0DBhIhBAAA
Eh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIgAgYcBAAAEiAECAASIAiJhF3NgIDMkQIGCAMGESgE
AAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15VGVtcGxhdGUIMTAuMC4wLjAAAAYV
EhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARIIBAcBEhEEBwESFAQgAQEOEAEAC015
LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxpY2F0aW9uAAATAQAOTXkuV2ViU2Vy
dmljZXMAAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEOBRABAB4ABAoBHgAEBwEeAAcgBAEO
Dg4OYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9j
b2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAGFRIYARMABhUSGQET
AAQKARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAEIAASYQYgAgEOEmEGBwISHRIdBAcBEiEI
AQACAAAAAAAEAAEBHAQHARIgBCAAEnUEIAASeQUgARJ9HAQgAQEcAyAAHAUAAQ4dDgcgAgEOEYCF
BiABARKAiQQAAQ0NCgcFEm0OCBJxHQ4EIAEBCAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQMAQAHMS4wLjAuMAAAKQEAJDNkNTk2YzdiLTg4ZWMt
NGNkYS1iYjQ1LTcyYjkzMWRiMzYxOAAABQEAAQAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAA3AQAy
U2NyaXB0VGFza184YTQwZGE1Nzg4ZDY0Njc1YmRlYzAzYmM5NGY3MDc3OC52YnByb2oAAAAAAOA8
AAAAAAAAAAAAAP48AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwPAAAAAAAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAAAQAAAAAAAAAAAAAAAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADwDAAABADAAMAAwADAAMAA0
AGIAMAAAAJAAMwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAGMAcgBpAHAA
dABUAGEAcwBrAF8AOABhADQAMABkAGEANQA3ADgAOABkADYANAA2ADcANQBiAGQAZQBjADAAMwBi
AGMAOQA0AGYANwAwADcANwA4AC4AdgBiAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIA
cwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAJAANwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBjAHIAaQBwAHQAVABhAHMAawBfADgAYQA0ADAAZABhADUANwA4ADgAZAA2ADQANgA3ADUA
YgBkAGUAYwAwADMAYgBjADkANABmADcAMAA3ADcAOAAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAMwAAAJgANwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AGMAcgBpAHAAdABUAGEAcwBrAF8AOABhADQAMABkAGEANQA3ADgAOABkADYANAA2ADcANQBiAGQA
ZQBjADAAMwBiAGMAOQA0AGYANwAwADcANwA4AC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAAiAAz
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AOABhADQA
MABkAGEANQA3ADgAOABkADYANAA2ADcANQBiAGQAZQBjADAAMwBiAGMAOQA0AGYANwAwADcANwA4
AC4AdgBiAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process Price Curves for all the given Parse Types"
      DTS:AssignExpression="@ps_counter = @ps_counter + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{4EC79C1A-BDFD-4784-9047-6D6119EF52BC}"
      DTS:EvalExpression="@ps_counter &lt;= @ps_parseRecordsCount"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:ForceExecutionResult="0"
      DTS:InitExpression="@ps_counter = 1"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:MaxErrorCount="1000"
      DTS:ObjectName="Process Price Curves for all the given Parse Types">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{B3E1127F-D65E-4252-A85C-4E4D00301D5F}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ForceExecutionResult="0"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="1000"
          DTS:ObjectName="Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Call spa_adapter"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2729DA74-D847-456B-B42D-48AC0811924F}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Call spa_adapter"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
                  SQLTask:SqlStmtSourceType="Variable"
                  SQLTask:SqlStatementSource="User::ps_execAdapter" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ps_param_dataType"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::ps_param_parseType"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::ps_param_processid"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::ps_param_jobName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="User::ps_param_sendMail"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Loop through all the files names"
              DTS:CreationName="STOCK:FOREACHLOOP"
              DTS:Description="Foreach Loop Container"
              DTS:DTSID="{A99A8A68-B55E-4FF1-AE7F-3D8572BE18D1}"
              DTS:ExecutableType="STOCK:FOREACHLOOP"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:ObjectName="Loop through all the files names">
              <DTS:ForEachEnumerator
                DTS:CreationName="DTS.ForEachFileEnumerator.3"
                DTS:DTSID="{4077933A-2873-4627-943A-1AC2CABE6A6F}"
                DTS:ObjectName="{4077933A-2873-4627-943A-1AC2CABE6A6F}">
                <DTS:PropertyExpression
                  DTS:Name="Directory">@[User::ps_tempPath]</DTS:PropertyExpression>
                <DTS:ObjectData>
                  <ForEachFileEnumeratorProperties>
                    <FEFEProperty
                      Folder=" " />
                    <FEFEProperty
                      FileSpec="*.*" />
                    <FEFEProperty
                      FileNameRetrievalType="1" />
                    <FEFEProperty
                      Recurse="0" />
                  </ForEachFileEnumeratorProperties>
                </DTS:ObjectData>
              </DTS:ForEachEnumerator>
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Loop through all the files names\Delete the unwanted files"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{B01301D5-BD12-4AEB-A80F-A82466D8883C}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Delete the unwanted files"
                  DTS:ThreadHint="2">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_2c9adc91ec3c4b6ca934fec2a90302ea"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_fileNameInProcessWithPath,ps_fileNameInProcess,ps_filesToProcess">
                      <ProjectItem
                        Name="scripttask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{E414122A-9AAF-4E7D-B100-8201F1C6DA2B}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
    Public Sub Main()

        Dim get_fileNameInProcess As String = Dts.Variables.Item("ps_fileNameInProcess").Value.ToString
        Dim get_fileNameInProcessWithPath As String = Dts.Variables.Item("ps_fileNameInProcessWithPath").Value.ToString
        Dim get_filesToProcess As String = Dts.Variables.Item("ps_filesToProcess").Value.ToString

        If get_filesToProcess.ToUpper <> "ALL" Then
            Dim deleteFile As String = "y"
            Dim i As Int32
            'Dim s As String = "gq.ftp,gp.ftp"

            Dim fields() As String = Split(get_filesToProcess, ",")

            For i = 0 To UBound(fields)
                If get_fileNameInProcess = fields(i) Then
                    deleteFile = "n"
                End If
            Next

            If deleteFile = "y" Then
                Dim fi As New FileInfo(get_fileNameInProcessWithPath)
                fi.Delete()
            End If
        End If
    End Sub
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("6fb74a52-7d2c-4f8b-89d6-d74caa62d051")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{1E6685F9-C378-431F-8373-EEF529B003D6}</msb:ProjectId>
		<msb:DisplayName>scripttask_2c9adc91ec3c4b6ca934fec2a90302ea</msb:DisplayName>
		<msb:CodeName>scripttask_2c9adc91ec3c4b6ca934fec2a90302ea</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_2c9adc91ec3c4b6ca934fec2a90302ea.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEM961IAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAfjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADA7AABLAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
OwAAAAAAAEgAAAACAAUATCQAAOQWAAABAAAAAAAAAJQjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAEANgAAAAPAAARAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAApvFQAACgoCbyUAAApvJgAA
CnJdAABwbycAAApvKAAACm8VAAAKCwJvJQAACm8mAAAKcpcAAHBvJwAACm8oAAAKbxUAAAoMCG8p
AAAKcrsAAHAWKCoAAAoWLmNywwAAcA0IcscAAHAVFigrAAAKEwQWEQQXKCwAAAoTBxMFKxsGEQQR
BZoWKCoAAAoWMwZyywAAcA0RBRfWEwURBREHMd8JcsMAAHAWKCoAAAoWMw8Hcy0AAAoTBhEGby4A
AAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPAHAAAj
fgAAXAgAAOgJAAAjU3RyaW5ncwAAAABEEgAA0AAAACNVUwAUEwAAEAAAACNHVUlEAAAAJBMAAMAD
AAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAAAxAAAACgAAAAwAAAAZAAAABAAA
ADsAAAACAAAANgAAAA8AAAAEAAAACAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAA
AACuCQEAAAAAAAoAeAFOAQoArAGOAQYAvAG1AQoAFAJOAQYAkgK1AQoAFAPqAgYASgM5AwYAdwNi
Aw4A3gPJAxIAXQQ0BAYAfgS1AQ4AsQSbBA4AygSbBA4A9wTfBAYAIQUOBQoAYAU5BQoAeAUTAA4A
rQWQBQYA4gXCBQYAAAa1AQYAJAa1AQoAPQYTAAYAgQZiBgYApwaVBgYAzga9BgYA4QYOBQYACAf+
BhIAEQc0BBYAagdKBxYAggdKBwYAlAe1AQoAowc5BQoAuwcTAAoAwwcTAAoA1wcTAAYA4we1AQYA
9we1ARIADQg0BAYAdgjCBQYAlgjCBQYAzgi0CAYA5wiVBgYABAliBgYAEgmVBgYALQmVBgYASAmV
BgYAYQmVBgYAegmVBgYAlwmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkA
AQACAAABEAB4ADcADQABAAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAG
ABEAAAEQAPcAAgElAAgAFQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0A
MQAiAjoAMQBHAkcAIQAjA5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCT
BNwAUCAAAAAABhiIARMAAQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsA
AQCkIAAAAAATCPABKAABALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwAB
AAghAAAAAEYChgJoAAIAHCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIA
ZCEAAAAAAQDGAoAAAwCAIQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQ
IQAAAAADGIgBEwAEANghAAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAi
AAAAABEYwwEXAAUARCIAAAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIA
AAAABgB5BBMABQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgB
EwB5AIgBEwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCB
AIgBEwCJAIgBEwCRAIgBSAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgB
EwCxAIgBwAFEACMDkABMAAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJ
ANYGeALJANwGeALRAIgBEwBRAIgBEwBRACMHggLhAHQHhwLpAIsHjALxAAsEkgL5AJsHcQABAa0H
lgIJAdEHnQIZAekHqALZAIgBSAHZAPAHEwApAYgBTAIxAYgBEwA5AYgBvQJBAYgBEwBJAYgBSAFR
AYgBSAFZAYgBSAFhAYgBSAFpAYgBSAFxAYgBSAF5AYgBSAGBAYgBSAGJAYgBSAEIACwA4AAIADAA
5QApAIMAYQEuANMBUQIuAMsBUQIuAKMBMgMuAMMBhgMuANsBhgMuAIsBwgIuAJMBywIuAJsB6gIu
AKsBPwMuAOsAUQIuAHsBaQMuALMBUQIuALsBbwNAACsA5QBAABMA8ABDABMA8ABDABsA/wBJAIMA
fwFjABMA8ABjABsA/wBpAIMAcgGAACsA5QCDABsA/wCDAHMA5QCDAHsA5QCJAIMATQGgACsA5QCj
AMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMAbwLgACsA5QDpABMAbwIAARMA8AAAASsA
5QAJARsB5QAgARMA8AAgASsA5QAjAXsBUQIjAYMB5QBAARMA8ABAASsA5QBgARMA8ABgASsA5QCA
ASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAisA5QAAAhMA8AA0ATkBPgFDAZgBnAGnAawB
uwG7AUMCYwJqAn0CsAIEAAEABgAFAAcABgAIAAgAAACsAU8AAABlAlQAAAAUAlkAAABxAl4AAAAt
A5gAAABKA7UAAADBA7oAAAC7A8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAPAAsAAgASAA0A
AgATAA8AAQAUAA8AAgAXABEAdQB1AIgAGAEfASYBLQEqAjECBIAAAAEAAAAAAAAAAAAAAAAAAgEA
AAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAEAAAAAAAAAAAAAAABALUB
AAAAAAsAAAAAAAAAAAAAANAAFQQAAAAACwAAAAAAAAAAAAAA0AArBwAAAAAAAAAAAQAAAC8IAAAF
AAQABgAEAAoACQAAABAADAC7AgAAEAAZALsCAAAAABsAuwItALYBLQA4AgAAAAAAPE1vZHVsZT4A
bXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24AU2NyaXB0VGFza18y
YzlhZGM5MWVjM2M0YjZjYTkzNGZlYzJhOTAzMDJlYS52YnByb2ouTXkATXlDb21wdXRlcgBNeVBy
b2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNl
cwBTY3JpcHRUYXNrXzJjOWFkYzkxZWMzYzRiNmNhOTM0ZmVjMmE5MDMwMmVhLnZicHJvai5NeS5S
ZXNvdXJjZXMATXlTZXR0aW5ncwBTY3JpcHRUYXNrXzJjOWFkYzkxZWMzYzRiNmNhOTM0ZmVjMmE5
MDMwMmVhLnZicHJvagBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJh
c2ljLkFwcGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21w
dXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0
UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2Vydmlj
ZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMA
RXF1YWxzAG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFu
Y2VfXwBUAGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29u
dGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdy
AFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJj
ZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABn
ZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4A
RW51bQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2RlRG9tLkNv
bXBpbGVyAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2Vy
SGlkZGVuQXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN0
YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3RlbS5Db21w
b25lbnRNb2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlHcm91cENv
bGxlY3Rpb25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNl
cwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFN5c3RlbS5JTwBGaWxlSW5mbwBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRz
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAFN0cmluZwBU
b1VwcGVyAE9wZXJhdG9ycwBDb21wYXJlU3RyaW5nAFN0cmluZ3MAQ29tcGFyZU1ldGhvZABTcGxp
dABJbmZvcm1hdGlvbgBBcnJheQBVQm91bmQARGVsZXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza18yYzlhZGM5MWVjM2M0
YjZjYTkzNGZlYzJhOTAzMDJlYS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Rmls
ZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrXzJjOWFkYzkxZWMzYzRiNmNhOTM0ZmVjMmE5MDMw
MmVhLnZicHJvai5kbGwAAAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBv
AHUAcgBjAGUAcwAAKXAAcwBfAGYAaQBsAGUATgBhAG0AZQBJAG4AUAByAG8AYwBlAHMAcwAAOXAA
cwBfAGYAaQBsAGUATgBhAG0AZQBJAG4AUAByAG8AYwBlAHMAcwBXAGkAdABoAFAAYQB0AGgAACNw
AHMAXwBmAGkAbABlAHMAVABvAFAAcgBvAGMAZQBzAHMAAAdBAEwATAAAA3kAAAMsAAADbgAAADYE
799QFABMn+BhU5rkUPMACLd6XFYZNOCJCLA/X38R1Qo6AyAAAQMAAAEEAAASDAcGFRIYARIMBAAA
EggHBhUSGAESCAQAABIRBwYVEhgBEhEEAAASFAcGFRIYARIUBAgAEgwECAASCAQIABIRBAgAEhQE
IAECHAMgAAgEIAASFQMgAA4CHgAHEAEBHgAeAAcwAQEBEB4AAhMABCAAEwAHBhUSGQETAAQoABMA
AwYSHQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiACBhwEAAASIAQIABIgCImEXc2A
gMyRAgYIAwYRKAQAAAAABAEAAAAFIAEBETUIAQABAAAAAAAFIAIBDg4YAQAKTXlUZW1wbGF0ZQgx
MC4wLjAuMAAABhUSGAESDAYVEhgBEggGFRIYARIRBhUSGAESFAQHARIMBAcBEggEBwESEQQHARIU
BCABAQ4TAQAOTXkuV2ViU2VydmljZXMAABABAAtNeS5Db21wdXRlcgAADAEAB015LlVzZXIAABMB
AA5NeS5BcHBsaWNhdGlvbgAABAABHBwDBwECAwcBCAYAARIVEVEEBwESFQMHAQ4FEAEAHgAECgEe
AAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBD
bGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYV
EhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMTABMAEwAEIAEBAgUBAAAAAAQgABJhBiACAQ4SYQYH
AhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcBEiAEIAAScQQgABJ1BSABEnkcAyAAHAYAAwgODgIK
AAQdDg4OCBGAiQcAAggSgJEIDAcIDg4ODh0OCBJtCAQgAQEICAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAwBAAcxLjAuMC4wAAApAQAkNmZiNzRh
NTItN2QyYy00ZjhiLTg5ZDYtZDc0Y2FhNjJkMDUxAAAFAQABAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTMAADcBADJTY3JpcHRUYXNrXzJjOWFkYzkxZWMzYzRiNmNhOTM0ZmVjMmE5MDMwMmVhLnZicHJv
agAAAABYOwAAAAAAAAAAAABuOwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYDsAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAAAEAAAAAAAAAAAAAAAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARgAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA8AwAAAQAwADAAMAAwADAA
NABiADAAAACQADMAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBjAHIAaQBw
AHQAVABhAHMAawBfADIAYwA5AGEAZABjADkAMQBlAGMAMwBjADQAYgA2AGMAYQA5ADMANABmAGUA
YwAyAGEAOQAwADMAMAAyAGUAYQAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAACQADcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwAyAGMAOQBhAGQAYwA5ADEAZQBjADMAYwA0AGIANgBj
AGEAOQAzADQAZgBlAGMAMgBhADkAMAAzADAAMgBlAGEALgB2AGIAcAByAG8AagAuAGQAbABsAAAA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADMAAACYADcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBjAHIAaQBwAHQAVABhAHMAawBfADIAYwA5AGEAZABjADkAMQBlAGMAMwBjADQAYgA2AGMAYQA5
ADMANABmAGUAYwAyAGEAOQAwADMAMAAyAGUAYQAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAIgA
MwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIAaQBwAHQAVABhAHMAawBfADIAYwA5
AGEAZABjADkAMQBlAGMAMwBjADQAYgA2AGMAYQA5ADMANABmAGUAYwAyAGEAOQAwADMAMAAyAGUA
YQAuAHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACAOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:ForEachVariableMappings>
                <DTS:ForEachVariableMapping
                  DTS:CreationName=""
                  DTS:DTSID="{C281FE47-7AA7-424A-85ED-B1FA711A997F}"
                  DTS:ObjectName="{C281FE47-7AA7-424A-85ED-B1FA711A997F}"
                  DTS:ValueIndex="0"
                  DTS:VariableName="User::ps_fileNameInProcess" />
              </DTS:ForEachVariableMappings>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Nymex Scrapping"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{0FC8A687-759E-4C70-B57A-04F0222D9BD9}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Nymex Scrapping"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="Executable">@[User::ps_workspace]+"\\Batch\\nymex.bat"</DTS:PropertyExpression>
              <DTS:PropertyExpression
                DTS:Name="WorkingDirectory">@[User::ps_workspace]+"\\Batch"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\Batch\nymex.bat"
                  WorkingDirectory="E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\Batch"
                  WindowStyle="Hidden" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\SCT_Download_FTP"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{11ABA56E-244D-474E-AC61-E98551777141}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SCT_Download_FTP"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_8c1dd76bf51e4ee4a7bc4b7e28b35764"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadWriteVariables="User::PS_FTP_Path,User::PS_LocalPath,User::PS_ServerName,User::PS_ServerPassword,User::PS_ServerUserName,User::PS_SSH_KEY,User::PS_SshPrivateKeyPath,User::ps_tempPath,User::PS_winscp_path">
                  <ProjectItem
                    Name="ST_8c1dd76bf51e4ee4a7bc4b7e28b35764.csproj"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  --><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><OutputType>Library</OutputType><NoStandardLibraries>false</NoStandardLibraries><RootNamespace>ST_efec6b4abb7a41cab2f68767f3a032d0.csproj</RootNamespace><AssemblyName>ST_8c1dd76bf51e4ee4a7bc4b7e28b35764</AssemblyName><ProjectGuid>{4357F598-0C6D-4BA2-A744-E6FF7E6FEE9F}</ProjectGuid></PropertyGroup><!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  --><PropertyGroup><PreBuildEvent></PreBuildEvent><PostBuildEvent></PostBuildEvent></PropertyGroup><!-- This sections specifies references for the project. --><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="WinSCPnet, Version=1.2.10.6257, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>..\..\..\..\..\..\..\..\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath></Reference></ItemGroup><!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  --><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile><!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    --></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="SSIS_ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions><PropertyGroup><TargetFrameworkVersion>v4.0</TargetFrameworkVersion></PropertyGroup><PropertyGroup><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties.Settings.get_Default():ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties.Sett" +
    "ings")]

namespace ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;

namespace ST_efec6b4abb7a41cab2f68767f3a032d0.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            

            string ftp_location;
            string local_location;
            string winscp_path;
            string FTPUserName, hostName, SSHPrivateKeyPath, SSH_KEY,password;

            local_location = (string)Dts.Variables["User::PS_LocalPath"].Value;
            ftp_location = (string)Dts.Variables["User::PS_FTP_Path"].Value;
            winscp_path = (string)Dts.Variables["User::PS_winscp_path"].Value;
          
            FTPUserName = (string)Dts.Variables["User::PS_ServerUserName"].Value;
            hostName = (string)Dts.Variables["User::PS_ServerName"].Value;
            SSHPrivateKeyPath = (string)Dts.Variables["User::PS_SshPrivateKeyPath"].Value;
            SSH_KEY = (string)Dts.Variables["User::PS_SSH_KEY"].Value;
            password = (string)Dts.Variables["User::PS_ServerPassword"].Value;
            SessionOptions sessionOptions = new SessionOptions
            {

                Protocol = Protocol.Sftp,
                HostName = hostName,
                UserName = FTPUserName,
                Password = password,
                SshHostKeyFingerprint = SSH_KEY//,
           //     SshPrivateKeyPath = SSHPrivateKeyPath,


            };
            using (Session session = new Session())
            {
                // WinSCP .NET assembly must be in GAC to be used with SSIS,
                // set path to WinSCP.exe explicitly, if using non-default path.
                session.ExecutablePath = winscp_path;//"C:\\Program Files (x86)\\WinSCP\\WinSCP.exe";
                session.DisableVersionCheck = true;
                // Connect
                session.Timeout = new TimeSpan(0, 2, 0); // two minutes
                try
                {
                    session.Open(sessionOptions);
                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;     
                    TransferOperationResult transferResult;
                    transferResult = session.GetFiles(ftp_location, local_location, false, transferOptions);
                    transferResult.Check();
                    session.Dispose();
                }
                catch (Exception ex)
                {
                    Dts.Events.FireError(0, "Script_Task", ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
                    Dts.TaskResult = (int)DTSExecResult.Failure;
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{1CD9F3F9-0B46-4260-B2E3-3683A08581D9}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_c2ef41f5ba794ddf8621285415422e78</msb:CodeName>
		<msb:DisplayName>st_c2ef41f5ba794ddf8621285415422e78</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Project Include="ST_8c1dd76bf51e4ee4a7bc4b7e28b35764.csproj"/>
		<msb:Breakpoint Include="da4ae10834c74ac983d20584691d3d5f">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:LineNumber>96</msb:LineNumber>
			<msb:HitCountTarget>1</msb:HitCountTarget>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_efec6b4abb7a41cab2f68767f3a032d0.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_efec6b4abb7a41cab2f68767f3a032d0.csproj")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_efec6b4abb7a41cab2f68767f3a032d0.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_8c1dd76bf51e4ee4a7bc4b7e28b35764.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAELLZVwAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAfjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQ0AABXAAAAAEAAACAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
NAAAAAAAAEgAAAACAAUAoCMAAIQQAAABAAAAAAAAAOgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgD1AQAAAgAAEQIoFgAACm8XAAAKcoEAAHBvGAAACm8ZAAAKdB4A
AAELAigWAAAKbxcAAApypwAAcG8YAAAKbxkAAAp0HgAAAQoCKBYAAApvFwAACnLLAABwbxgAAApv
GQAACnQeAAABDAIoFgAACm8XAAAKcvUAAHBvGAAACm8ZAAAKdB4AAAENAigWAAAKbxcAAApyJQEA
cG8YAAAKbxkAAAp0HgAAARMEAigWAAAKbxcAAApyTQEAcG8YAAAKbxkAAAp0HgAAASYCKBYAAApv
FwAACnKDAQBwbxgAAApvGQAACnQeAAABEwUCKBYAAApvFwAACnKlAQBwbxgAAApvGQAACnQeAAAB
EwZzGgAAChMMEQwWbxsAAAoRDBEEbxwAAAoRDAlvHQAAChEMEQZvHgAAChEMEQVvHwAAChEMEwdz
IAAAChMIEQgIbyEAAAoRCBdvIgAAChEIFhgWcyMAAApvJAAAChEIEQdvJQAACnMmAAAKEwkRCRZv
JwAAChEIBgcWEQlvKAAAChMKEQpvKQAAChEIbyoAAAreRRMLAigWAAAKbysAAAoWctUBAHARC28s
AAAKcu0BAHARC28tAAAKKC4AAAp+LwAAChZvMAAACiYCKBYAAAoXbzEAAAreAN4MEQgsBxEIbzIA
AArcAigWAAAKFm8xAAAKKgAAAAEcAAAAAF8BNpUBRSkAAAECAEABnNwBDAAAAAAeAigzAAAKKgAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAwAQAACN+
AAAsBQAAgAcAACNTdHJpbmdzAAAAAKwMAAD0AQAAI1VTAKAOAAAQAAAAI0dVSUQAAACwDgAA1AEA
ACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACoAAAAFAAAABgAAAAkAAAABAAAA
MwAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAAAAEAAAAGAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDP
AMgACgDrANYADgBLASIBBgBnAcgABgB9AWwBBgCuAZkBBgBlAksCBgCQAn4CBgCnAn4CBgDEAn4C
BgDjAn4CBgD8An4CBgAVA34CBgAwA34CBgBLA34CBgBkA34CBgCdA30DBgC9A30DBgASBP8DBgAv
BMgABgA0BMgABgBYBH4CCgCEBG4ECgCdBG4EBgCyBH0DDgDUBCIBDgD2BCIBEgBPBS8FEgBnBS8F
BgCDBcgAFgCbBZQFFgCqBZQFFgABBpQFBgA0BsgAGgA0BsgAFgBOBpQFFgBeBpQFFgB8BpQFFgCd
BpQFDgC/BiIBBgDeBsgABgApB8gAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEAByADwA
CQADAAUAAQAQAHsAhgANAAQACAADAQAAsQAAABEABAAKABEAjQETABEAugEXABEABAI5AAYGLQJH
AFaANQJKAFaAPQJKAFAgAAAAAIMYygEbAAEAWCAAAAAAkwjQAR8AAQCRIAAAAACTCOQBJAABAJgg
AAAAAJMI8AEpAAEAoCAAAAAAlggUAj0AAgCzIAAAAACGGMoBGwACAKcgAAAAAJEYzQSJAAIAvCAA
AAAAhgAoAhsAAgDcIgAAAACGGMoBGwACAAAAAQBFAjkAygFYAEEAygFYAEkAygFYAFEAygFYAFkA
ygFYAGEAygFYAGkAygFYAHEAygFYAHkAygFYAIEAygFYAIkAygFdAJEAygEbAJkAygEbAAkAygEb
AKEARgRiAKEAYQRpACkAygFuALkAygF6AMkAygEbABEAygEbANEAygEbABkACAWNANkAWQWSAOEA
cAWXAOkAeQWdAPkAygEbAPkAswWqAPkAwAVYAPkAzQVYAPkA2gVYAPkA5wVYAAkBygEbAAkBCQZY
AAkBHAaxABEBygG2AAkBPQa9AAkBSQbEACEBygEbACEBawbKAAkBlAbRADkBsQYbAAkBtwYbANkA
0wbdAEkB6AbjAEkB9AbjAPEAAwfnAPEACgfuAEEBEAfxANkAGgddAFEBtwYbABkAygEbAAgAFABO
AAgAGABTACkAkwCAAC4AGwCMAS4AIwCMAS4AYwCyAS4ACwAUAS4AEwBcAS4AMwBcAS4AKwCMAS4A
OwCSAS4AQwCMAS4AWwCpAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA+gACAAEAAwADAAAAfQEv
AAAA/AE0AAAAIAJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAASRthHQAAAAAAANsD
AAAEAAAAAAAAAAAAAAABAL8AAAAAAAQAAAAAAAAAAAAAAAEAyAAAAAAACwAAAAAAAAAAAAAACgAD
AQAAAAALAAAAAAAAAAAAAAAKABAFAAAAAAEABQAGAGUjAAAAAKEAigUAAAAAAgAAAAAAAAAAAAAA
AQC/AAAAAAAAAAAAAQAAADUHAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF84YzFkZDc2YmY1MWU0ZWU0
YTdiYzRiN2UyOGIzNTc2NC5kbGwAUmVzb3VyY2VzAFNUX2VmZWM2YjRhYmI3YTQxY2FiMmY2ODc2
N2YzYTAzMmQwLmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZWZlYzZi
NGFiYjdhNDFjYWIyZjY4NzY3ZjNhMDMyZDAuY3Nwcm9qAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVs
dABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzhjMWRkNzZi
ZjUxZTRlZTRhN2JjNGI3ZTI4YjM1NzY0AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RN
b2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9J
dGVtAGdldF9WYWx1ZQBTdHJpbmcAV2luU0NQbmV0AFdpblNDUABTZXNzaW9uT3B0aW9ucwBQcm90
b2NvbABzZXRfUHJvdG9jb2wAc2V0X0hvc3ROYW1lAHNldF9Vc2VyTmFtZQBzZXRfUGFzc3dvcmQA
c2V0X1NzaEhvc3RLZXlGaW5nZXJwcmludABTZXNzaW9uAHNldF9FeGVjdXRhYmxlUGF0aABzZXRf
RGlzYWJsZVZlcnNpb25DaGVjawBUaW1lU3BhbgBzZXRfVGltZW91dABPcGVuAFRyYW5zZmVyT3B0
aW9ucwBUcmFuc2Zlck1vZGUAc2V0X1RyYW5zZmVyTW9kZQBUcmFuc2Zlck9wZXJhdGlvblJlc3Vs
dABHZXRGaWxlcwBPcGVyYXRpb25SZXN1bHRCYXNlAENoZWNrAERpc3Bvc2UARXZlbnRzT2JqZWN0
V3JhcHBlcgBnZXRfRXZlbnRzAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBnZXRfU3RhY2tUcmFjZQBD
b25jYXQARW1wdHkARmlyZUVycm9yAHNldF9UYXNrUmVzdWx0AElEaXNwb3NhYmxlAFNUX2VmZWM2
YjRhYmI3YTQxY2FiMmY2ODc2N2YzYTAzMmQwLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMAAAB/UwBUAF8AZQBmAGUAYwA2AGIANABhAGIAYgA3AGEANAAxAGMAYQBiADIAZgA2
ADgANwA2ADcAZgAzAGEAMAAzADIAZAAwAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACVVAHMAZQByADoAOgBQAFMAXwBMAG8AYwBhAGwAUABh
AHQAaAAAI1UAcwBlAHIAOgA6AFAAUwBfAEYAVABQAF8AUABhAHQAaAAAKVUAcwBlAHIAOgA6AFAA
UwBfAHcAaQBuAHMAYwBwAF8AcABhAHQAaAAAL1UAcwBlAHIAOgA6AFAAUwBfAFMAZQByAHYAZQBy
AFUAcwBlAHIATgBhAG0AZQAAJ1UAcwBlAHIAOgA6AFAAUwBfAFMAZQByAHYAZQByAE4AYQBtAGUA
ADVVAHMAZQByADoAOgBQAFMAXwBTAHMAaABQAHIAaQB2AGEAdABlAEsAZQB5AFAAYQB0AGgAACFV
AHMAZQByADoAOgBQAFMAXwBTAFMASABfAEsARQBZAAAvVQBzAGUAcgA6ADoAUABTAF8AUwBlAHIA
dgBlAHIAUABhAHMAcwB3AG8AcgBkAAAXUwBjAHIAaQBwAHQAXwBUAGEAcwBrAAADDQAAAAAAUMkT
jpsOY0qZz6Jj1MsGcAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQAB
ARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgAB
ElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwD
IAAcCCJx7Eo8VtC/BiABARGAgQQgAQECBiADAQgICAYgAQERgI0FIAEBEn0GIAEBEYCVCyAEEoCZ
Dg4CEoCRBSAAEoChAyAADgYAAw4ODg4CBg4IIAUCCA4ODggZBw0ODg4ODg4OEn0SgIUSgJESgJkS
gKUSfUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTVF9lZmVjNmI0YWJiN2E0MWNhYjJmNjg3NjdmM2EwMzJk
MC5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAAEw0AAAAAAAAAAAAAG40AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABgNAAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAMQDAAAAAAAAAAAAAMQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBhHUkbAAABAGEdSRs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQkAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAAAwAAAQAwADAAMAAw
ADAANABiADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
ZQBmAGUAYwA2AGIANABhAGIAYgA3AGEANAAxAGMAYQBiADIAZgA2ADgANwA2ADcAZgAzAGEAMAAz
ADIAZAAwAC4AYwBzAHAAcgBvAGoAAAAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAA
MQAuADAALgA2ADkAOAA1AC4ANwA1ADIAMQAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBUAF8AOABjADEAZABkADcANgBiAGYANQAxAGUANABlAGUANABhADcAYgBjADQAYgA3AGUA
MgA4AGIAMwA1ADcANgA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AOABjADEAZABkADcANgBiAGYANQAxAGUANABl
AGUANABhADcAYgBjADQAYgA3AGUAMgA4AGIAMwA1ADcANgA0AC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAZgBlAGMANgBiADQAYQBiAGIANwBhADQAMQBj
AGEAYgAyAGYANgA4ADcANgA3AGYAMwBhADAAMwAyAGQAMAAuAGMAcwBwAHIAbwBqAAAAAABAAA4A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAOQA4ADUALgA3ADUAMgAx
AAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADgA
NQAuADcANQAyADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                  <Breakpoint
                    Enabled="True"
                    File="ScriptMain.cs"
                    Line="96"
                    Column="21" />
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Set ps_param_datatype as &quot;Error&quot;"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{DCE227B4-5741-431A-894A-72904E4BA7BE}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set ps_param_datatype as &quot;Error&quot;"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ScriptTask_06c52e20c63d470c842d1c2ea1abeece"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadWriteVariables="ps_param_dataType">
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_06c52e20c63d470c842d1c2ea1abeece.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_06c52e20c63d470c842d1c2ea1abeece.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("29034a28-739f-4009-87b1-cf607b0e74f1")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

	Public Sub Main()
        Dts.Variables("ps_param_dataType").Value = "Error"
	End Sub

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="scripttask_06c52e20c63d470c842d1c2ea1abeece.vbproj"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_06c52e20c63d470c842d1c2ea1abeece.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_06c52e20c63d470c842d1c2ea1abeece.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{09221B92-56DB-40E4-8691-E4A5C0A8497A}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{6C5BA7C4-7912-4421-A330-D29F105F02A5}</msb:ProjectId>
		<msb:DisplayName>scripttask_06c52e20c63d470c842d1c2ea1abeece</msb:DisplayName>
		<msb:CodeName>scripttask_06c52e20c63d470c842d1c2ea1abeece</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_06c52e20c63d470c842d1c2ea1abeece.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ScriptTask_06c52e20c63d470c842d1c2ea1abeece.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFA961IAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAAbjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQ5AABXAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
OQAAAAAAAEgAAAACAAUAjCMAAIgVAAABAAAAAAAAANEiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqggJvJQAACm8mAAAKcjMAAHBvJwAACnJXAABwbygAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKAHAAAjfgAADAgAAHAJAAAjU3RyaW5ncwAA
AAB8EQAAZAAAACNVUwDgEQAAEAAAACNHVUlEAAAA8BEAAJgDAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkPAAAA+iUzABYAAAEAAAAqAAAACgAAAAwAAAAZAAAABAAAADUAAAACAAAANgAAAA4AAAAEAAAA
CAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAAA4CQEAAAAAAAoAeAFOAQoArAGO
AQYAvAG1AQoAFAJOAQYAkgK1AQoAFAPqAgYASgM5AwYAdwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4A
sQSbBA4AygSbBA4A9wTfBAYAIQUOBQoAYAU5BQoAeAUTAA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1
AQoAPQYTAAYAgQZiBgYApwaVBgYAzga9BgYA4QYOBRIA/gY0BBYAVwc3BxYAbwc3BwYAgQe1ARIA
lwc0BAYAAAjCBQYAIAjCBQYAWAg+CAYAcQiVBgYAjghiBgYAnAiVBgYAtwiVBgYA0giVBgYA6wiV
BgYABAmVBgYAIQmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkAAQACAAAB
EAB4ADcADQABAAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAGABEAAAEQ
APcAAgElAAgAFQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0AMQAiAjoA
MQBHAkcAIQAjA5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCTBNwAUCAA
AAAABhiIARMAAQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsAAQCkIAAA
AAATCPABKAABALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwABAAghAAAA
AEYChgJoAAIAHCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIAZCEAAAAA
AQDGAoAAAwCAIQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQIQAAAAAD
GIgBEwAEANghAAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAiAAAAABEY
wwEXAAUARCIAAAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIAAAAABgB5
BBMABQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgBEwB5AIgB
EwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCBAIgBEwCJ
AIgBEwCRAIgBSAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgBEwCxAIgB
wAFEACMDkABMAAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJANYGeALJ
ANwGeALRAIgBEwBRAIgBEwBRABAHggLZAGEHhwLhAHgHjALpAFgGkgLxAIgBTAL5AIgBEwABAYgB
lwIJAYgBEwARAYgBSAEZAYgBSAEhAYgBSAEpAYgBSAExAYgBSAE5AYgBSAFBAYgBSAFJAYgBSAFR
AYgBSAEIACwA4AAIADAA5QApAIMAYQEuAJMBYAMuAIsBSQMuAKsBYAMuAEsBQwMuAFsBnAIuAOsA
UQIuAKMBUQIuAIMBUQIuAJsBUQIuAGMBpQIuAGsBxAIuAHMBDAMuAHsBGQNAACsA5QBAABMA8ABD
ABMA8ABDABsA/wBJAIMAfwFjABsA/wBjABMA8ABpAIMAcgGAACsA5QCDABsA/wCDAHMA5QCDAHsA
5QCJAIMATQGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMAbwLgACsA5QDp
ABMAbwIAASsA5QAAARMA8AAJARsB5QAgASsA5QAgARMA8AAjAVMB5QAjAUsBUQJAASsA5QBAARMA
8ABgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA8AAAAisA5QA0
ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CBAABAAYABQAHAAYACAAIAAAArAFPAAAAZQJUAAAA
FAJZAAAAcQJeAAAALQOYAAAASgO1AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIABgAHAAIABwAJ
AAIADwALAAIAEgANAAIAEwAPAAEAFAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIxAgSAAAABAAAA
AAAAAAAAAAAAAAIBAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAABAAA
AAAAAAAAAAAAAQC1AQAAAAALAAAAAAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAAANAAGAcAAAAA
AAAAAAEAAAC5BwAABQAEAAYABAAKAAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsCLQC2AS0AOAIA
AAAAADxNb2R1bGU+AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9u
AFNjcmlwdFRhc2tfMDZjNTJlMjBjNjNkNDcwYzg0MmQxYzJlYTFhYmVlY2UudmJwcm9qLk15AE15
Q29tcHV0ZXIATXlQcm9qZWN0AE15V2ViU2VydmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVy
YDEATXlSZXNvdXJjZXMAU2NyaXB0VGFza18wNmM1MmUyMGM2M2Q0NzBjODQyZDFjMmVhMWFiZWVj
ZS52YnByb2ouTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MAU2NyaXB0VGFza18wNmM1MmUyMGM2M2Q0
NzBjODQyZDFjMmVhMWFiZWVjZS52YnByb2oAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5j
Y3RvcgBnZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlv
bgBtX0FwcE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIA
Z2V0X1dlYlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9u
AFdlYlNlcnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBD
cmVhdGVfX0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJ
bnN0YW5jZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0
VmFsdWVgMQBtX0NvbnRleHQAR2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAX3Jlc01ncgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVy
ZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1
cmUAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBt
X1N5bmNPYmplY3QAZ2V0X1ZhbHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBNYWluAEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0
ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGls
ZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0
ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3Rh
bmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAENMU0NvbXBsaWFudEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza18wNmM1
MmUyMGM2M2Q0NzBjODQyZDFjMmVhMWFiZWVjZS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrXzA2YzUyZTIwYzYzZDQ3MGM4NDJk
MWMyZWExYWJlZWNlLnZicHJvai5kbGwAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkA
UgBlAHMAbwB1AHIAYwBlAHMAACNwAHMAXwBwAGEAcgBhAG0AXwBkAGEAdABhAFQAeQBwAGUAAAtF
AHIAcgBvAHIAAAABP8/bb7sXS5++Boz0VBaxAAi3elxWGTTgiQiwP19/EdUKOgMgAAEDAAABBAAA
EgwHBhUSGAESDAQAABIIBwYVEhgBEggEAAASEQcGFRIYARIRBAAAEhQHBhUSGAESFAQIABIMBAgA
EggECAASEQQIABIUBCABAhwDIAAIBCAAEhUDIAAOAh4ABxABAR4AHgAHMAEBARAeAAITAAQgABMA
BwYVEhkBEwAEKAATAAMGEh0DBhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIgAgYcBAAA
EiAECAASIAiJhF3NgIDMkQIGCAMGESgEAAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEA
Ck15VGVtcGxhdGUIMTAuMC4wLjAAAAYVEhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQH
ARIIBAcBEhEEBwESFAQgAQEOEwEADk15LldlYlNlcnZpY2VzAAAQAQALTXkuQ29tcHV0ZXIAAAwB
AAdNeS5Vc2VyAAATAQAOTXkuQXBwbGljYXRpb24AAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUD
BwEOBRABAB4ABAoBHgAEBwEeAAcgBAEODg4OYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9j
b2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0lu
c3RhbmNlX18AAAAGFRIYARMABhUSGQETAAQKARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAE
IAASYQYgAgEOEmEGBwISHRIdBAcBEiEIAQACAAAAAAAEAAEBHAQHARIgBCAAEm0EIAAScQUgARJ1
HAQgAQEcBCABAQgIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0DAEABzEuMC4wLjAAACkBACQyOTAzNGEyOC03MzlmLTQwMDktODdiMS1jZjYwN2Iw
ZTc0ZjEAAAUBAAEAABYBABFDb3B5cmlnaHQgQCAgMjAxMwAANwEAMlNjcmlwdFRhc2tfMDZjNTJl
MjBjNjNkNDcwYzg0MmQxYzJlYTFhYmVlY2UudmJwcm9qAAA8OQAAAAAAAAAAAABeOQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAUDkAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAABAAAAAAAAAAAAAAABDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEYAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAPAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAkAAzAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAYwByAGkA
cAB0AFQAYQBzAGsAXwAwADYAYwA1ADIAZQAyADAAYwA2ADMAZAA0ADcAMABjADgANAAyAGQAMQBj
ADIAZQBhADEAYQBiAGUAZQBjAGUALgB2AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAkAA3AAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AMAA2AGMANQAyAGUAMgAwAGMANgAzAGQANAA3ADAA
YwA4ADQAMgBkADEAYwAyAGUAYQAxAGEAYgBlAGUAYwBlAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAA
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQAzAAAAmAA3AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAYwByAGkAcAB0AFQAYQBzAGsAXwAwADYAYwA1ADIAZQAyADAAYwA2ADMAZAA0ADcAMABjADgA
NAAyAGQAMQBjADIAZQBhADEAYQBiAGUAZQBjAGUALgB2AGIAcAByAG8AagAuAGQAbABsAAAAAACI
ADMAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwAwADYA
YwA1ADIAZQAyADAAYwA2ADMAZAA0ADcAMABjADgANAAyAGQAMQBjADIAZQBhADEAYQBiAGUAZQBj
AGUALgB2AGIAcAByAG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAcDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Treasury Scrapping"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{4D1A9064-3F82-4E43-9302-9F5376047D88}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Treasury Scrapping"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="Executable">@[User::ps_workspace]+"\\Batch\\treasury.bat"</DTS:PropertyExpression>
              <DTS:PropertyExpression
                DTS:Name="WorkingDirectory">@[User::ps_workspace]+"\\Batch"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\Batch\treasury.bat"
                  WorkingDirectory="E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\Batch"
                  WindowStyle="Hidden" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Write every records from parseDetails to the variables"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{86B9FF62-61AE-4B1B-9599-431C399F7CAF}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Write every records from parseDetails to the variables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ScriptTask_dd06b2402c994a6dabcaffb447e70476"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadOnlyVariables="ps_counter,ps_parseDetail,ps_workspace,ps_module"
                  ReadWriteVariables="ps_param_parseType,ps_tempPath,ps_filesToProcess">
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_dd06b2402c994a6dabcaffb447e70476.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_dd06b2402c994a6dabcaffb447e70476.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("c8c91c73-baf0-4426-bc91-5ef0577164ab")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="scripttask_dd06b2402c994a6dabcaffb447e70476.vbproj"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_dd06b2402c994a6dabcaffb447e70476.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_dd06b2402c994a6dabcaffb447e70476.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{EF97B56E-A446-4C67-BA5A-6115AEF0CEB3}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{70F5F124-8930-4567-8210-02643B0625C6}</msb:ProjectId>
		<msb:CodeName>scripttask_dd06b2402c994a6dabcaffb447e70476</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>scripttask_dd06b2402c994a6dabcaffb447e70476</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:Project Include="scripttask_dd06b2402c994a6dabcaffb447e70476.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
    Public Sub Main()
        Dim get_counter As Int32 = CInt(Dts.Variables.Item("ps_counter").Value)        
        Dim get_parseDetail As String = Dts.Variables.Item("ps_parseDetail").Value.ToString
        Dim fs As New FileStream(get_parseDetail, FileMode.Open)  'Opens your file
        Dim sr As New StreamReader(fs)  'This variable reads your file                
        Dim FileText() As String
        Dim startFrom As Int32

        Dim test As String

        startFrom = (get_counter * 3) - 3
        FileText = Split(sr.ReadToEnd, vbCr)
        Dts.Variables("ps_filesToProcess").Value = FileText(startFrom + 1).Replace(Chr(10), "")
        Dts.Variables("ps_param_parseType").Value = CInt(FileText(startFrom + 2).Replace(Chr(10), ""))
        Dts.Variables("ps_tempPath").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\\" & Dts.Variables.Item("ps_module").Value.ToString & "\\Temp\\" & FileText(startFrom).Replace(Chr(10), "")
        test = Dts.Variables.Item("ps_workspace").Value.ToString & "\\" & Dts.Variables.Item("ps_module").Value.ToString & "\\Temp\\" & FileText(startFrom).Replace(Chr(10), "")
        'MsgBox(Dts.Variables("ps_param_parseType").Value.ToString)
        sr.Close()
        fs.Close()
    End Sub

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ScriptTask_dd06b2402c994a6dabcaffb447e70476.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPiUZFwAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAATj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPw8AABPAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
PQAAAAAAAEgAAAACAAUAcCUAAIwXAAABAAAAAAAAALUkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAGAPkBAAAPAAARAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAAooKQAACgwCbyUAAApvJgAA
CnJJAABwbycAAApvKAAACm8VAAAKDQkZcyoAAAoLB3MrAAAKEwQIGdgZ2hMFEQRvLAAACnJnAABw
FRYoLQAACgoCbyUAAApvJgAACnJrAABwbycAAAoGEQUX1ppyjwAAcHKTAABwby4AAApvLwAACgJv
JQAACm8mAAAKcpUAAHBvJwAACgYRBRjWmnKPAABwcpMAAHBvLgAACigwAAAKjCYAAAFvLwAACgJv
JQAACm8mAAAKcrsAAHBvJwAAChuNJQAAARMHEQcWAm8lAAAKbyYAAApy0wAAcG8nAAAKbygAAApv
FQAACqIRBxdy7QAAcKIRBxgCbyUAAApvJgAACnLzAABwbycAAApvKAAACm8VAAAKohEHGXIHAQBw
ohEHGgYRBZpyjwAAcHKTAABwby4AAAqiEQcoMQAACm8vAAAKG40lAAABEwcRBxYCbyUAAApvJgAA
CnLTAABwbycAAApvKAAACm8VAAAKohEHF3LtAABwohEHGAJvJQAACm8mAAAKcvMAAHBvJwAACm8o
AAAKbxUAAAqiEQcZcgcBAHCiEQcaBhEFmnKPAABwcpMAAHBvLgAACqIRBygxAAAKEwYRBG8yAAAK
B28zAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AAAYCAAAI34AAIQIAAAACgAAI1N0cmluZ3MAAAAAhBIAABwBAAAjVVMAoBMAABAAAAAjR1VJRAAA
ALATAADcAwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAAMwAAAAoAAAAMAAAA
GQAAAAQAAABAAAAAAgAAADYAAAAPAAAABAAAAAgAAAAJAAAACQAAAAEAAAAFAAAAAQAAAAMAAAAD
AAAAAgAAAAAAyAkBAAAAAAAKAHgBTgEKAKwBjgEGALwBtQEKABQCTgEGAJICtQEKABQD6gIGAEoD
OQMGAHcDYgMOAN4DyQMSAF0ENAQGAH4EtQEOALEEmwQOAMoEmwQOAPcE3wQGACEFDgUKAGAFOQUK
AHgFEwAOAK0FkAUGAOIFwgUGAAAGtQEGACQGtQEKAD0GEwAGAIEGYgYGAKcGlQYGAM4GvQYGAOEG
DgUGAAgH/gYGABMH/gYSACAHNAQWAHkHWQcWAJEHWQcKAKMHOQUGALkH/gYGAMIH/gYKANMHEwAK
ANsHEwAGAO8HtQEGAP4HtQEGABEItQESACcINAQGAJAIwgUGALAIwgUGAOgIzggGAAEJlQYGAB4J
YgYGACwJlQYGAEcJlQYGAGIJlQYGAHsJlQYGAJQJlQYGALEJlQYAAAAAAQAAAAAAAQABAAAAAAAp
ADcABQABAAEAAAAAAG0ANwAJAAEAAgAAARAAeAA3AA0AAQADAAUBAACCAAAADQAFAAgABQEAAJAA
AAANAAUADwAAAAAAqwC3AA0ABgARAAABEAD3AAIBJQAIABUAAQAAADUBAgEpAAoAGAACAQAAQAEA
AC0ACgAaADEA1wEgADEAAAItADEAIgI6ADEARwJHACEAIwOQABEAWgOdABEAgwOhABEA9gO/ABEA
/gPDAAYGgwTZAFaAiwTcAFaAkwTcAFAgAAAAAAYYiAETAAEAWCAAAAAABhiIARMAAQBgIAAAAAAR
GMMBFwABAIwgAAAAABMIygEbAAEApCAAAAAAEwjwASgAAQC8IAAAAAATCBkCNQABANQgAAAAABMI
NwJCAAEA7CAAAAAARgJ9AmMAAQAIIQAAAABGAoYCaAACABwhAAAAAIMAlwJsAAIANCEAAAAARgKf
AnEAAgBIIQAAAAARAKgCeAACAGQhAAAAAAEAxgKAAAMAgCEAAAAABhiIARMABACIIQAAAAADCNoC
iwAEALwhAAAAAAYYiAETAAQA0CEAAAAAAxiIARMABADYIQAAAAAWCI8DpQAEABQiAAAAABYIowOq
AAQAKCIAAAAAFgivA68ABAAwIgAAAAARGMMBFwAFAEQiAAAAAAYYiAETAAUATCIAAAAAFggLBMYA
BQCoIgAAAAAGGIgBEwAFALAiAAAAAAYAeQQTAAUAAAABAIQCAAABAL0CAAABAL0CAAABALsDCQCI
ARMAYQCIAeoAcQCIAfkAEQCIARMAeQCIARMAJACIARMALACIARMANACIARMAPACIARMAJADaAosA
LADaAosANADaAosAPADaAosAgQCIARMAiQCIARMAkQCIAUgBmQDxBZMBGQB9AmMAGQCGAmgAKQAS
BqABGQCfAnEAqQAuBrABGQCIARMAsQCIAcABRAAjA5AATAALBIsATABYBj0CTACIARMAuQCIAUwC
KQCwBlcCOQCIAVwCSQCIARMAyQDWBngCyQDcBngC0QCIARMAUQCIARMAUQAyB4IC6QCDB4cC8QCa
B4wC+QALBJICAQGvB5YC2QCIAZsC4QCIAaMC4QDJB3EAGQHpB6oCKQH2B7UC+QBYBrsCAQGvB8AC
KQEECMUC4QALCBMAEQELCBMAOQGIAUwCQQGIARMASQGIAdoCUQGIARMAWQGIAUgBYQGIAUgBaQGI
AUgBcQGIAUgBeQGIAUgBgQGIAUgBiQGIAUgBkQGIAUgBmQGIAUgBCAAsAOAACAAwAOUAKQCDAGEB
LgD7AVECLgDzAVECLgDLAU8DLgDrAaMDLgADAqMDLgCzAd8CLgC7AegCLgDDAQcDLgDTAVwDLgDr
AFECLgCjAYYDLgDbAVECLgDjAYwDQAArAOUAQAATAPAAQwATAPAAQwAbAP8ASQCDAH8BYwATAPAA
YwAbAP8AaQCDAHIBgAArAOUAgwAbAP8AgwBzAOUAgwB7AOUAiQCDAE0BoAArAOUAowDDAMgBowAT
APAAwAArAOUAwwATAPAAwwDrAFECyQATAG8C4AArAOUA6QATAG8CAAETAPAAAAErAOUACQEbAeUA
IAETAPAAIAErAOUAIwGjAVECIwGrAeUAQAETAPAAQAErAOUAYAETAPAAYAErAOUAgAErAOUAoAEr
AOUAwAErAOUAwAETAPAA4AErAOUAAAIrAOUAAAITAPAANAE5AT4BQwGYAZwBpwGsAbsBuwFDAmMC
agJ9AssCBAABAAYABQAHAAYACAAIAAAArAFPAAAAZQJUAAAAFAJZAAAAcQJeAAAALQOYAAAASgO1
AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIABgAHAAIABwAJAAIADwALAAIAEgANAAIAEwAPAAEA
FAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIxAgSAAAABAAAAAAAAAAAAAAAAAAIBAAAEAAAAAAAA
AAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAABAAAAAAAAAAAAAAAAQC1AQAAAAALAAAA
AAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAAANAAOgcAAAAAAAAAAAEAAABJCAAABQAEAAYABAAK
AAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsCLQC2AS0AOAIAAAA8TW9kdWxlPgBtc2NvcmxpYgBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMATXlBcHBsaWNhdGlvbgBTY3JpcHRUYXNrX2RkMDZiMjQwMmM5
OTRhNmRhYmNhZmZiNDQ3ZTcwNDc2LnZicHJvai5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdl
YlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAE15UmVzb3VyY2VzAFNjcmlwdFRh
c2tfZGQwNmIyNDAyYzk5NGE2ZGFiY2FmZmI0NDdlNzA0NzYudmJwcm9qLk15LlJlc291cmNlcwBN
eVNldHRpbmdzAFNjcmlwdFRhc2tfZGQwNmIyNDAyYzk5NGE2ZGFiY2FmZmI0NDdlNzA0NzYudmJw
cm9qAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGlj
YXRpb25TZXJ2aWNlcwBBcHBsaWNhdGlvbkJhc2UALmN0b3IATWljcm9zb2Z0LlZpc3VhbEJhc2lj
LkRldmljZXMAQ29tcHV0ZXIAU3lzdGVtAE9iamVjdAAuY2N0b3IAZ2V0X0NvbXB1dGVyAG1fQ29t
cHV0ZXJPYmplY3RQcm92aWRlcgBnZXRfQXBwbGljYXRpb24AbV9BcHBPYmplY3RQcm92aWRlcgBV
c2VyAGdldF9Vc2VyAG1fVXNlck9iamVjdFByb3ZpZGVyAGdldF9XZWJTZXJ2aWNlcwBtX015V2Vi
U2VydmljZXNPYmplY3RQcm92aWRlcgBBcHBsaWNhdGlvbgBXZWJTZXJ2aWNlcwBFcXVhbHMAbwBH
ZXRIYXNoQ29kZQBUeXBlAEdldFR5cGUAVG9TdHJpbmcAQ3JlYXRlX19JbnN0YW5jZV9fAFQAaW5z
dGFuY2UARGlzcG9zZV9fSW5zdGFuY2VfXwBnZXRfR2V0SW5zdGFuY2UATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAQ29udGV4dFZhbHVlYDEAbV9Db250ZXh0AEdldElu
c3RhbmNlAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAF9yZXNNZ3IAU3lzdGVtLkds
b2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AX3Jlc0N1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBWYWx1ZQBDdWx0dXJlAFN5c3RlbS5Db25maWd1cmF0aW9u
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAG1fVmFsdWUAbV9TeW5jT2JqZWN0AGdldF9WYWx1ZQBN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UATWFpbgBFbnVtAHZhbHVl
X18AU3VjY2VzcwBGYWlsdXJlAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2Vu
ZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1
bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVs
LkRlc2lnbgBIZWxwS2V5d29yZEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFjdGl2YXRvcgBDcmVhdGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0
dHJpYnV0ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2li
bGVBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3Rl
bS5UaHJlYWRpbmcATW9uaXRvcgBFbnRlcgBFeGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUAU3lzdGVtLklPAEZpbGVTdHJlYW0AU3RyZWFtUmVhZGVyAFNjcmlwdE9iamVjdE1vZGVsAGdl
dF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AQ29u
dmVyc2lvbnMAVG9JbnRlZ2VyAEZpbGVNb2RlAFN0cmVhbQBSZWFkVG9FbmQAU3RyaW5ncwBDb21w
YXJlTWV0aG9kAFNwbGl0AFN0cmluZwBSZXBsYWNlAEludDMyAENvbmNhdABDbG9zZQBDTFNDb21w
bGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdFRh
c2tfZGQwNmIyNDAyYzk5NGE2ZGFiY2FmZmI0NDdlNzA0NzYudmJwcm9qLlJlc291cmNlcy5yZXNv
dXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU2NyaXB0VGFza19kZDA2YjI0MDJjOTk0
YTZkYWJjYWZmYjQ0N2U3MDQ3Ni52YnByb2ouZGxsAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBz
AC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAVcABzAF8AYwBvAHUAbgB0AGUAcgAAHXAAcwBfAHAA
YQByAHMAZQBEAGUAdABhAGkAbAAAAw0AACNwAHMAXwBmAGkAbABlAHMAVABvAFAAcgBvAGMAZQBz
AHMAAAMKAAABACVwAHMAXwBwAGEAcgBhAG0AXwBwAGEAcgBzAGUAVAB5AHAAZQAAF3AAcwBfAHQA
ZQBtAHAAUABhAHQAaAAAGXAAcwBfAHcAbwByAGsAcwBwAGEAYwBlAAAFXABcAAATcABzAF8AbQBv
AGQAdQBsAGUAABFcAFwAVABlAG0AcABcAFwAAAAAAKnhKTCdyLZJqMLo8PFe+7MACLd6XFYZNOCJ
CLA/X38R1Qo6AyAAAQMAAAEEAAASDAcGFRIYARIMBAAAEggHBhUSGAESCAQAABIRBwYVEhgBEhEE
AAASFAcGFRIYARIUBAgAEgwECAASCAQIABIRBAgAEhQEIAECHAMgAAgEIAASFQMgAA4CHgAHEAEB
HgAeAAcwAQEBEB4AAhMABCAAEwAHBhUSGQETAAQoABMAAwYSHQMGEiEEAAASHQQAABIhBQABARIh
BAgAEh0ECAASIQMGEiACBhwEAAASIAQIABIgCImEXc2AgMyRAgYIAwYRKAQAAAAABAEAAAAFIAEB
ETUIAQABAAAAAAAFIAIBDg4YAQAKTXlUZW1wbGF0ZQgxMC4wLjAuMAAABhUSGAESDAYVEhgBEggG
FRIYARIRBhUSGAESFAQHARIMBAcBEggEBwESEQQHARIUBCABAQ4TAQAOTXkuV2ViU2VydmljZXMA
ABABAAtNeS5Db21wdXRlcgAADAEAB015LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAABAABHBwD
BwECAwcBCAYAARIVEVEEBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVt
LldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0lu
c3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAI
BwMTABMAEwAEIAEBAgUBAAAAAAQgABJhBiACAQ4SYQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEc
BAcBEiAEIAASdQQgABJ5BSABEn0cAyAAHAQAAQgcByACAQ4RgIUGIAEBEoCJCgAEHQ4ODggRgJEF
IAIODg4EIAEBHAQAAQgOBQABDh0ODgcIHQ4SbQgOEnEIDh0OBCABAQgIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACRj
OGM5MWM3My1iYWYwLTQ0MjYtYmM5MS01ZWYwNTc3MTY0YWIAAAUBAAEAABYBABFDb3B5cmlnaHQg
QCAgMjAxMwAANwEAMlNjcmlwdFRhc2tfZGQwNmIyNDAyYzk5NGE2ZGFiY2FmZmI0NDdlNzA0NzYu
dmJwcm9qAAAAJD0AAAAAAAAAAAAAPj0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA9AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAAAQAAAAAAAAAAAAAAAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADwDAAABADAAMAAwADAAMAA0
AGIAMAAAAJAAMwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAGMAcgBpAHAA
dABUAGEAcwBrAF8AZABkADAANgBiADIANAAwADIAYwA5ADkANABhADYAZABhAGIAYwBhAGYAZgBi
ADQANAA3AGUANwAwADQANwA2AC4AdgBiAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIA
cwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAJAANwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBjAHIAaQBwAHQAVABhAHMAawBfAGQAZAAwADYAYgAyADQAMAAyAGMAOQA5ADQAYQA2AGQA
YQBiAGMAYQBmAGYAYgA0ADQANwBlADcAMAA0ADcANgAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAMwAAAJgANwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AGMAcgBpAHAAdABUAGEAcwBrAF8AZABkADAANgBiADIANAAwADIAYwA5ADkANABhADYAZABhAGIA
YwBhAGYAZgBiADQANAA3AGUANwAwADQANwA2AC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAAiAAz
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AZABkADAA
NgBiADIANAAwADIAYwA5ADkANABhADYAZABhAGIAYwBhAGYAZgBiADQANAA3AGUANwAwADQANwA2
AC4AdgBiAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{55A96716-8934-48B9-8293-0DBB75C816DC}"
              DTS:EvalOp="1"
              DTS:Expression="@ps_param_parseType==2"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Write every records from parseDetails to the variables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Nymex Scrapping"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{0E78F1FF-AAE4-4FE3-951E-42BB43C45D25}"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\SCT_Download_FTP"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Loop through all the files names" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{4F1DF3D7-C725-4289-AC71-686476DD07EB}"
              DTS:EvalOp="1"
              DTS:Expression="@ps_param_parseType==1"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Write every records from parseDetails to the variables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\SCT_Download_FTP"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{04FEEE22-118E-461C-949D-5E5674F12221}"
              DTS:EvalOp="1"
              DTS:Expression="@ps_param_parseType==3"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Write every records from parseDetails to the variables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Treasury Scrapping"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{42802C9C-01DA-41B7-9225-3C23FA8B7377}"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\SCT_Download_FTP"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Set ps_param_datatype as &quot;Error&quot;"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{31988FA1-DE00-4E13-A39C-074001A9EAD9}"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Nymex Scrapping"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Set ps_param_datatype as &quot;Error&quot;"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{95098D2B-54D4-4D8C-B432-71A5DBD6D977}"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Treasury Scrapping"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Set ps_param_datatype as &quot;Error&quot;"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{7D1B093E-A4EF-41D1-8C09-F779EDC7036A}"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Set ps_param_datatype as &quot;Error&quot;"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Call spa_adapter" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Price Curves for all the given Parse Types\Post to message board on Format Error"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DF701219-830E-4BCC-B35D-9AD7BDB08C56}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Post to message board on Format Error"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
              SQLTask:SqlStatementSource="INSERT INTO message_board&#xA;                      (user_login_id, source, description, url_desc, url, type, job_name, as_of_date, create_ts, create_user, update_ts, update_user, process_id)&#xA;VALUES     (dbo.FNADBUser(), 'Import.PriceCurves', 'Error on the file format.Please check in the Error folder.', NULL, NULL, 'e',?, NULL, GETDATE(), dbo.FNADBUser(), GETDATE(), &#xA;                      dbo.FNADBUser(),?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ps_param_jobName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ps_param_processid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{115F9F82-39D9-45BE-A980-1D5F33F07F92}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:ForceExecutionResult="0"
          DTS:LocaleID="1033"
          DTS:MaxErrorCount="1000"
          DTS:ObjectName="Read each  Price Curve Doc">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{0695527B-1DBB-4595-A466-4566DA93906F}"
            DTS:ObjectName="{0695527B-1DBB-4595-A466-4566DA93906F}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::ps_tempPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder=" " />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Decide what Parse Logic to Execute"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{D21779F2-C167-4096-9385-95C85A9EAE6C}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Decide what Parse Logic to Execute"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ScriptTask_a6e7e8a8242d40a1a546a5225e43626e"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadOnlyVariables="ps_workspace,ps_module,ps_param_parseType"
                  ReadWriteVariables="ps_successErrorflag,ps_destination,ps_parseCompleted,ps_isFormatError,ps_param_dataType,ps_param_allParseTypes">
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_a6e7e8a8242d40a1a546a5225e43626e.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_a6e7e8a8242d40a1a546a5225e43626e.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("799b7eb4-abbc-46a5-ac2e-5b060df0e775")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

	Public Sub Main()
		'
		' Add your code here
        '

        Dts.Variables("ps_successErrorflag").Value = "e"
        Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Error"
        Dts.Variables("ps_parseCompleted").Value = "n"        
        Dts.Variables("ps_isFormatError").Value = "n"
        Dts.Variables("ps_param_dataType").Value = "spc"
        Dts.Variables("ps_param_allParseTypes").Value = Dts.Variables("ps_param_allParseTypes").Value.ToString & "," & Dts.Variables("ps_param_parseType").Value.ToString
       
	End Sub

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="scripttask_a6e7e8a8242d40a1a546a5225e43626e.vbproj"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_a6e7e8a8242d40a1a546a5225e43626e.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_a6e7e8a8242d40a1a546a5225e43626e.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{BAD8C67F-AC73-41B8-BF80-F0D84041C5F5}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{8C13622D-56BD-403C-89B1-4DA1C95B5DF8}</msb:ProjectId>
		<msb:DisplayName>scripttask_a6e7e8a8242d40a1a546a5225e43626e</msb:DisplayName>
		<msb:CodeName>scripttask_a6e7e8a8242d40a1a546a5225e43626e</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_a6e7e8a8242d40a1a546a5225e43626e.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ScriptTask_a6e7e8a8242d40a1a546a5225e43626e.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIs961IAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAA/jsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKg7AABTAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
OwAAAAAAAEgAAAACAAUAvCQAAOwWAAABAAAAAAAAAAIkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAFAEYBAAAAAAAAAm8lAAAKbyYAAApyMwAAcG8nAAAKclsAAHBvKAAACgJvJQAACm8mAAAK
cl8AAHBvJwAACgJvJQAACm8mAAAKcn0AAHBvJwAACm8pAAAKbxUAAApylwAAcAJvJQAACm8mAAAK
cpsAAHBvJwAACm8pAAAKbxUAAApyrwAAcCgqAAAKbygAAAoCbyUAAApvJgAACnK9AABwbycAAApy
4QAAcG8oAAAKAm8lAAAKbyYAAApy5QAAcG8nAAAKcuEAAHBvKAAACgJvJQAACm8mAAAKcgcBAHBv
JwAACnIrAQBwbygAAAoCbyUAAApvJgAACnIzAQBwbycAAAoCbyUAAApvJgAACnIzAQBwbycAAApv
KQAACm8VAAAKcmEBAHACbyUAAApvJgAACnJlAQBwbycAAApvKQAACm8VAAAKKCsAAApvKAAACiq0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC4BwAAI34A
ACQIAACACQAAI1N0cmluZ3MAAAAApBEAAIwBAAAjVVMAMBMAABAAAAAjR1VJRAAAAEATAACsAwAA
I0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAAKwAAAAoAAAAMAAAAGQAAAAQAAAA4
AAAAAgAAADYAAAAOAAAABAAAAAgAAAAJAAAACQAAAAEAAAAFAAAAAQAAAAMAAAADAAAAAgAAAAAA
RgkBAAAAAAAKAHgBTgEKAKwBjgEGALwBtQEKABQCTgEGAJICtQEKABQD6gIGAEoDOQMGAHcDYgMO
AN4DyQMSAF0ENAQGAH4EtQEOALEEmwQOAMoEmwQOAPcE3wQGACEFDgUKAGAFOQUKAHgFEwAOAK0F
kAUGAOIFwgUGAAAGtQEGACQGtQEKAD0GEwAGAIEGYgYGAKcGlQYGAM4GvQYGAOEGDgUSAP4GNAQW
AFcHNwcWAG8HNwcGAIEHtQEGAI8HtQESAKUHNAQGAA4IwgUGAC4IwgUGAGYITAgGAH8IlQYGAJwI
YgYGAKoIlQYGAMUIlQYGAOAIlQYGAPkIlQYGABIJlQYGAC8JlQYAAAAAAQAAAAAAAQABAAAAAAAp
ADcABQABAAEAAAAAAG0ANwAJAAEAAgAAARAAeAA3AA0AAQADAAUBAACCAAAADQAFAAgABQEAAJAA
AAANAAUADwAAAAAAqwC3AA0ABgARAAABEAD3AAIBJQAIABUAAQAAADUBAgEpAAoAGAACAQAAQAEA
AC0ACgAaADEA1wEgADEAAAItADEAIgI6ADEARwJHACEAIwOQABEAWgOdABEAgwOhABEA9gO/ABEA
/gPDAAYGgwTZAFaAiwTcAFaAkwTcAFAgAAAAAAYYiAETAAEAWCAAAAAABhiIARMAAQBgIAAAAAAR
GMMBFwABAIwgAAAAABMIygEbAAEApCAAAAAAEwjwASgAAQC8IAAAAAATCBkCNQABANQgAAAAABMI
NwJCAAEA7CAAAAAARgJ9AmMAAQAIIQAAAABGAoYCaAACABwhAAAAAIMAlwJsAAIANCEAAAAARgKf
AnEAAgBIIQAAAAARAKgCeAACAGQhAAAAAAEAxgKAAAMAgCEAAAAABhiIARMABACIIQAAAAADCNoC
iwAEALwhAAAAAAYYiAETAAQA0CEAAAAAAxiIARMABADYIQAAAAAWCI8DpQAEABQiAAAAABYIowOq
AAQAKCIAAAAAFgivA68ABAAwIgAAAAARGMMBFwAFAEQiAAAAAAYYiAETAAUATCIAAAAAFggLBMYA
BQCoIgAAAAAGGIgBEwAFALAiAAAAAAYAeQQTAAUAAAABAIQCAAABAL0CAAABAL0CAAABALsDCQCI
ARMAYQCIAeoAcQCIAfkAEQCIARMAeQCIARMAJACIARMALACIARMANACIARMAPACIARMAJADaAosA
LADaAosANADaAosAPADaAosAgQCIARMAiQCIARMAkQCIAUgBmQDxBZMBGQB9AmMAGQCGAmgAKQAS
BqABGQCfAnEAqQAuBrABGQCIARMAsQCIAcABRAAjA5AATAALBIsATABYBj0CTACIARMAuQCIAUwC
KQCwBlcCOQCIAVwCSQCIARMAyQDWBngCyQDcBngC0QCIARMAUQCIARMAUQAQB4IC2QBhB4cC4QB4
B4wC6QBYBpIC6QALBJcC8QCIB5sC8QCIB6MC+QCIAUwCAQGIARMACQGIAaoCEQGIARMAGQGIAUgB
IQGIAUgBKQGIAUgBMQGIAUgBOQGIAUgBQQGIAUgBSQGIAUgBUQGIAUgBWQGIAUgBCAAsAOAACAAw
AOUAKQCDAGEBLgCrAXMDLgCjAVwDLgDDAXMDLgBjAVYDLgBzAa8CLgDrAFECLgC7AVECLgCbAVEC
LgCzAVECLgB7AbgCLgCDAdcCLgCLAR8DLgCTASwDQAArAOUAQAATAPAAQwATAPAAQwAbAP8ASQCD
AH8BYwAbAP8AYwATAPAAaQCDAHIBgAArAOUAgwAbAP8AgwBzAOUAgwB7AOUAiQCDAE0BoAArAOUA
owDDAMgBowATAPAAwAArAOUAwwATAPAAwwDrAFECyQATAG8C4AArAOUA6QATAG8CAAErAOUAAAET
APAACQEbAeUAIAErAOUAIAETAPAAIwFrAeUAIwFjAVECQAErAOUAQAETAPAAYAETAPAAYAErAOUA
gAErAOUAoAErAOUAwAErAOUAwAETAPAA4AErAOUAAAITAPAAAAIrAOUANAE5AT4BQwGYAZwBpwGs
AbsBuwFDAmMCagJ9AgQAAQAGAAUABwAGAAgACAAAAKwBTwAAAGUCVAAAABQCWQAAAHECXgAAAC0D
mAAAAEoDtQAAAMEDugAAALsDywACAAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQAC
ABMADwABABQADwACABcAEQB1AHUAiAAYAR8BJgEtASoCMQIEgAAAAQAAAAAAAAAAAAAAAAACAQAA
BAAAAAAAAAAAAAAAAQAKAAAAAAAKAAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAtQEA
AAAACwAAAAAAAAAAAAAA0AAVBAAAAAALAAAAAAAAAAAAAADQABgHAAAAAAAAAAABAAAAxwcAAAUA
BAAGAAQACgAJAAAAEAAMALsCAAAQABkAuwIAAAAAGwC7Ai0AtgEtADgCAAAAAAA8TW9kdWxlPgBt
c2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMATXlBcHBsaWNhdGlvbgBTY3JpcHRUYXNrX2E2
ZTdlOGE4MjQyZDQwYTFhNTQ2YTUyMjVlNDM2MjZlLnZicHJvai5NeQBNeUNvbXB1dGVyAE15UHJv
amVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAE15UmVzb3VyY2Vz
AFNjcmlwdFRhc2tfYTZlN2U4YTgyNDJkNDBhMWE1NDZhNTIyNWU0MzYyNmUudmJwcm9qLk15LlJl
c291cmNlcwBNeVNldHRpbmdzAFNjcmlwdFRhc2tfYTZlN2U4YTgyNDJkNDBhMWE1NDZhNTIyNWU0
MzYyNmUudmJwcm9qAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0cwBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuQXBwbGljYXRpb25TZXJ2aWNlcwBBcHBsaWNhdGlvbkJhc2UALmN0b3IATWljcm9zb2Z0LlZp
c3VhbEJhc2ljLkRldmljZXMAQ29tcHV0ZXIAU3lzdGVtAE9iamVjdAAuY2N0b3IAZ2V0X0NvbXB1
dGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBnZXRfQXBwbGljYXRpb24AbV9BcHBPYmplY3RQ
cm92aWRlcgBVc2VyAGdldF9Vc2VyAG1fVXNlck9iamVjdFByb3ZpZGVyAGdldF9XZWJTZXJ2aWNl
cwBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBBcHBsaWNhdGlvbgBXZWJTZXJ2aWNlcwBF
cXVhbHMAbwBHZXRIYXNoQ29kZQBUeXBlAEdldFR5cGUAVG9TdHJpbmcAQ3JlYXRlX19JbnN0YW5j
ZV9fAFQAaW5zdGFuY2UARGlzcG9zZV9fSW5zdGFuY2VfXwBnZXRfR2V0SW5zdGFuY2UATWljcm9z
b2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAQ29udGV4dFZhbHVlYDEAbV9Db250
ZXh0AEdldEluc3RhbmNlAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAF9yZXNNZ3IA
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AX3Jlc0N1bHR1cmUAZ2V0X1Jlc291cmNl
TWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBWYWx1ZQBDdWx0dXJlAFN5c3RlbS5Db25m
aWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAG1fVmFsdWUAbV9TeW5jT2JqZWN0AGdl
dF9WYWx1ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UATWFpbgBF
bnVtAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29t
cGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJI
aWRkZW5BdHRyaWJ1dGUATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3Rh
bmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAU3lzdGVtLkNvbXBv
bmVudE1vZGVsLkRlc2lnbgBIZWxwS2V5d29yZEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFjdGl2YXRvcgBDcmVhdGVJbnN0YW5jZQBNeUdyb3VwQ29s
bGVjdGlvbkF0dHJpYnV0ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2Vz
AENvbVZpc2libGVBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHkAZ2V0X0Fzc2Vt
Ymx5AFN5c3RlbS5UaHJlYWRpbmcATW9uaXRvcgBFbnRlcgBFeGl0AERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0
X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBTdHJpbmcAQ29uY2F0AENMU0NvbXBsaWFudEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza19hNmU3
ZThhODI0MmQ0MGExYTU0NmE1MjI1ZTQzNjI2ZS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrX2E2ZTdlOGE4MjQyZDQwYTFhNTQ2
YTUyMjVlNDM2MjZlLnZicHJvai5kbGwAAAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0A
eQBSAGUAcwBvAHUAcgBjAGUAcwAAJ3AAcwBfAHMAdQBjAGMAZQBzAHMARQByAHIAbwByAGYAbABh
AGcAAANlAAAdcABzAF8AZABlAHMAdABpAG4AYQB0AGkAbwBuAAAZcABzAF8AdwBvAHIAawBzAHAA
YQBjAGUAAANcAAATcABzAF8AbQBvAGQAdQBsAGUAAA1cAEUAcgByAG8AcgAAI3AAcwBfAHAAYQBy
AHMAZQBDAG8AbQBwAGwAZQB0AGUAZAAAA24AACFwAHMAXwBpAHMARgBvAHIAbQBhAHQARQByAHIA
bwByAAAjcABzAF8AcABhAHIAYQBtAF8AZABhAHQAYQBUAHkAcABlAAAHcwBwAGMAAC1wAHMAXwBw
AGEAcgBhAG0AXwBhAGwAbABQAGEAcgBzAGUAVAB5AHAAZQBzAAADLAAAJXAAcwBfAHAAYQByAGEA
bQBfAHAAYQByAHMAZQBUAHkAcABlAAAAqPN914WgsEeG1ygQUwbYLwAIt3pcVhk04IkIsD9ffxHV
CjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYV
EhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzAB
AQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQI
ABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJECBggDBhEoBAAAAAAEAQAAAAUgAQERNQgBAAEA
AAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAESCAYVEhgBEhEG
FRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQEIAEBDhMBAA5NeS5XZWJTZXJ2aWNlcwAAEAEAC015
LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAEAAEcHAMHAQIDBwEI
BgABEhURUQQHARIVAwcBDgUQAQAeAAQKAR4ABAcBHgAHIAQBDg4ODmEBADRTeXN0ZW0uV2ViLlNl
cnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2Vf
XxNEaXNwb3NlX19JbnN0YW5jZV9fAAAABhUSGAETAAYVEhkBEwAECgETAAUgAQETAAgHAxMAEwAT
AAQgAQECBQEAAAAABCAAEmEGIAIBDhJhBgcCEh0SHQQHARIhCAEAAgAAAAAABAABARwEBwESIAQg
ABJtBCAAEnEFIAESdRwEIAEBHAMgABwHAAQODg4ODgYAAw4ODg4EIAEBCAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjAB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQMAQAHMS4wLjAuMAAAKQEA
JDc5OWI3ZWI0LWFiYmMtNDZhNS1hYzJlLTViMDYwZGYwZTc3NQAABQEAAQAAFgEAEUNvcHlyaWdo
dCBAICAyMDEzAAA3AQAyU2NyaXB0VGFza19hNmU3ZThhODI0MmQ0MGExYTU0NmE1MjI1ZTQzNjI2
ZS52YnByb2oAAADQOwAAAAAAAAAAAADuOwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4DsAAAAA
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAAAQAAAAAAAAAAAAAAAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADwDAAABADAAMAAwADAAMAA0
AGIAMAAAAJAAMwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAGMAcgBpAHAA
dABUAGEAcwBrAF8AYQA2AGUANwBlADgAYQA4ADIANAAyAGQANAAwAGEAMQBhADUANAA2AGEANQAy
ADIANQBlADQAMwA2ADIANgBlAC4AdgBiAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIA
cwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAJAANwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBjAHIAaQBwAHQAVABhAHMAawBfAGEANgBlADcAZQA4AGEAOAAyADQAMgBkADQAMABhADEA
YQA1ADQANgBhADUAMgAyADUAZQA0ADMANgAyADYAZQAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAMwAAAJgANwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AGMAcgBpAHAAdABUAGEAcwBrAF8AYQA2AGUANwBlADgAYQA4ADIANAAyAGQANAAwAGEAMQBhADUA
NAA2AGEANQAyADIANQBlADQAMwA2ADIANgBlAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAAiAAz
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AYQA2AGUA
NwBlADgAYQA4ADIANAAyAGQANAAwAGEAMQBhADUANAA2AGEANQAyADIANQBlADQAMwA2ADIANgBl
AC4AdgBiAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{6D92842D-05C4-45DC-A3A3-E51094423E3F}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="0"
              DTS:ObjectName="File Rename,Copying to destination,Delete files from temp folder and write status log">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Delete the file from temporary folder"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="File System Task"
                  DTS:DTSID="{9A8CD98E-9862-4FAC-A669-45F887D6E2A4}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="1033"
                  DTS:ObjectName="Delete the file from temporary folder"
                  DTS:TaskContact="File System Task;Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="7">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <FileSystemData
                      TaskOperationType="DeleteFile"
                      TaskSourcePath="User::ps_fileNameInProcessWithPath"
                      TaskIsSourceVariable="True" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Rename the file and copy to the Destination"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="File System Task"
                  DTS:DTSID="{57A90230-B2DD-4710-9851-05170BD39B7B}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="1033"
                  DTS:ObjectName="Rename the file and copy to the Destination"
                  DTS:TaskContact="File System Task;Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="7">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <FileSystemData
                      TaskSourcePath="User::ps_fileNameInProcessWithPath"
                      TaskIsSourceVariable="True"
                      TaskDestinationPath="User::ps_renameFile"
                      TaskIsDestinationVariable="True" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Write Status Log"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{8A8EA2F9-2C73-44D9-A65B-D98EBD1CB89F}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="1033"
                  DTS:ObjectName="Write Status Log"
                  DTS:ThreadHint="7">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_46f9e3f0cd274fb5836352d08257d9a3"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_fileNameInProcess,ps_workspace,ps_module,ps_successErrorflag">
                      <ProjectItem
                        Name="scripttask_46f9e3f0cd274fb5836352d08257d9a3.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_46f9e3f0cd274fb5836352d08257d9a3.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_46f9e3f0cd274fb5836352d08257d9a3.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{5B924C02-FEE4-4620-ADA9-0C6A71F9B3B4}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
    Public Sub Main()
        'MsgBox("2")
        'MsgBox(Dts.Variables("ps_destination").Value)
        'Dim fs As New FileStream("E:\Gateway\status.txt", FileMode.Open, FileAccess.Write)
        'Dim s As New StreamWriter(fs)
        Dim get_fileNameInProcessSource_Curves As String = Dts.Variables.Item("ps_fileNameInProcess").Value.ToString
        Dim get_successErrorflag As String = Dts.Variables.Item("ps_successErrorflag").Value.ToString
        's.WriteLine(get_fileNameInProcessSource_Curves)
        's.Close()

        'Declare the variables!
        Dim sFileName As String = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Status.txt"
        Dim myFileStream As New System.IO.FileStream(sFileName, FileMode.Append, FileAccess.Write, FileShare.None)
        Dim now As DateTime = DateTime.Now

        'Create the stream writer
        Dim myWriter As New System.IO.StreamWriter(myFileStream)


        If get_successErrorflag = "e" Then
            myWriter.WriteLine(get_fileNameInProcessSource_Curves & "    " & "Error" & "  " & now)
        Else
            myWriter.WriteLine(get_fileNameInProcessSource_Curves & "    " & "Success" & "  " & now)
            'Dts.Variables("ps_successErrorflag").Value = "e"
        End If



        'Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Error"
        'Dts.Variables.Item("ps_parseCompleted").Value = "n"
        'Flush before we close
        myWriter.Flush()
        myFileStream.Flush()

        'Close
        myWriter.Close()
        myFileStream.Close()

    End Sub
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_46f9e3f0cd274fb5836352d08257d9a3.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_46f9e3f0cd274fb5836352d08257d9a3.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("cdc49821-6968-4503-98ca-7f3a589595a5")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{66430F65-6C08-4D7C-BFFE-E94688503813}</msb:ProjectId>
		<msb:DisplayName>scripttask_46f9e3f0cd274fb5836352d08257d9a3</msb:DisplayName>
		<msb:CodeName>scripttask_46f9e3f0cd274fb5836352d08257d9a3</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_46f9e3f0cd274fb5836352d08257d9a3.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_46f9e3f0cd274fb5836352d08257d9a3.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACU+61IAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAAbjwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACA8AABLAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
PAAAAAAAAEgAAAACAAUAeCQAAKgXAAABAAAAAAAAAL4jAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAEAAIBAAAPAAARAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAApvFQAACgoCbyUAAApvJgAA
CnJdAABwbycAAApvKAAACm8VAAAKCwJvJQAACm8mAAAKcoUAAHBvJwAACm8oAAAKbxUAAApynwAA
cAJvJQAACm8mAAAKcqMAAHBvJwAACm8oAAAKbxUAAApytwAAcCgpAAAKEwURBRwYFnMqAAAKDCgr
AAAKEwQIcywAAAoNB3LPAABwFigtAAAKFjMaCQZy0wAAcBEEKC4AAAooLwAACm8wAAAKKxgJBnLr
AABwEQQoLgAACigvAAAKbzAAAAoJbzEAAAoIbzIAAAoJbzMAAAoIbzQAAAoqtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAALAgAACN+AACYCAAAHAoAACNT
dHJpbmdzAAAAALQSAAAIAQAAI1VTALwTAAAQAAAAI0dVSUQAAADMEwAA3AMAACNCbG9iAAAAAAAA
AAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAADUAAAAKAAAADAAAABkAAAAEAAAAQQAAAAIAAAA2AAAA
DwAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAOMJAQAAAAAACgB4
AU4BCgCsAY4BBgC8AbUBCgAUAk4BBgCSArUBCgAUA+oCBgBKAzkDBgB3A2IDDgDeA8kDEgBdBDQE
BgB+BLUBDgCxBJsEDgDKBJsEDgD3BN8EBgAhBQ4FCgBgBTkFCgB4BRMADgCtBZAFBgDiBcIFBgAA
BrUBBgAkBrUBCgA9BhMABgCBBmIGBgCnBpUGBgDOBr0GBgDhBg4FBgAIB/4GBgATB/4GBgAgB7UB
EgApBzQEFgCCB2IHFgCaB2IHBgCsB7UBBgC6B/4GBgDDB/4GBgDOB/4GBgDgB/4GCgDnBzkFCgD/
BzkFBgALCP4GBgAsCLUBEgBCCDQEBgCrCMIFBgDLCMIFBgADCekIBgAcCZUGBgA5CWIGBgBHCZUG
BgBiCZUGBgB9CZUGBgCWCZUGBgCvCZUGBgDMCZUGAAAAAAEAAAAAAAEAAQAAAAAAKQA3AAUAAQAB
AAAAAABtADcACQABAAIAAAEQAHgANwANAAEAAwAFAQAAggAAAA0ABQAIAAUBAACQAAAADQAFAA8A
AAAAAKsAtwANAAYAEQAAARAA9wACASUACAAVAAEAAAA1AQIBKQAKABgAAgEAAEABAAAtAAoAGgAx
ANcBIAAxAAACLQAxACICOgAxAEcCRwAhACMDkAARAFoDnQARAIMDoQARAPYDvwARAP4DwwAGBoME
2QBWgIsE3ABWgJME3ABQIAAAAAAGGIgBEwABAFggAAAAAAYYiAETAAEAYCAAAAAAERjDARcAAQCM
IAAAAAATCMoBGwABAKQgAAAAABMI8AEoAAEAvCAAAAAAEwgZAjUAAQDUIAAAAAATCDcCQgABAOwg
AAAAAEYCfQJjAAEACCEAAAAARgKGAmgAAgAcIQAAAACDAJcCbAACADQhAAAAAEYCnwJxAAIASCEA
AAAAEQCoAngAAgBkIQAAAAABAMYCgAADAIAhAAAAAAYYiAETAAQAiCEAAAAAAwjaAosABAC8IQAA
AAAGGIgBEwAEANAhAAAAAAMYiAETAAQA2CEAAAAAFgiPA6UABAAUIgAAAAAWCKMDqgAEACgiAAAA
ABYIrwOvAAQAMCIAAAAAERjDARcABQBEIgAAAAAGGIgBEwAFAEwiAAAAABYICwTGAAUAqCIAAAAA
BhiIARMABQCwIgAAAAAGAHkEEwAFAAAAAQCEAgAAAQC9AgAAAQC9AgAAAQC7AwkAiAETAGEAiAHq
AHEAiAH5ABEAiAETAHkAiAETACQAiAETACwAiAETADQAiAETADwAiAETACQA2gKLACwA2gKLADQA
2gKLADwA2gKLAIEAiAETAIkAiAETAJEAiAFIAZkA8QWTARkAfQJjABkAhgJoACkAEgagARkAnwJx
AKkALgawARkAiAETALEAiAHAAUQAIwOQAEwACwSLAEwAWAY9AkwAiAETALkAiAFMAikAsAZXAjkA
iAFcAkkAiAETAMkA1gZ4AskA3AZ4AtEAiAETAFEAiAETAFEAOweCAvEAjAeHAvkAoweMAgEBCwST
AgkBsweXAtkAiAGfAukA2AetAuEAiAGyAjEB8Qe5AjkBnwLAAgkBswfGAkEBFghIAeEAIAgTANkA
IAgTAOEAJggTACkBJggTAEkBiAFMAlEBiAETAFkBiAHZAmEBiAETAGkBiAFIAXEBiAFIAXkBiAFI
AYEBiAFIAYkBiAFIAZEBiAFIAZkBiAFIAaEBiAFIAakBiAFIAQgALADgAAgAMADlACkAgwBNAS4A
+wFRAi4ACwKiAy4A8wGiAy4AwwHnAi4A6wGLAy4AAwJRAi4AuwHeAi4AywEGAy4A0wFOAy4A2wFb
Ay4A6wBRAi4AqwGFAy4A4wFRAkAAKwDlAEAAEwDwAEMAGwD/AEMAEwDwAEkAgwBrAWMAGwD/AGMA
EwDwAGkAgwBeAYAAKwDlAIMAcwDlAIMAewDlAIMAGwD/AIkAgwB/AaAAKwDlAKMAwwDIAaMAEwDw
AMAAKwDlAMMA6wBRAsMAEwDwAMkAEwBvAuAAKwDlAOkAEwBvAgABKwDlAAABEwDwAAkBGwHlACAB
EwDwACABKwDlACMBqwFRAiMBswHlAEABEwDwAEABKwDlAGABEwDwAGABKwDlAIABKwDlAKABKwDl
AMABEwDwAMABKwDlAOABKwDlAAACKwDlAAACEwDwADQBOQE+AUMBmAGcAacBrAG7AbsBQwJjAmoC
fQLNAgQAAQAGAAUABwAGAAgACAAAAKwBTwAAAGUCVAAAABQCWQAAAHECXgAAAC0DmAAAAEoDtQAA
AMEDugAAALsDywACAAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQA
DwACABcAEQB1AHUAiAAYAR8BJgEtASoCMQIEgAAAAQAAAAAAAAAAAAAAAAACAQAABAAAAAAAAAAA
AAAAAQAKAAAAAAAKAAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAtQEAAAAACwAAAAAA
AAAAAAAA0AAVBAAAAAALAAAAAAAAAAAAAADQAEMHAAAAAAAAAAABAAAAZAgAAAUABAAGAAQACgAJ
AAAAEAAMALsCAAAQABkAuwIAAAAAGwC7Ai0AtgEtADgCAAAAAAA8TW9kdWxlPgBtc2NvcmxpYgBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMATXlBcHBsaWNhdGlvbgBTY3JpcHRUYXNrXzQ2ZjllM2YwY2Qy
NzRmYjU4MzYzNTJkMDgyNTdkOWEzLnZicHJvai5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdl
YlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAE15UmVzb3VyY2VzAFNjcmlwdFRh
c2tfNDZmOWUzZjBjZDI3NGZiNTgzNjM1MmQwODI1N2Q5YTMudmJwcm9qLk15LlJlc291cmNlcwBN
eVNldHRpbmdzAFNjcmlwdFRhc2tfNDZmOWUzZjBjZDI3NGZiNTgzNjM1MmQwODI1N2Q5YTMudmJw
cm9qAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGlj
YXRpb25TZXJ2aWNlcwBBcHBsaWNhdGlvbkJhc2UALmN0b3IATWljcm9zb2Z0LlZpc3VhbEJhc2lj
LkRldmljZXMAQ29tcHV0ZXIAU3lzdGVtAE9iamVjdAAuY2N0b3IAZ2V0X0NvbXB1dGVyAG1fQ29t
cHV0ZXJPYmplY3RQcm92aWRlcgBnZXRfQXBwbGljYXRpb24AbV9BcHBPYmplY3RQcm92aWRlcgBV
c2VyAGdldF9Vc2VyAG1fVXNlck9iamVjdFByb3ZpZGVyAGdldF9XZWJTZXJ2aWNlcwBtX015V2Vi
U2VydmljZXNPYmplY3RQcm92aWRlcgBBcHBsaWNhdGlvbgBXZWJTZXJ2aWNlcwBFcXVhbHMAbwBH
ZXRIYXNoQ29kZQBUeXBlAEdldFR5cGUAVG9TdHJpbmcAQ3JlYXRlX19JbnN0YW5jZV9fAFQAaW5z
dGFuY2UARGlzcG9zZV9fSW5zdGFuY2VfXwBnZXRfR2V0SW5zdGFuY2UATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAQ29udGV4dFZhbHVlYDEAbV9Db250ZXh0AEdldElu
c3RhbmNlAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAF9yZXNNZ3IAU3lzdGVtLkds
b2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AX3Jlc0N1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBWYWx1ZQBDdWx0dXJlAFN5c3RlbS5Db25maWd1cmF0aW9u
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAG1fVmFsdWUAbV9TeW5jT2JqZWN0AGdldF9WYWx1ZQBN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UATWFpbgBFbnVtAHZhbHVl
X18AU3VjY2VzcwBGYWlsdXJlAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2Vu
ZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1
bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVs
LkRlc2lnbgBIZWxwS2V5d29yZEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFjdGl2YXRvcgBDcmVhdGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0
dHJpYnV0ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2li
bGVBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3Rl
bS5UaHJlYWRpbmcATW9uaXRvcgBFbnRlcgBFeGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUAU3lzdGVtLklPAEZpbGVTdHJlYW0AU3RyZWFtV3JpdGVyAERhdGVUaW1lAFNjcmlwdE9iamVj
dE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0
X0l0ZW0AU3RyaW5nAENvbmNhdABGaWxlTW9kZQBGaWxlQWNjZXNzAEZpbGVTaGFyZQBnZXRfTm93
AFN0cmVhbQBPcGVyYXRvcnMAQ29tcGFyZVN0cmluZwBDb252ZXJzaW9ucwBUZXh0V3JpdGVyAFdy
aXRlTGluZQBGbHVzaABDbG9zZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdFRhc2tfNDZmOWUzZjBjZDI3NGZiNTgzNjM1MmQwODI1
N2Q5YTMudmJwcm9qLlJlc291cmNlcy5yZXNvdXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmli
dXRlAEd1aWRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAU2NyaXB0VGFza180NmY5ZTNmMGNkMjc0ZmI1ODM2MzUyZDA4MjU3ZDlhMy52YnByb2ouZGxs
AAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAKXAA
cwBfAGYAaQBsAGUATgBhAG0AZQBJAG4AUAByAG8AYwBlAHMAcwAAJ3AAcwBfAHMAdQBjAGMAZQBz
AHMARQByAHIAbwByAGYAbABhAGcAABlwAHMAXwB3AG8AcgBrAHMAcABhAGMAZQAAA1wAABNwAHMA
XwBtAG8AZAB1AGwAZQAAF1wAUwB0AGEAdAB1AHMALgB0AHgAdAAAA2UAABcgACAAIAAgAEUAcgBy
AG8AcgAgACAAABsgACAAIAAgAFMAdQBjAGMAZQBzAHMAIAAgAAAAZ86ad0YyF0yeb4fmYbuw6QAI
t3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEH
BhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAA
DgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAA
EiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJECBggDBhEoBAAAAAAE
AQAAAAUgAQERNQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIM
BhUSGAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQEIAEBDhABAAtNeS5Db21w
dXRlcgAADAEAB015LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAAEwEADk15LldlYlNlcnZpY2Vz
AAAEAAEcHAMHAQIDBwEIBgABEhURUQQHARIVAwcBDgUQAQAeAAQKAR4ABAcBHgAHIAQBDg4ODmEB
ADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNy
ZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAABhUSGAETAAYVEhkBEwAECgET
AAUgAQETAAgHAxMAEwATAAQgAQECBQEAAAAABCAAEmEGIAIBDhJhBgcCEh0SHQQHARIhCAEAAgAA
AAAABAABARwEBwESIAQgABJ5BCAAEn0GIAESgIEcAyAAHAcABA4ODg4ODSAEAQ4RgIkRgI0RgJEE
AAARdQYgAQESgJUGAAMIDg4CBQABDhF1BgADDg4ODgsHBg4OEm0ScRF1DgQgAQEICAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAwBAAcxLjAuMC4w
AAApAQAkY2RjNDk4MjEtNjk2OC00NTAzLTk4Y2EtN2YzYTU4OTU5NWE1AAAFAQABAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTMAADcBADJTY3JpcHRUYXNrXzQ2ZjllM2YwY2QyNzRmYjU4MzYzNTJkMDgy
NTdkOWEzLnZicHJvagAAAABIPAAAAAAAAAAAAABePAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
UDwAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAAAQAAAAAAAAAAAAAAAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADwDAAABADAAMAAwADAAMAA0
AGIAMAAAAJAAMwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAGMAcgBpAHAA
dABUAGEAcwBrAF8ANAA2AGYAOQBlADMAZgAwAGMAZAAyADcANABmAGIANQA4ADMANgAzADUAMgBk
ADAAOAAyADUANwBkADkAYQAzAC4AdgBiAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIA
cwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAJAANwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBjAHIAaQBwAHQAVABhAHMAawBfADQANgBmADkAZQAzAGYAMABjAGQAMgA3ADQAZgBiADUA
OAAzADYAMwA1ADIAZAAwADgAMgA1ADcAZAA5AGEAMwAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAMwAAAJgANwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AGMAcgBpAHAAdABUAGEAcwBrAF8ANAA2AGYAOQBlADMAZgAwAGMAZAAyADcANABmAGIANQA4ADMA
NgAzADUAMgBkADAAOAAyADUANwBkADkAYQAzAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAAiAAz
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8ANAA2AGYA
OQBlADMAZgAwAGMAZAAyADcANABmAGIANQA4ADMANgAzADUAMgBkADAAOAAyADUANwBkADkAYQAz
AC4AdgBiAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log.PrecedenceConstraints[Constraint 5]"
                  DTS:CreationName=""
                  DTS:DTSID="{CCA64337-9466-4B77-BEAA-9917E2A99722}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Rename the file and copy to the Destination"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 5"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Delete the file from temporary folder" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log.PrecedenceConstraints[Constraint 6]"
                  DTS:CreationName=""
                  DTS:DTSID="{16A571BE-A5CA-4353-9BDA-D30FDBFB3A8F}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Delete the file from temporary folder"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 6"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Write Status Log" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{04B0CFE4-14D4-4DCA-8A99-B8AE49957986}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="1000"
              DTS:ObjectName="Nymex Scrapping - ParseLogic_2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Extract As Of Date from the file and Set the SuccessErrorFlag"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{162E4386-6AB7-4FC8-B9A4-766EBEAF751E}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Extract As Of Date from the file and Set the SuccessErrorFlag"
                  DTS:ThreadHint="3">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_fe84383aa28a473b85aac98af30ea36a"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_fileNameInProcessWithPath,ps_workspace"
                      ReadWriteVariables="ps_asOfDate,ps_successErrorflag,ps_destination">
                      <ProjectItem
                        Name="scripttask_fe84383aa28a473b85aac98af30ea36a.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_fe84383aa28a473b85aac98af30ea36a.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_fe84383aa28a473b85aac98af30ea36a.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{5B505832-C66A-4C91-A541-66C7956A0DA8}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

    Public Sub Main()       
        Dim get_fileNameInProcessWithPath As String = Dts.Variables.Item("ps_fileNameInProcessWithPath").Value.ToString 'file to be read
        Dim fs As New FileStream(get_fileNameInProcessWithPath, FileMode.Open)  'Opens your file
        Dim sr As New StreamReader(fs)  'This variable reads your file
        Dim FileText() As String 'container for the text in the file
        Dim i As Int32
        Dim firstLine As String = ""
        Dim StartCapture As Boolean = False 'use to signal start of capture

        FileText = Split(sr.ReadToEnd, vbCr)  'split the stream by Carriage Return     
        firstLine = FileText(0) 'store the second line of the text file to secondLine variable            

        Dim spaceIndex As Integer = firstLine.LastIndexOf(": ")
        Dim asOfdate As String = firstLine.Substring(spaceIndex + 1, 11)
        fs.Close()
        Dts.Variables("ps_asOfDate").Value = asOfdate
        Dts.Variables("ps_successErrorflag").Value = "s"

        'Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\Processed"
        'MsgBox(asOfdate)
    End Sub

End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_fe84383aa28a473b85aac98af30ea36a.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_fe84383aa28a473b85aac98af30ea36a.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("4763f81c-ee15-4328-b97b-63d2aec80811")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{3A4EADA8-788F-4752-93DF-B5F5F174D457}</msb:ProjectId>
		<msb:DisplayName>scripttask_fe84383aa28a473b85aac98af30ea36a</msb:DisplayName>
		<msb:CodeName>scripttask_fe84383aa28a473b85aac98af30ea36a</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_fe84383aa28a473b85aac98af30ea36a.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_fe84383aa28a473b85aac98af30ea36a.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMU961IAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAbjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABg7AABTAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
OwAAAAAAAEgAAAACAAUAJCQAAPQWAAABAAAAAAAAAGojAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAEAK4AAAAPAAARAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAApvFQAAChMEEQQZcykAAAoN
CXMqAAAKEwdybQAAcAwWEwgRB28rAAAKcm8AAHAVFigsAAAKCwcWmgwIcnMAAHBvLQAAChMGCBEG
F9YfC28uAAAKCglvLwAACgJvJQAACm8mAAAKcnkAAHBvJwAACgZvMAAACgJvJQAACm8mAAAKcpEA
AHBvJwAACnK5AABwbzAAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAA/AcAACN+AABoCAAA7AkAACNTdHJpbmdzAAAAAFQSAADAAAAAI1VTABQTAAAQ
AAAAI0dVSUQAAAAkEwAA0AMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAADEA
AAAKAAAADAAAABkAAAAEAAAAPQAAAAIAAAA2AAAADwAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAA
AAEAAAADAAAAAwAAAAIAAAAAALMJAQAAAAAACgB4AU4BCgCsAY4BBgC8AbUBCgAUAk4BBgCSArUB
CgAUA+oCBgBKAzkDBgB3A2IDDgDeA8kDEgBdBDQEBgB+BLUBDgCxBJsEDgDKBJsEDgD3BN8EBgAh
BQ4FCgBgBTkFCgB4BRMADgCtBZAFBgDiBcIFBgAABrUBBgAkBrUBCgA9BhMABgCBBmIGBgCnBpUG
BgDOBr0GBgDhBg4FBgAIB/4GBgATB/4GEgAgBzQEFgB5B1kHFgCRB1kHBgCjB/4GBgCsB/4GCgC9
BxMACgDFBxMABgDZB7UBBgD8B7UBEgASCDQEBgB7CMIFBgCbCMIFBgDTCLkIBgDsCJUGBgAJCWIG
BgAXCZUGBgAyCZUGBgBNCZUGBgBmCZUGBgB/CZUGBgCcCZUGAAAAAAEAAAAAAAEAAQAAAAAAKQA3
AAUAAQABAAAAAABtADcACQABAAIAAAEQAHgANwANAAEAAwAFAQAAggAAAA0ABQAIAAUBAACQAAAA
DQAFAA8AAAAAAKsAtwANAAYAEQAAARAA9wACASUACAAVAAEAAAA1AQIBKQAKABgAAgEAAEABAAAt
AAoAGgAxANcBIAAxAAACLQAxACICOgAxAEcCRwAhACMDkAARAFoDnQARAIMDoQARAPYDvwARAP4D
wwAGBoME2QBWgIsE3ABWgJME3ABQIAAAAAAGGIgBEwABAFggAAAAAAYYiAETAAEAYCAAAAAAERjD
ARcAAQCMIAAAAAATCMoBGwABAKQgAAAAABMI8AEoAAEAvCAAAAAAEwgZAjUAAQDUIAAAAAATCDcC
QgABAOwgAAAAAEYCfQJjAAEACCEAAAAARgKGAmgAAgAcIQAAAACDAJcCbAACADQhAAAAAEYCnwJx
AAIASCEAAAAAEQCoAngAAgBkIQAAAAABAMYCgAADAIAhAAAAAAYYiAETAAQAiCEAAAAAAwjaAosA
BAC8IQAAAAAGGIgBEwAEANAhAAAAAAMYiAETAAQA2CEAAAAAFgiPA6UABAAUIgAAAAAWCKMDqgAE
ACgiAAAAABYIrwOvAAQAMCIAAAAAERjDARcABQBEIgAAAAAGGIgBEwAFAEwiAAAAABYICwTGAAUA
qCIAAAAABhiIARMABQCwIgAAAAAGAHkEEwAFAAAAAQCEAgAAAQC9AgAAAQC9AgAAAQC7AwkAiAET
AGEAiAHqAHEAiAH5ABEAiAETAHkAiAETACQAiAETACwAiAETADQAiAETADwAiAETACQA2gKLACwA
2gKLADQA2gKLADwA2gKLAIEAiAETAIkAiAETAJEAiAFIAZkA8QWTARkAfQJjABkAhgJoACkAEgag
ARkAnwJxAKkALgawARkAiAETALEAiAHAAUQAIwOQAEwACwSLAEwAWAY9AkwAiAETALkAiAFMAikA
sAZXAjkAiAFcAkkAiAETAMkA1gZ4AskA3AZ4AtEAiAETAFEAiAETAFEAMgeCAukAgweHAvEAmgeM
AvkACwSSAtkAiAGWAuEAiAGeAuEAswdxABEB0welAiEB4AewAiEB7Ae1AgkB9gcTAPkAWAa7AikB
iAFMAjEBiAETADkBiAHPAkEBiAETAEkBiAFIAVEBiAFIAVkBiAFIAWEBiAFIAWkBiAFIAXEBiAFI
AXkBiAFIAYEBiAFIAYkBiAFIAQgALADgAAgAMADlACkAgwBNAS4A2wFRAi4A0wGYAy4AqwH8Ai4A
ywGBAy4A4wFRAi4A6wGYAy4AmwHUAi4AowHdAi4AswFEAy4AuwFRAy4A6wBRAi4AiwF7Ay4AwwFR
AkAAKwDlAEAAEwDwAEMAEwDwAEMAGwD/AEkAgwB/AWMAGwD/AGMAEwDwAGkAgwBeAYAAKwDlAIMA
cwDlAIMAGwD/AIMAewDlAIkAgwBrAaAAKwDlAKMAwwDIAaMAEwDwAMAAKwDlAMMAEwDwAMMA6wBR
AskAEwBvAuAAKwDlAOkAEwBvAgABKwDlAAABEwDwAAkBGwHlACABKwDlACABEwDwACMBiwFRAiMB
kwHlAEABKwDlAEABEwDwAGABEwDwAGABKwDlAIABKwDlAKABKwDlAMABEwDwAMABKwDlAOABKwDl
AAACEwDwAAACKwDlADQBOQE+AUMBmAGcAacBrAG7AbsBQwJjAmoCfQLAAgQAAQAGAAUABwAGAAgA
CAAAAKwBTwAAAGUCVAAAABQCWQAAAHECXgAAAC0DmAAAAEoDtQAAAMEDugAAALsDywACAAQAAwAC
AAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQADwACABcAEQB1AHUAiAAYAR8B
JgEtASoCMQIEgAAAAQAAAAAAAAAAAAAAAAACAQAABAAAAAAAAAAAAAAAAQAKAAAAAAAKAAAAAAAA
AAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAtQEAAAAACwAAAAAAAAAAAAAA0AAVBAAAAAALAAAA
AAAAAAAAAADQADoHAAAAAAAAAAABAAAANAgAAAUABAAGAAQACgAJAAAAEAAMALsCAAAQABkAuwIA
AAAAGwC7Ai0AtgEtADgCAAAAAAA8TW9kdWxlPgBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMATXlBcHBsaWNhdGlvbgBTY3JpcHRUYXNrX2ZlODQzODNhYTI4YTQ3M2I4NWFhYzk4YWYzMGVh
MzZhLnZicHJvai5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNh
ZmVPYmplY3RQcm92aWRlcmAxAE15UmVzb3VyY2VzAFNjcmlwdFRhc2tfZmU4NDM4M2FhMjhhNDcz
Yjg1YWFjOThhZjMwZWEzNmEudmJwcm9qLk15LlJlc291cmNlcwBNeVNldHRpbmdzAFNjcmlwdFRh
c2tfZmU4NDM4M2FhMjhhNDczYjg1YWFjOThhZjMwZWEzNmEudmJwcm9qAFNjcmlwdE1haW4AU2Ny
aXB0UmVzdWx0cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBBcHBs
aWNhdGlvbkJhc2UALmN0b3IATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAQ29tcHV0ZXIA
U3lzdGVtAE9iamVjdAAuY2N0b3IAZ2V0X0NvbXB1dGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRl
cgBnZXRfQXBwbGljYXRpb24AbV9BcHBPYmplY3RQcm92aWRlcgBVc2VyAGdldF9Vc2VyAG1fVXNl
ck9iamVjdFByb3ZpZGVyAGdldF9XZWJTZXJ2aWNlcwBtX015V2ViU2VydmljZXNPYmplY3RQcm92
aWRlcgBBcHBsaWNhdGlvbgBXZWJTZXJ2aWNlcwBFcXVhbHMAbwBHZXRIYXNoQ29kZQBUeXBlAEdl
dFR5cGUAVG9TdHJpbmcAQ3JlYXRlX19JbnN0YW5jZV9fAFQAaW5zdGFuY2UARGlzcG9zZV9fSW5z
dGFuY2VfXwBnZXRfR2V0SW5zdGFuY2UATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMu
SW50ZXJuYWwAQ29udGV4dFZhbHVlYDEAbV9Db250ZXh0AEdldEluc3RhbmNlAFN5c3RlbS5SZXNv
dXJjZXMAUmVzb3VyY2VNYW5hZ2VyAF9yZXNNZ3IAU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVy
ZUluZm8AX3Jlc0N1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQBWYWx1ZQBDdWx0dXJlAFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAG1fVmFsdWUAbV9TeW5jT2JqZWN0AGdldF9WYWx1ZQBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UATWFpbgBFbnVtAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJl
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0
ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUATWljcm9zb2Z0LlZp
c3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1v
ZHVsZU5hbWVBdHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBIZWxwS2V5d29y
ZEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFJ1bnRpbWVIZWxwZXJz
AEdldE9iamVjdFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFjdGl2
YXRvcgBDcmVhdGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBzZXRfVmFsdWUA
U3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2libGVBdHRyaWJ1dGUAU3lzdGVt
LlJlZmxlY3Rpb24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5UaHJlYWRpbmcATW9uaXRv
cgBFbnRlcgBFeGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAU3lzdGVtLklPAEZpbGVT
dHJlYW0AU3RyZWFtUmVhZGVyAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFi
bGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0ARmlsZU1vZGUAU3RyZWFtAFJlYWRU
b0VuZABTdHJpbmdzAENvbXBhcmVNZXRob2QAU3BsaXQAU3RyaW5nAExhc3RJbmRleE9mAFN1YnN0
cmluZwBDbG9zZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAFNjcmlwdFRhc2tfZmU4NDM4M2FhMjhhNDczYjg1YWFjOThhZjMwZWEzNmEudmJw
cm9qLlJlc291cmNlcy5yZXNvdXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU2NyaXB0
VGFza19mZTg0MzgzYWEyOGE0NzNiODVhYWM5OGFmMzBlYTM2YS52YnByb2ouZGxsAAAAADFNAHkA
LgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAOXAAcwBfAGYAaQBs
AGUATgBhAG0AZQBJAG4AUAByAG8AYwBlAHMAcwBXAGkAdABoAFAAYQB0AGgAAAEAAw0AAAU6ACAA
ABdwAHMAXwBhAHMATwBmAEQAYQB0AGUAACdwAHMAXwBzAHUAYwBjAGUAcwBzAEUAcgByAG8AcgBm
AGwAYQBnAAADcwAAAAAA+GHz+8rSEUKbv+AKxOO6FAAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAA
AQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAAS
DAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAE
IAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIG
HAQAABIgBAgAEiAIiYRdzYCAzJECBggDBhEoBAAAAAAEAQAAAAUgAQERNQgBAAEAAAAAAAUgAgEO
DhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAESCAYVEhgBEhEGFRIYARIUBAcB
EgwEBwESCAQHARIRBAcBEhQEIAEBDhABAAtNeS5Db21wdXRlcgAADAEAB015LlVzZXIAABMBAA5N
eS5XZWJTZXJ2aWNlcwAAEwEADk15LkFwcGxpY2F0aW9uAAAEAAEcHAMHAQIDBwEIBgABEhURUQQH
ARIVAwcBDgUQAQAeAAQKAR4ABAcBHgAHIAQBDg4ODmEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlBy
b3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3Nl
X19JbnN0YW5jZV9fAAAABhUSGAETAAYVEhkBEwAECgETAAUgAQETAAgHAxMAEwATAAQgAQECBQEA
AAAABCAAEmEGIAIBDhJhBgcCEh0SHQQHARIhCAEAAgAAAAAABAABARwEBwESIAQgABJ1BCAAEnkF
IAESfRwDIAAcByACAQ4RgIEGIAEBEoCFCgAEHQ4ODggRgI0EIAEIDgUgAg4ICAQgAQEcDgcJDh0O
DhJtDggIEnECBCABAQgIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACQ0NzYzZjgxYy1lZTE1LTQzMjgtYjk3Yi02M2Qy
YWVjODA4MTEAAAUBAAEAABYBABFDb3B5cmlnaHQgQCAgMjAxMwAANwEAMlNjcmlwdFRhc2tfZmU4
NDM4M2FhMjhhNDczYjg1YWFjOThhZjMwZWEzNmEudmJwcm9qAABAOwAAAAAAAAAAAABeOwAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAUDsAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAAAEAAAAAAAAAAAAAAAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARgAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA8AwAAAQAwADAAMAAwADAA
NABiADAAAACQADMAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBjAHIAaQBw
AHQAVABhAHMAawBfAGYAZQA4ADQAMwA4ADMAYQBhADIAOABhADQANwAzAGIAOAA1AGEAYQBjADkA
OABhAGYAMwAwAGUAYQAzADYAYQAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAACQADcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwBmAGUAOAA0ADMAOAAzAGEAYQAyADgAYQA0ADcAMwBi
ADgANQBhAGEAYwA5ADgAYQBmADMAMABlAGEAMwA2AGEALgB2AGIAcAByAG8AagAuAGQAbABsAAAA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADMAAACYADcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBjAHIAaQBwAHQAVABhAHMAawBfAGYAZQA4ADQAMwA4ADMAYQBhADIAOABhADQANwAzAGIAOAA1
AGEAYQBjADkAOABhAGYAMwAwAGUAYQAzADYAYQAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAIgA
MwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIAaQBwAHQAVABhAHMAawBfAGYAZQA4
ADQAMwA4ADMAYQBhADIAOABhADQANwAzAGIAOAA1AGEAYQBjADkAOABhAGYAMwAwAGUAYQAzADYA
YQAuAHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABwOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table"
                  DTS:CreationName="SSIS.Pipeline.3"
                  DTS:DelayValidation="True"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{630C847D-78D2-433E-B1B1-CF4622FC1A42}"
                  DTS:ExecutableType="SSIS.Pipeline.3"
                  DTS:LocaleID="-1"
                  DTS:MaxErrorCount="0"
                  DTS:ObjectName="Insert the data into staging table"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v9; (C) 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <pipeline
                      BLOBTempStoragePath=""
                      bufferTempStoragePath=""
                      engineThreads="5"
                      version="1">
                      <components>
                        <component
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source"
                          componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
                          contactInfo="Flat File Source;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="Flat File Source"
                          localeId="1033"
                          name="Flat File Source"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Specifies whether zero-length columns are treated as null."
                              name="RetainNulls">true</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                              name="FileNameColumnName"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Connections[FlatFileConnection]"
                              connectionManagerID="Package.ConnectionManagers[FlatFile_Parse_2]"
                              connectionManagerRefId="Package.ConnectionManagers[FlatFile_Parse_2]"
                              name="FlatFileConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output]"
                              name="Flat File Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                                  name="Column 0"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 1]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]"
                                  name="Column 1"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 2]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]"
                                  name="Column 2"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 3]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]"
                                  name="Column 3"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 4]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]"
                                  name="Column 4"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 5]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 5]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 5]"
                                  name="Column 5"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 6]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 6]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 6]"
                                  name="Column 6"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 7]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 7]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 7]"
                                  name="Column 7"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 8]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 8]"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 8]"
                                  name="Column 8"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 0" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 1]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 1" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 2" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 3]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 3" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 4]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 4" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 5]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 5" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 6]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 6" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 7]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 7" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 8]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="Column 8" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output]"
                              isErrorOut="true"
                              name="Flat File Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                                  codePage="1252"
                                  dataType="text"
                                  description="Flat File Source Error Output Column"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                                  name="Flat File Source Error Output Column" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination"
                          componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                          contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="OLE DB Destination"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[stage_source_price_curve_nymex]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">0</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">0</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[OLE_CONN_MainDB]"
                              connectionManagerRefId="Package.ConnectionManagers[OLE_CONN_MainDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 0]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 0"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MaturityDate]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 1]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 1"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Open]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 2]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 2"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[High]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 3]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 3"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Low]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 4]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 4"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 5]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 5"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Change]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 5]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 6]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 6"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Settle]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 6]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 7]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 7"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Volume]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 7]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Column 8]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Column 8"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OpenInterest]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Column 8]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[asOfDate]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="asOfDate" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MaturityDate]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="MaturityDate" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Open]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Open" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[High]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="High" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Low]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Low" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Last" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Change]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Change" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Settle]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Settle" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Volume]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Volume" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OpenInterest]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="OpenInterest" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table.Paths[Flat File Source Output]"
                          endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          name="Flat File Source Output"
                          startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Set the Destination Path"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{D123A8B6-38FF-444D-8AAB-EDCE2E054324}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Set the Destination Path"
                  DTS:ThreadHint="4">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_bb3da4fbf6c549ca86745399ed1c592c"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_module,ps_workspace"
                      ReadWriteVariables="ps_successErrorflag,ps_destination,ps_parseCompleted,ps_isFormatError">
                      <ProjectItem
                        Name="scripttask_bb3da4fbf6c549ca86745399ed1c592c.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_bb3da4fbf6c549ca86745399ed1c592c.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_bb3da4fbf6c549ca86745399ed1c592c.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{FE5B6871-901C-4AA7-8F93-F5D691238091}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

    Public Sub Main()
        'MsgBox(Dts.Variables.Item("ps_successErrorflag").Value)
        'MsgBox(Dts.Variables.Item("ps_successErrorflag").Value.ToString)
        If Dts.Variables.Item("ps_successErrorflag").Value.ToString = "s" Then
            Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Processed"
        Else
            Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Error"
            Dts.Variables("ps_isFormatError").Value = "y"
        End If
        Dts.Variables.Item("ps_parseCompleted").Value = "y"

        'MsgBox(Dts.Variables.Item("ps_destination").Value)
        'MsgBox("1")
        'MsgBox(Dts.Variables("ps_fileNameInProcess").Value)
    End Sub

End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_bb3da4fbf6c549ca86745399ed1c592c.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_bb3da4fbf6c549ca86745399ed1c592c.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("f3fa9098-eb6f-4133-bdd2-0c100c45d9bd")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{36686F84-ED70-46A4-A947-248D10E2D3D1}</msb:ProjectId>
		<msb:DisplayName>scripttask_bb3da4fbf6c549ca86745399ed1c592c</msb:DisplayName>
		<msb:CodeName>scripttask_bb3da4fbf6c549ca86745399ed1c592c</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_bb3da4fbf6c549ca86745399ed1c592c.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_bb3da4fbf6c549ca86745399ed1c592c.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANc961IAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAnjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFA7AABLAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
OwAAAAAAAEgAAAACAAUAtCQAAJwWAAABAAAAAAAAAPsjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAFAD8BAAAAAAAAAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAApvFQAACnJbAABwFigpAAAK
FjNsAm8lAAAKbyYAAApyXwAAcG8nAAAKAm8lAAAKbyYAAApyfQAAcG8nAAAKbygAAApvFQAACnKX
AABwAm8lAAAKbyYAAApymwAAcG8nAAAKbygAAApvFQAACnKvAABwKCoAAApvKwAACjiGAAAAAm8l
AAAKbyYAAApyXwAAcG8nAAAKAm8lAAAKbyYAAApyfQAAcG8nAAAKbygAAApvFQAACnKXAABwAm8l
AAAKbyYAAApymwAAcG8nAAAKbygAAApvFQAACnLFAABwKCoAAApvKwAACgJvJQAACm8mAAAKctMA
AHBvJwAACnL1AABwbysAAAoCbyUAAApvJgAACnL5AABwbycAAApy9QAAcG8rAAAKKrQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAvAcAACN+AAAoCAAAmAkA
ACNTdHJpbmdzAAAAAMARAAAgAQAAI1VTAOASAAAQAAAAI0dVSUQAAADwEgAArAMAACNCbG9iAAAA
AAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAACwAAAAKAAAADAAAABkAAAAEAAAAOAAAAAIAAAA2
AAAADgAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAF4JAQAAAAAA
CgB4AU4BCgCsAY4BBgC8AbUBCgAUAk4BBgCSArUBCgAUA+oCBgBKAzkDBgB3A2IDDgDeA8kDEgBd
BDQEBgB+BLUBDgCxBJsEDgDKBJsEDgD3BN8EBgAhBQ4FCgBgBTkFCgB4BRMADgCtBZAFBgDiBcIF
BgAABrUBBgAkBrUBCgA9BhMABgCBBmIGBgCnBpUGBgDOBr0GBgDhBg4FEgD+BjQEFgBXBzcHFgBv
BzcHCgCBBzkFBgCZB7UBBgCnB7UBEgC9BzQEBgAmCMIFBgBGCMIFBgB+CGQIBgCXCJUGBgC0CGIG
BgDCCJUGBgDdCJUGBgD4CJUGBgARCZUGBgAqCZUGBgBHCZUGAAAAAAEAAAAAAAEAAQAAAAAAKQA3
AAUAAQABAAAAAABtADcACQABAAIAAAEQAHgANwANAAEAAwAFAQAAggAAAA0ABQAIAAUBAACQAAAA
DQAFAA8AAAAAAKsAtwANAAYAEQAAARAA9wACASUACAAVAAEAAAA1AQIBKQAKABgAAgEAAEABAAAt
AAoAGgAxANcBIAAxAAACLQAxACICOgAxAEcCRwAhACMDkAARAFoDnQARAIMDoQARAPYDvwARAP4D
wwAGBoME2QBWgIsE3ABWgJME3ABQIAAAAAAGGIgBEwABAFggAAAAAAYYiAETAAEAYCAAAAAAERjD
ARcAAQCMIAAAAAATCMoBGwABAKQgAAAAABMI8AEoAAEAvCAAAAAAEwgZAjUAAQDUIAAAAAATCDcC
QgABAOwgAAAAAEYCfQJjAAEACCEAAAAARgKGAmgAAgAcIQAAAACDAJcCbAACADQhAAAAAEYCnwJx
AAIASCEAAAAAEQCoAngAAgBkIQAAAAABAMYCgAADAIAhAAAAAAYYiAETAAQAiCEAAAAAAwjaAosA
BAC8IQAAAAAGGIgBEwAEANAhAAAAAAMYiAETAAQA2CEAAAAAFgiPA6UABAAUIgAAAAAWCKMDqgAE
ACgiAAAAABYIrwOvAAQAMCIAAAAAERjDARcABQBEIgAAAAAGGIgBEwAFAEwiAAAAABYICwTGAAUA
qCIAAAAABhiIARMABQCwIgAAAAAGAHkEEwAFAAAAAQCEAgAAAQC9AgAAAQC9AgAAAQC7AwkAiAET
AGEAiAHqAHEAiAH5ABEAiAETAHkAiAETACQAiAETACwAiAETADQAiAETADwAiAETACQA2gKLACwA
2gKLADQA2gKLADwA2gKLAIEAiAETAIkAiAETAJEAiAFIAZkA8QWTARkAfQJjABkAhgJoACkAEgag
ARkAnwJxAKkALgawARkAiAETALEAiAHAAUQAIwOQAEwACwSLAEwAWAY9AkwAiAETALkAiAFMAikA
sAZXAjkAiAFcAkkAiAETAMkA1gZ4AskA3AZ4AtEAiAETAFEAiAETAFEAEAeCAtkAYQeHAuEAeAeM
AukACwSSAvEAiweWAvkAoAedAukAWAalAgEBiAFMAgkBiAETABEBiAGqAhkBiAETACEBiAFIASkB
iAFIATEBiAFIATkBiAFIAUEBiAFIAUkBiAFIAVEBiAFIAVkBiAFIAWEBiAFIAQgALADgAAgAMADl
ACkAgwBhAS4AqwFzAy4AowFcAy4AwwFzAy4AYwFWAy4AcwGvAi4A6wBRAi4AuwFRAi4AmwFRAi4A
swFRAi4AewG4Ai4AgwHXAi4AiwEfAy4AkwEsA0AAKwDlAEAAEwDwAEMAEwDwAEMAGwD/AEkAgwB/
AWMAGwD/AGMAEwDwAGkAgwByAYAAKwDlAIMAGwD/AIMAcwDlAIMAewDlAIkAgwBNAaAAKwDlAKMA
wwDIAaMAEwDwAMAAKwDlAMMAEwDwAMMA6wBRAskAEwBvAuAAKwDlAOkAEwBvAgABKwDlAAABEwDw
AAkBGwHlACABKwDlACABEwDwACMBawHlACMBYwFRAkABKwDlAEABEwDwAGABEwDwAGABKwDlAIAB
KwDlAKABKwDlAMABKwDlAMABEwDwAOABKwDlAAACEwDwAAACKwDlADQBOQE+AUMBmAGcAacBrAG7
AbsBQwJjAmoCfQIEAAEABgAFAAcABgAIAAgAAACsAU8AAABlAlQAAAAUAlkAAABxAl4AAAAtA5gA
AABKA7UAAADBA7oAAAC7A8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAPAAsAAgASAA0AAgAT
AA8AAQAUAA8AAgAXABEAdQB1AIgAGAEfASYBLQEqAjECBIAAAAEAAAAAAAAAAAAAAAAAAgEAAAQA
AAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAEAAAAAAAAAAAAAAABALUBAAAA
AAsAAAAAAAAAAAAAANAAFQQAAAAACwAAAAAAAAAAAAAA0AAYBwAAAAAAAAAAAQAAAN8HAAAFAAQA
BgAEAAoACQAAABAADAC7AgAAEAAZALsCAAAAABsAuwItALYBLQA4AgAAADxNb2R1bGU+AG1zY29y
bGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9uAFNjcmlwdFRhc2tfYmIzZGE0
ZmJmNmM1NDljYTg2NzQ1Mzk5ZWQxYzU5MmMudmJwcm9qLk15AE15Q29tcHV0ZXIATXlQcm9qZWN0
AE15V2ViU2VydmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEATXlSZXNvdXJjZXMAU2Ny
aXB0VGFza19iYjNkYTRmYmY2YzU0OWNhODY3NDUzOTllZDFjNTkyYy52YnByb2ouTXkuUmVzb3Vy
Y2VzAE15U2V0dGluZ3MAU2NyaXB0VGFza19iYjNkYTRmYmY2YzU0OWNhODY3NDUzOTllZDFjNTky
Yy52YnByb2oAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5B
cHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3RvcgBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5jY3RvcgBnZXRfQ29tcHV0ZXIA
bV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlvbgBtX0FwcE9iamVjdFByb3Zp
ZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAZ2V0X1dlYlNlcnZpY2VzAG1f
TXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9uAFdlYlNlcnZpY2VzAEVxdWFs
cwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBDcmVhdGVfX0luc3RhbmNlX18A
VABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJbnN0YW5jZQBNaWNyb3NvZnQu
VmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0VmFsdWVgMQBtX0NvbnRleHQA
R2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAX3Jlc01ncgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5h
Z2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1cmUAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBtX1N5bmNPYmplY3QAZ2V0X1Zh
bHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBNYWluAEVudW0A
dmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0uQ29kZURvbS5Db21waWxl
cgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlckhpZGRl
bkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTdGFuZGFy
ZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3RhbmNlAE15R3JvdXBDb2xsZWN0
aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAQ29t
VmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseQBnZXRfQXNzZW1ibHkA
U3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFy
aWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAE9wZXJhdG9ycwBDb21wYXJlU3RyaW5nAFN0cmluZwBD
b25jYXQAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRUYXNrX2JiM2RhNGZiZjZjNTQ5Y2E4Njc0NTM5OWVkMWM1OTJjLnZicHJvai5S
ZXNvdXJjZXMucmVzb3VyY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBHdWlkQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFNjcmlwdFRhc2tf
YmIzZGE0ZmJmNmM1NDljYTg2NzQ1Mzk5ZWQxYzU5MmMudmJwcm9qLmRsbAAAAAAAMU0AeQAuAFIA
ZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAncABzAF8AcwB1AGMAYwBl
AHMAcwBFAHIAcgBvAHIAZgBsAGEAZwAAA3MAAB1wAHMAXwBkAGUAcwB0AGkAbgBhAHQAaQBvAG4A
ABlwAHMAXwB3AG8AcgBrAHMAcABhAGMAZQAAA1wAABNwAHMAXwBtAG8AZAB1AGwAZQAAFVwAUABy
AG8AYwBlAHMAcwBlAGQAAA1cAEUAcgByAG8AcgAAIXAAcwBfAGkAcwBGAG8AcgBtAGEAdABFAHIA
cgBvAHIAAAN5AAAjcABzAF8AcABhAHIAcwBlAEMAbwBtAHAAbABlAHQAZQBkAAAAAAC0Fq61yTfu
S6tlTpBflPWUAAi3elxWGTTgiQiwP19/EdUKOgMgAAEDAAABBAAAEgwHBhUSGAESDAQAABIIBwYV
EhgBEggEAAASEQcGFRIYARIRBAAAEhQHBhUSGAESFAQIABIMBAgAEggECAASEQQIABIUBCABAhwD
IAAIBCAAEhUDIAAOAh4ABxABAR4AHgAHMAEBARAeAAITAAQgABMABwYVEhkBEwAEKAATAAMGEh0D
BhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIgAgYcBAAAEiAECAASIAiJhF3NgIDMkQIG
CAMGESgEAAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15VGVtcGxhdGUIMTAuMC4w
LjAAAAYVEhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARIIBAcBEhEEBwESFAQgAQEO
EwEADk15LldlYlNlcnZpY2VzAAAQAQALTXkuQ29tcHV0ZXIAAAwBAAdNeS5Vc2VyAAATAQAOTXku
QXBwbGljYXRpb24AAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEOBRABAB4ABAoBHgAEBwEe
AAcgBAEODg4OYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50
UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAGFRIYARMA
BhUSGQETAAQKARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAEIAASYQYgAgEOEmEGBwISHRId
BAcBEiEIAQACAAAAAAAEAAEBHAQHARIgBCAAEm0EIAAScQUgARJ1HAMgABwGAAMIDg4CBwAEDg4O
Dg4EIAEBHAQgAQEICAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAUcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNAwBAAcxLjAuMC4wAAApAQAkZjNmYTkwOTgtZWI2Zi00MTMzLWJkZDItMGMxMDBj
NDVkOWJkAAAFAQABAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAADcBADJTY3JpcHRUYXNrX2JiM2Rh
NGZiZjZjNTQ5Y2E4Njc0NTM5OWVkMWM1OTJjLnZicHJvagAAAHg7AAAAAAAAAAAAAI47AAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACAOwAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAAAEAAAAAAAAAAAAAAAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARgAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA8AwAAAQAwADAAMAAwADAA
NABiADAAAACQADMAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBjAHIAaQBw
AHQAVABhAHMAawBfAGIAYgAzAGQAYQA0AGYAYgBmADYAYwA1ADQAOQBjAGEAOAA2ADcANAA1ADMA
OQA5AGUAZAAxAGMANQA5ADIAYwAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAACQADcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwBiAGIAMwBkAGEANABmAGIAZgA2AGMANQA0ADkAYwBh
ADgANgA3ADQANQAzADkAOQBlAGQAMQBjADUAOQAyAGMALgB2AGIAcAByAG8AagAuAGQAbABsAAAA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADMAAACYADcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBjAHIAaQBwAHQAVABhAHMAawBfAGIAYgAzAGQAYQA0AGYAYgBmADYAYwA1ADQAOQBjAGEAOAA2
ADcANAA1ADMAOQA5AGUAZAAxAGMANQA5ADIAYwAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAIgA
MwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIAaQBwAHQAVABhAHMAawBfAGIAYgAz
AGQAYQA0AGYAYgBmADYAYwA1ADQAOQBjAGEAOAA2ADcANAA1ADMAOQA5AGUAZAAxAGMANQA5ADIA
YwAuAHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACgOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Update As Of Date in the Staging Tables"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{A3F5D387-611D-4580-B634-6D2D93EE41BD}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update As Of Date in the Staging Tables"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="3">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
                      SQLTask:SqlStatementSource="UPDATE    stage_source_price_curve_nymex&#xA;SET              asOfDate = ?&#xA;WHERE     (asOfDate IS NULL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::ps_asOfDate"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{AC431986-6F65-4917-8716-F005FD4B5CBE}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Extract As Of Date from the file and Set the SuccessErrorFlag" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{1F7206D4-62CA-49C6-8B12-A0349FF1442B}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Update As Of Date in the Staging Tables"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Set the Destination Path" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint 2]"
                  DTS:CreationName=""
                  DTS:DTSID="{87D248CC-A0D2-470E-B935-3E8899B94654}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Extract As Of Date from the file and Set the SuccessErrorFlag"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 2"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Update As Of Date in the Staging Tables" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint 3]"
                  DTS:CreationName=""
                  DTS:DTSID="{F9B7A9E3-2471-431D-A36B-6E0CCC5E739D}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table"
                  DTS:ObjectName="Constraint 3"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Set the Destination Path"
                  DTS:Value="1" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{50D59204-F309-422E-80A9-8C396D0A2472}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="1000"
              DTS:ObjectName="Platts Data Format - ParseLogic_1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Extract As Of Date from the file and Set the SuccessErrorFlag"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{74CDC784-57B8-4147-A4AF-86BE414E425F}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="1033"
                  DTS:ObjectName="Extract As Of Date from the file and Set the SuccessErrorFlag"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_bd923755a1db472aaa46eedece4eaf79"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_fileNameInProcessWithPath,ps_workspace"
                      ReadWriteVariables="ps_asOfDate,ps_successErrorflag">
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_bd923755a1db472aaa46eedece4eaf79.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_bd923755a1db472aaa46eedece4eaf79.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("0dafff92-9ff0-44dc-a381-f7e577d45a90")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
    Public Sub Main()
        'Dim get_fileNameInProcessWithPath As String = Dts.Variables.Item("ps_fileNameInProcessWithPath").Value.ToString 'file to be read
        'Dim fs As New FileStream(get_fileNameInProcessWithPath, FileMode.Open)  'Opens your file
        'Dim sr As New StreamReader(fs)  'This variable reads your file
        'Dim FileText() As String 'container for the text in the file
        'Dim i As Int32
        'Dim secondLine As String = ""
        'Dim StartCapture As Boolean = False 'use to signal start of capture

        'FileText = Split(sr.ReadToEnd, vbCr)  'split the stream by Carriage Return     
        'secondLine = FileText(1) 'store the second line of the text file to secondLine variable            

        'Dim spaceIndex As Integer = secondLine.LastIndexOf(" ")
        'Dim asOfdate As String = secondLine.Substring(spaceIndex + 1)
        'fs.Close()
        'Dts.Variables("ps_asOfDate").Value = asOfdate
        Dts.Variables("ps_successErrorflag").Value = "s"
        'MsgBox(Dts.Variables("ps_param_parseType").Value)
        'Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Processed"
    End Sub

End Class]]></ProjectItem>
                      <ProjectItem
                        Name="scripttask_bd923755a1db472aaa46eedece4eaf79.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_bd923755a1db472aaa46eedece4eaf79.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_bd923755a1db472aaa46eedece4eaf79.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{C63D9125-8C9E-4595-AE20-C6501B22E994}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{A0FF62F1-52BC-4EDC-87DA-3EB452347183}</msb:ProjectId>
		<msb:DisplayName>scripttask_bd923755a1db472aaa46eedece4eaf79</msb:DisplayName>
		<msb:CodeName>scripttask_bd923755a1db472aaa46eedece4eaf79</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_bd923755a1db472aaa46eedece4eaf79.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_bd923755a1db472aaa46eedece4eaf79.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKY961IAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAAXjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA5AABLAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
OQAAAAAAAEgAAAACAAUAjCMAAIQVAAABAAAAAAAAANEiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqggJvJQAACm8mAAAKcjMAAHBvJwAACnJbAABwbygAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKAHAAAjfgAADAgAAHAJAAAjU3RyaW5ncwAA
AAB8EQAAYAAAACNVUwDcEQAAEAAAACNHVUlEAAAA7BEAAJgDAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkPAAAA+iUzABYAAAEAAAAqAAAACgAAAAwAAAAZAAAABAAAADUAAAACAAAANgAAAA4AAAAEAAAA
CAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAAA4CQEAAAAAAAoAeAFOAQoArAGO
AQYAvAG1AQoAFAJOAQYAkgK1AQoAFAPqAgYASgM5AwYAdwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4A
sQSbBA4AygSbBA4A9wTfBAYAIQUOBQoAYAU5BQoAeAUTAA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1
AQoAPQYTAAYAgQZiBgYApwaVBgYAzga9BgYA4QYOBRIA/gY0BBYAVwc3BxYAbwc3BwYAgQe1ARIA
lwc0BAYAAAjCBQYAIAjCBQYAWAg+CAYAcQiVBgYAjghiBgYAnAiVBgYAtwiVBgYA0giVBgYA6wiV
BgYABAmVBgYAIQmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkAAQACAAAB
EAB4ADcADQABAAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAGABEAAAEQ
APcAAgElAAgAFQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0AMQAiAjoA
MQBHAkcAIQAjA5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCTBNwAUCAA
AAAABhiIARMAAQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsAAQCkIAAA
AAATCPABKAABALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwABAAghAAAA
AEYChgJoAAIAHCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIAZCEAAAAA
AQDGAoAAAwCAIQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQIQAAAAAD
GIgBEwAEANghAAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAiAAAAABEY
wwEXAAUARCIAAAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIAAAAABgB5
BBMABQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgBEwB5AIgB
EwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCBAIgBEwCJ
AIgBEwCRAIgBSAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgBEwCxAIgB
wAFEACMDkABMAAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJANYGeALJ
ANwGeALRAIgBEwBRAIgBEwBRABAHggLZAGEHhwLhAHgHjALpAFgGkgLxAIgBTAL5AIgBEwABAYgB
lwIJAYgBEwARAYgBSAEZAYgBSAEhAYgBSAEpAYgBSAExAYgBSAE5AYgBSAFBAYgBSAFJAYgBSAFR
AYgBSAEIACwA4AAIADAA5QApAIMAYQEuAJMBYAMuAIsBSQMuAKsBYAMuAEsBQwMuAFsBnAIuAOsA
UQIuAKMBUQIuAIMBUQIuAJsBUQIuAGMBpQIuAGsBxAIuAHMBDAMuAHsBGQNAACsA5QBAABMA8ABD
ABMA8ABDABsA/wBJAIMAfwFjABsA/wBjABMA8ABpAIMAcgGAACsA5QCDABsA/wCDAHMA5QCDAHsA
5QCJAIMATQGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMAbwLgACsA5QDp
ABMAbwIAASsA5QAAARMA8AAJARsB5QAgASsA5QAgARMA8AAjAVMB5QAjAUsBUQJAASsA5QBAARMA
8ABgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA8AAAAisA5QA0
ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CBAABAAYABQAHAAYACAAIAAAArAFPAAAAZQJUAAAA
FAJZAAAAcQJeAAAALQOYAAAASgO1AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIABgAHAAIABwAJ
AAIADwALAAIAEgANAAIAEwAPAAEAFAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIxAgSAAAABAAAA
AAAAAAAAAAAAAAIBAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAABAAA
AAAAAAAAAAAAAQC1AQAAAAALAAAAAAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAAANAAGAcAAAAA
AAAAAAEAAAC5BwAABQAEAAYABAAKAAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsCLQC2AS0AOAIA
AAAAADxNb2R1bGU+AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9u
AFNjcmlwdFRhc2tfYmQ5MjM3NTVhMWRiNDcyYWFhNDZlZWRlY2U0ZWFmNzkudmJwcm9qLk15AE15
Q29tcHV0ZXIATXlQcm9qZWN0AE15V2ViU2VydmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVy
YDEATXlSZXNvdXJjZXMAU2NyaXB0VGFza19iZDkyMzc1NWExZGI0NzJhYWE0NmVlZGVjZTRlYWY3
OS52YnByb2ouTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MAU2NyaXB0VGFza19iZDkyMzc1NWExZGI0
NzJhYWE0NmVlZGVjZTRlYWY3OS52YnByb2oAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5j
Y3RvcgBnZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlv
bgBtX0FwcE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIA
Z2V0X1dlYlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9u
AFdlYlNlcnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBD
cmVhdGVfX0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJ
bnN0YW5jZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0
VmFsdWVgMQBtX0NvbnRleHQAR2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAX3Jlc01ncgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVy
ZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1
cmUAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBt
X1N5bmNPYmplY3QAZ2V0X1ZhbHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBNYWluAEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0
ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGls
ZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0
ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3Rh
bmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAENMU0NvbXBsaWFudEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza19iZDky
Mzc1NWExZGI0NzJhYWE0NmVlZGVjZTRlYWY3OS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrX2JkOTIzNzU1YTFkYjQ3MmFhYTQ2
ZWVkZWNlNGVhZjc5LnZicHJvai5kbGwAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkA
UgBlAHMAbwB1AHIAYwBlAHMAACdwAHMAXwBzAHUAYwBjAGUAcwBzAEUAcgByAG8AcgBmAGwAYQBn
AAADcwAAAFSqKOFNdqdMtmEiemd02roACLd6XFYZNOCJCLA/X38R1Qo6AyAAAQMAAAEEAAASDAcG
FRIYARIMBAAAEggHBhUSGAESCAQAABIRBwYVEhgBEhEEAAASFAcGFRIYARIUBAgAEgwECAASCAQI
ABIRBAgAEhQEIAECHAMgAAgEIAASFQMgAA4CHgAHEAEBHgAeAAcwAQEBEB4AAhMABCAAEwAHBhUS
GQETAAQoABMAAwYSHQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiACBhwEAAASIAQI
ABIgCImEXc2AgMyRAgYIAwYRKAQAAAAABAEAAAAFIAEBETUIAQABAAAAAAAFIAIBDg4YAQAKTXlU
ZW1wbGF0ZQgxMC4wLjAuMAAABhUSGAESDAYVEhgBEggGFRIYARIRBhUSGAESFAQHARIMBAcBEggE
BwESEQQHARIUBCABAQ4TAQAOTXkuV2ViU2VydmljZXMAABABAAtNeS5Db21wdXRlcgAADAEAB015
LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAABAABHBwDBwECAwcBCAYAARIVEVEEBwESFQMHAQ4F
EAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMu
U29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFu
Y2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMTABMAEwAEIAEBAgUBAAAAAAQgABJh
BiACAQ4SYQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcBEiAEIAASbQQgABJxBSABEnUcBCAB
ARwEIAEBCAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQMAQAHMS4wLjAuMAAAKQEAJDBkYWZmZjkyLTlmZjAtNDRkYy1hMzgxLWY3ZTU3N2Q0NWE5
MAAABQEAAQAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAA3AQAyU2NyaXB0VGFza19iZDkyMzc1NWEx
ZGI0NzJhYWE0NmVlZGVjZTRlYWY3OS52YnByb2oAADg5AAAAAAAAAAAAAE45AAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABAOQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAABAAAAAAAAAAAAAAABDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEYAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAPAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAkAAzAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAYwByAGkA
cAB0AFQAYQBzAGsAXwBiAGQAOQAyADMANwA1ADUAYQAxAGQAYgA0ADcAMgBhAGEAYQA0ADYAZQBl
AGQAZQBjAGUANABlAGEAZgA3ADkALgB2AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAkAA3AAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AYgBkADkAMgAzADcANQA1AGEAMQBkAGIANAA3ADIA
YQBhAGEANAA2AGUAZQBkAGUAYwBlADQAZQBhAGYANwA5AC4AdgBiAHAAcgBvAGoALgBkAGwAbAAA
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQAzAAAAmAA3AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAYwByAGkAcAB0AFQAYQBzAGsAXwBiAGQAOQAyADMANwA1ADUAYQAxAGQAYgA0ADcAMgBhAGEA
YQA0ADYAZQBlAGQAZQBjAGUANABlAGEAZgA3ADkALgB2AGIAcAByAG8AagAuAGQAbABsAAAAAACI
ADMAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwBiAGQA
OQAyADMANwA1ADUAYQAxAGQAYgA0ADcAMgBhAGEAYQA0ADYAZQBlAGQAZQBjAGUANABlAGEAZgA3
ADkALgB2AGIAcAByAG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAYDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table"
                  DTS:CreationName="SSIS.Pipeline.3"
                  DTS:DelayValidation="True"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{7A35CD23-0C55-4C1A-ACEE-416E7A41B0D7}"
                  DTS:ExecutableType="SSIS.Pipeline.3"
                  DTS:LocaleID="1033"
                  DTS:MaxErrorCount="1000"
                  DTS:ObjectName="Insert the data into staging table"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v9; (C) 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <pipeline
                      BLOBTempStoragePath=""
                      bufferTempStoragePath=""
                      engineThreads="5"
                      version="1">
                      <components>
                        <component
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source"
                          componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
                          contactInfo="Flat File Source;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="Flat File Source"
                          localeId="1033"
                          name="Flat File Source"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Specifies whether zero-length columns are treated as null."
                              name="RetainNulls">true</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                              name="FileNameColumnName"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Connections[FlatFileConnection]"
                              connectionManagerID="Package.ConnectionManagers[FlatFile_Parse_1]"
                              connectionManagerRefId="Package.ConnectionManagers[FlatFile_Parse_1]"
                              name="FlatFileConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output]"
                              name="Flat File Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Line]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Line]"
                                  length="500"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Line]"
                                  name="Line"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                      name="FastParse">false</property>
                                    <property
                                      dataType="System.Boolean"
                                      description="Indicates whether the data is in binary format."
                                      name="UseBinaryFormat">false</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Line]"
                                  codePage="1252"
                                  dataType="str"
                                  length="500"
                                  name="Line" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output]"
                              isErrorOut="true"
                              name="Flat File Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                                  codePage="1252"
                                  dataType="text"
                                  description="Flat File Source Error Output Column"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                                  name="Flat File Source Error Output Column" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination"
                          componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                          contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="OLE DB Destination"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[stage_source_price_curve_platts]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">true</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">0</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[OLE_CONN_MainDB]"
                              connectionManagerRefId="Package.ConnectionManagers[OLE_CONN_MainDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[index]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="100"
                                  cachedName="index"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[index]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[index]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[details]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="8000"
                                  cachedName="details"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[details]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[details]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Flag]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="50"
                                  cachedName="Flag"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[flag]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[Flag]" />
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[maturityDateTimeStamp]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="100"
                                  cachedName="maturityDateTimeStamp"
                                  externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[update_ts]"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[maturityDateTimeStamp]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[flag]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  name="flag" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[details]"
                                  codePage="1252"
                                  dataType="str"
                                  length="8000"
                                  name="details" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[index]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="index" />
                                <externalMetadataColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[update_ts]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="update_ts" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns"
                          componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                          contactInfo="Executes a custom script.;Microsoft Corporation;Microsoft SqlServer v9; © 2004 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Executes a custom script."
                          name="Transform to equal no of columns"
                          version="8">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Stores the source code of the component"
                              isArray="true"
                              name="SourceCode"
                              state="cdata">
                              <arrayElements
                                arrayElementCount="30">
                                <arrayElement
                                  dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptComponent_77d639e4a062482fa2b32bc11706116f.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptComponent_77d639e4a062482fa2b32bc11706116f.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("5bc97380-0330-4ac4-925f-017d6da2ae50")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[' Microsoft SQL Server Integration Services user script component
' This is your new script component in Microsoft Visual Basic .NET
' ScriptMain is the entrypoint class for script components

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute> _
<CLSCompliant(False)> _
Public Class ScriptMain
    Inherits UserComponent
    Private columnDelimiter() As Char = CType(" ", Char())
    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim rowValues As String()
        rowValues = Row.Line.Split(columnDelimiter)

        If rowValues.GetUpperBound(0) < 3 Then
            Row.Flag_IsNull = True
            Row.details_IsNull = True
            Row.index_IsNull = True
            Row.maturityDateTimeStamp_IsNull = True
            'Row.asOfDateTimeStamp_IsNull = True
        ElseIf rowValues.GetUpperBound(0) < 4 Then
            Row.Flag = rowValues.GetValue(0).ToString
            Row.details = rowValues.GetValue(1).ToString
            Row.maturityDateTimeStamp = rowValues.GetValue(2).ToString
            Row.index = rowValues.GetValue(3).ToString
            'Row.AsOfDateTimeStamp_IsNull = True
        Else
            Row.Flag = rowValues.GetValue(0).ToString
            Row.details = rowValues.GetValue(1).ToString
            Row.maturityDateTimeStamp = rowValues.GetValue(2).ToString
            Row.index = rowValues.GetValue(3).ToString
            'Row.AsOfDateTimeStamp = rowValues.GetValue(4).ToString
        End If
    End Sub

End Class

]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[scriptcomponent_77d639e4a062482fa2b32bc11706116f.vbproj]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptComponent_77d639e4a062482fa2b32bc11706116f.vbproj</RootNamespace>
    <AssemblyName>ScriptComponent_77d639e4a062482fa2b32bc11706116f.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{DE09C85E-F2B3-4533-A556-72ADE0A686DA}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
    <Compile Include="main.vb" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public WriteOnly Property [maturityDateTimeStamp]() As String
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [maturityDateTimeStamp_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [index]() As String
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [index_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [details]() As String
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [details_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Flag]() As String
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Flag_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Project]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{626F3F22-D7E5-4255-9001-1CB29904F5C5}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>scriptcomponent_77d639e4a062482fa2b32bc11706116f</msb:DisplayName>
		<msb:CodeName>scriptcomponent_77d639e4a062482fa2b32bc11706116f</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="ComponentWrapper.vb"/>
		<msb:File Include="BufferWrapper.vb"/>
		<msb:File Include="main.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:Project Include="scriptcomponent_77d639e4a062482fa2b32bc11706116f.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                              </arrayElements>
                            </property>
                            <property
                              dataType="System.String"
                              description="Stores the binary representation of the component"
                              isArray="true"
                              name="BinaryCode"
                              state="cdata">
                              <arrayElements
                                arrayElementCount="2">
                                <arrayElement
                                  dataType="System.String"><![CDATA[ScriptComponent_77d639e4a062482fa2b32bc11706116f.vbproj.dll]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJs861IAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAArkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFhBAABTAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
QQAAAAAAAEgAAAACAAUA8CUAAGgbAAABAAAAAAAAADglAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqACoCAwQFKB4AAAoqABMwAwAUAAAADAAAEQJ7HwAACgJ7IAAAChaUbyEAAAoqEzACAAgA
AAANAAARAhZvIgAACiomAhcDbyMAAAoqAABiAywJAhdvJAAACisLcgEAAHBzJQAACnoqAAAAJgIY
A28jAAAKKgAAYgMsCQIYbyQAAAorC3IBAABwcyUAAAp6KgAAACYCGQNvIwAACioAAGIDLAkCGW8k
AAAKKwtyAQAAcHMlAAAKeioAAAAmAhoDbyMAAAoqAABiAywJAhpvJAAACisLcgEAAHBzJQAACnoq
AAAAEzABAAkAAAAOAAARAigmAAAKCgYqAAAAEzABAAkAAAAPAAARAignAAAKCgYqAAAAfgIoKQAA
CgICcyIAAAZ9BgAABAICcyMAAAZ9BwAABCqSBHKeAABwGm8qAAAKLBUCBQIDbysAAAoOBHMRAAAG
byAAAAYqAAAASisHAgNvIQAABgNvHAAABi3xKgAGKgAAOgIoFwAACgIDfQgAAAQqADoCKBcAAAoC
A30JAAAEKgBeAigeAAAGAnKuAABwKCwAAAp9CgAABCoTMAMA2gAAABAAABEDbxIAAAYCewoAAARv
LQAACgoGFm8uAAAKGS8hAxdvGwAABgMXbxkAAAYDF28XAAAGAxdvFQAABjicAAAABhZvLgAAChov
SgMGFm8vAAAKbxUAAApvGgAABgMGF28vAAAKbxUAAApvGAAABgMGGG8vAAAKbxUAAApvFAAABgMG
GW8vAAAKbxUAAApvFgAABitIAwYWby8AAApvFQAACm8aAAAGAwYXby8AAApvFQAACm8YAAAGAwYY
by8AAApvFQAACm8UAAAGAwYZby8AAApvFQAACm8WAAAGKgAAHgIoFwAACioTMAIALQAAABEAABF+
CwAABC0gcrIAAHDQDAAAAigUAAAKbzEAAApzMgAACgsHgAsAAAR+CwAABCoAAAATMAEABgAAABIA
ABF+DAAABCoAAB4CgAwAAAQqQnMXAAAKKBEAAAqADgAABCoAAAAeAigzAAAKKhswAQA/AAAAEwAA
EX4NAAAELTJ+DgAABCgRAAAKKDQAAAp+DQAABC0ccysAAAaADQAABN4Qfg4AAAQoEQAACig1AAAK
3H4NAAAEKgABEAAAAgAdAAwpABAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAEwKAAAjfgAAuAoAAMALAAAjU3RyaW5ncwAAAAB4FgAA5AAAACNVUwBc
FwAAEAAAACNHVUlEAAAAbBcAAPwDAAAjQmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+iUzABYAAAEA
AAAuAAAADQAAAA4AAAAsAAAAGAAAAEEAAAA8AAAAEwAAAAUAAAASAAAAEwAAAAkAAAABAAAABQAA
AAEAAAACAAAAAwAAAAIAAAAAAIILAQAAAAAACgCqAYABCgDeAcABBgDuAecBCgBGAoABBgDEAucB
CgBGAxwDDgCpA4gDEgDXA4gDDgDmA4gDDgBZBYgDBgDyBeEFBgAfBgoGFgCABmsGFgDNBrcGFgDm
BrcGFgATB/sGBgA9ByoHCgB8B1UHCgCUBxMAFgDJB6wHBgD+B94HBgAcCOcBBgBACOcBCgBZCBMA
BgCdCH4IBgDTCOcBBgDtCOcBBgADCecBBgAKCecBCgAsCVUHBgBRCecBDgBuCYgDBgCnCZUJBgDO
Cb0JBgDhCSoHBgBKCt4HBgBqCt4HBgCiCogKBgC7CpUJBgDYCn4IBgDmCpUJBgABC5UJBgAcC5UJ
BgA1C5UJBgBOC5UJBgBrC5UJAAAAAAEAAAAAAAEAAQAAAAAAKQA3AAUAAQABAAAAAAByADcACQAB
AAIAAAEQAH0ANwANAAEAAwAFAQAAhwAAAA0ABQAIAAUBAACVAAAADQAFAA8AAQAAALAAvQAdAAYA
EQABAAAA9QC9ACkABgAeAAEAAAADAb0ADQAIACIAAQAAAA8BvQANAAkAIwABAAAAGQG9ACAACgAk
AAAAAAAkATABDQALACYAAAEQAHUBvQA1AA0AKgAxAAkCIAAxADICLQAxAFQCOgAxAHkCRwAhAFUD
kAAGAAMBxgAGAA8BygABALcF3gABALcF3gABANEF6AARAAIG7AARACsG8AARAJgGDgERAKAGEgFQ
IAAAAAAGGLoBEwABAFggAAAAAAYYugETAAEAYCAAAAAAERj1ARcAAQCMIAAAAAATCPwBGwABAKQg
AAAAABMIIgIoAAEAvCAAAAAAEwhLAjUAAQDUIAAAAAATCGkCQgABAOwgAAAAAEYCrwJjAAEACCEA
AAAARgK4AmgAAgAcIQAAAACDAMkCbAACADQhAAAAAEYC0QJxAAIASCEAAAAAEQDaAngAAgBkIQAA
AAABAPgCgAADAIAhAAAAAAYYugETAAQAiCEAAAAAAwgMA4sABAC8IQAAAAAGGLoBEwAEANAhAAAA
AAYYugGmAAQA3CEAAAAABggZBHEABwD8IQAAAAAGCCIEsAAHABAiAAAAAAYIMgS0AAcAHCIAAAAA
BghSBLkACAA4IgAAAAAGCHMEtAAJAEQiAAAAAAYIfQS5AAoAYCIAAAAABgiOBLQACwBsIgAAAAAG
CJoEuQAMAIgiAAAAAAYIrQS0AA0AlCIAAAAABgi2BLkADgCwIgAAAACGAMYEsAAPAMgiAAAAAIYA
zgSwAA8A4CIAAAAABhi6ARMADwAAIwAAAABGAmkFzgAPACgjAAAAAEYDiAXYABMAPCMAAAAARgOc
BdgAFABAIwAAAAAGGLoB4gAVAFAjAAAAAAYYugHiABYAYCMAAAAABhi6ARMAFwB4IwAAAABGApwF
2AAXAGAkAAAAAAMYugETABgAaCQAAAAAFgg3BvQAGACkJAAAAAAWCEsG+QAYALgkAAAAABYIVwb+
ABgAwCQAAAAAERj1ARcAGQDUJAAAAAAGGLoBEwAZANwkAAAAABYIrQYVARkAAAABALYCAAABAO8C
AAABAO8CAAABAPQDAAACAPsDAAADAA8EAAABAEwEAAABAEwEAAABAEwEAAABAEwEAAABAEwEAAAB
AEwEAAABAEwEAAABAEwEAAABAHYFAAACAH4FAAADAPQDAAAEAA8EAAABAPQDAAABALMFAAABAMcF
AAABAMcFAAABALMFAAABAEwECQC6ARMAcQC6AR8BgQC6AS4BEQC6ARMAiQC6ARMAJAC6ARMALAC6
ARMANAC6ARMAPAC6ARMAJAAMA4sALAAMA4sANAAMA4sAPAAMA4sAkQC6ARMAmQC6ARMAoQC6AbQA
qQANCMgBGQCvAmMAGQC4AmgAKQAuCNUBGQDRAnEAuQBKCOUBGQC6ARMAwQC6AfUBRABVA5AATACt
BosATAB0CHICTAC6ARMAyQC6AbkAOQC6AaYAOQD0A4cCOQD7A4sCQQCxCI8COQC7CJQCOQDCCJkC
OQDLCJ8C0QC6AbQAOQDGBLAAOQDOBLAA2QC6AbkAUQC6ARMA4QCvAqQCUQAbCasC8QA4CbEC4QBL
CbcC+QBXCb4C+QBlCcMCAQG6ARMAKQCwCc0CWQC6AdMCaQC6ARMAEQHWCfACEQHcCfACGQG6ARMA
IQG6AZ8CKQG6ARMAMQG6AbQAOQG6AbQAQQG6AbQASQG6AbQAUQG6AbQAWQG6AbQAYQG6AbQAaQG6
AbQAcQG6AbQAKQCDAKoBLgD7AYECLgDzAb4DLgDLASIDLgDrAacDLgADAoECLgALAr4DLgC7AfoC
LgDDAQMDLgDTAWoDLgDbAXcDLgDrAIECLgBDAaEDLgDjAYECQAArAE0BQAATACUBQwATACUBQwAb
ADQBSQCDAIIBYwAbADQBYwATACUBaQCDALsBgAArAE0BgwB7AE0BgwBzAE0BgwAbADQBiQCDAJYB
oAArAE0BowATACUBowDDAP0BwAArAE0BwwDrAIECwwATACUB4AArAE0B4wBDAYECAAErAE0BAAET
ACUBAwFDAYECIAErAE0BIAETACUBIwFDAYECQAETACUBQAErAE0BQwFDAYECYAErAE0BYAETACUB
YwGDAU0BYwFDAYECgAErAE0BoAErAE0BwAETACUBwAErAE0B4AErAE0BAAITACUBAAIrAE0BCQIT
AOcCKQITAOcCSQKzAU0BQARDAYECYARDAYECbgFzAXgBfQHNAdEB3AHhAfAB8AF4AuEBzQHNAc0B
yALbAuIC9QIEAAEABgAFAAcABgAMABAADQASAAAA3gFPAAAAlwJUAAAARgJZAAAAowJeAAAAXwOY
AAAA2gS+AAAA3wTCAAAA6wS+AAAAAQXCAAAAHgW+AAAAJAXCAAAAMQW+AAAAOQXCAAAASAW+AAAA
TQXCAAAA8gUEAQAAYwYJAQAATAQaAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIADwALAAIAEgAN
AAIAEwAPAAEAFAARAAEAFQATAAEAFgAVAAEAFwAXAAEAGAAZAAEAGQAbAAEAGgAdAAEAGwAfAAIA
JwAhAAIAKAAjAAEAKQAjAAIALAAlAHUAdQCIAFIBWQFgAWcBXwJmAgSAAAABAAAAAAAAAAAAAAAA
AL0AAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAACwAAAAAAAAAAAAAA
nQBrAwAAAAALAAAAAAAAAAAAAACdALYDAAAAAAQAAAAAAAAAAAAAAAEA5wEAAAAAAAAAAAEAAAD+
CQAABQAEAAYABAAAABAADADtAgAAEAAZAO0CAAAAABsA7QItAOsBLQBtAgAAADxNb2R1bGU+AG1z
Y29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9uAFNjcmlwdENvbXBvbmVu
dF83N2Q2MzllNGEwNjI0ODJmYTJiMzJiYzExNzA2MTE2Zi52YnByb2ouTXkATXlDb21wdXRlcgBN
eVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBJbnB1dDBC
dWZmZXIAU2NyaXB0Q29tcG9uZW50Xzc3ZDYzOWU0YTA2MjQ4MmZhMmIzMmJjMTE3MDYxMTZmLnZi
cHJvagBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAE15UmVz
b3VyY2VzAFNjcmlwdENvbXBvbmVudF83N2Q2MzllNGEwNjI0ODJmYTJiMzJiYzExNzA2MTE2Zi52
YnByb2ouTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxp
Y2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0Nv
bXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIA
VXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdl
YlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8A
R2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGlu
c3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJ
bnN0YW5jZQBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVz
AE91dHB1dE1hcABnZXRfTGluZQBnZXRfTGluZV9Jc051bGwAc2V0X21hdHVyaXR5RGF0ZVRpbWVT
dGFtcABWYWx1ZQBzZXRfbWF0dXJpdHlEYXRlVGltZVN0YW1wX0lzTnVsbABzZXRfaW5kZXgAc2V0
X2luZGV4X0lzTnVsbABzZXRfZGV0YWlscwBzZXRfZGV0YWlsc19Jc051bGwAc2V0X0ZsYWcAc2V0
X0ZsYWdfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQATGluZQBMaW5lX0lzTnVsbABtYXR1cml0
eURhdGVUaW1lU3RhbXAAbWF0dXJpdHlEYXRlVGltZVN0YW1wX0lzTnVsbABpbmRleABpbmRleF9J
c051bGwAZGV0YWlscwBkZXRhaWxzX0lzTnVsbABGbGFnAEZsYWdfSXNOdWxsAFNjcmlwdENvbXBv
bmVudABQcm9jZXNzSW5wdXQASW5wdXRJRABJbnB1dE5hbWUASW5wdXQwX1Byb2Nlc3NJbnB1dABJ
bnB1dDBfUHJvY2Vzc0lucHV0Um93AFJvdwBQYXJlbnRDb21wb25lbnQAQ29tcG9uZW50AGNvbHVt
bkRlbGltaXRlcgBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxl
TmFtZUF0dHJpYnV0ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0
T2JqZWN0VmFsdWUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9y
AENyZWF0ZUluc3RhbmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0
ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBHZXRTdHJpbmcA
SXNOdWxsAHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBDTFNDb21w
bGlhbnRBdHRyaWJ1dGUAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24AR2V0Q29sdW1uSW5kZXhlcwBD
b252ZXJzaW9ucwBUb0NoYXJBcnJheVJhbmtPbmUAU3BsaXQAQXJyYXkAR2V0VXBwZXJCb3VuZABH
ZXRWYWx1ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uUmVm
bGVjdGlvbgBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVu
dGVyAEV4aXQARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBTY3JpcHRDb21wb25lbnRfNzdk
NjM5ZTRhMDYyNDgyZmEyYjMyYmMxMTcwNjExNmYudmJwcm9qLlJlc291cmNlcy5yZXNvdXJjZXMA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBB
c3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU2NyaXB0Q29tcG9uZW50Xzc3ZDYzOWU0YTA2MjQ4
MmZhMmIzMmJjMTE3MDYxMTZmLnZicHJvai5kbGwAAAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAA
ZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAg
AEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4A
IABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAADIAAAMU0AeQAuAFIAZQBzAG8AdQBy
AGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAABTPV9o96RBQrpTjnWrLxrKAAi3elxWGTTg
iQiwP19/EdUKOgMgAAEDAAABBAAAEgwHBhUSGAESDAQAABIIBwYVEhgBEggEAAASEQcGFRIYARIR
BAAAEhQHBhUSGAESFAQIABIMBAgAEggECAASEQQIABIUBCABAhwDIAAIBCAAEhUDIAAOAh4ABxAB
AR4AHgAHMAEBARAeAAITAAQgABMABwYVEhkBEwAEKAATAAiJhF3NgIDMkQkgAwESIR0IEiUDIAAC
BCABAQ4EIAEBAgMoAA4DKAACAwYSJAMGEigJIAQBCA4SIRIlBSABARIcAwYSKQUgAQESKQMGHQMD
BhItAwYSMQQAABItBAAAEjEFAAEBEjEECAASLQQIABIxAwYSNAIGHAQAABI0BAgAEjQFIAEBET0I
AQABAAAAAAAFIAIBDg4YAQAKTXlUZW1wbGF0ZQgxMC4wLjAuMAAABAEAAAAGFRIYARIMBhUSGAES
CAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQTAQAOTXkuQXBwbGljYXRpb24AABMB
AA5NeS5XZWJTZXJ2aWNlcwAAEAEAC015LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAABAABHBwDBwEC
AwcBCAYAARIVEVkEBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldl
Yi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3Rh
bmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMT
ABMAEwAFAQAAAAADBhIhAwYdCAQgAQ4IBCABAggFIAIBCBwEIAEBCAYgAgIOEXUFIAEdCAgFAAEd
Aw4GIAEdDh0DBCABCAgEIAEcCAQHAR0OBSAAEoCFByACAQ4SgIUGBwISLRItBAcBEjEIAQACAAAA
AAAEAAEBHAQHARI0CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAUcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNAwBAAcxLjAuMC4wAAApAQAkNWJjOTczODAtMDMzMC00YWM0LTkyNWYtMDE3ZDZk
YTJhZTUwAAAFAQABAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAADwBADdTY3JpcHRDb21wb25lbnRf
NzdkNjM5ZTRhMDYyNDgyZmEyYjMyYmMxMTcwNjExNmYudmJwcm9qAAAAgEEAAAAAAAAAAAAAnkEA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBBAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ACAEAAAAAAAAAAAAACAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sASAAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABcAwAAAQAwADAAMAAwADAANABi
ADAAAACYADgAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBjAHIAaQBwAHQA
QwBvAG0AcABvAG4AZQBuAHQAXwA3ADcAZAA2ADMAOQBlADQAYQAwADYAMgA0ADgAMgBmAGEAMgBi
ADMAMgBiAGMAMQAxADcAMAA2ADEAMQA2AGYALgB2AGIAcAByAG8AagAAADAACAABAEYAaQBsAGUA
VgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAJgAPAABAEkAbgB0AGUAcgBuAGEAbABO
AGEAbQBlAAAAUwBjAHIAaQBwAHQAQwBvAG0AcABvAG4AZQBuAHQAXwA3ADcAZAA2ADMAOQBlADQA
YQAwADYAMgA0ADgAMgBmAGEAMgBiADMAMgBiAGMAMQAxADcAMAA2ADEAMQA2AGYALgB2AGIAcABy
AG8AagAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAzAAAAoAA8AAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAYwByAGkAcAB0AEMAbwBtAHAAbwBuAGUAbgB0AF8ANwA3AGQANgAzADkA
ZQA0AGEAMAA2ADIANAA4ADIAZgBhADIAYgAzADIAYgBjADEAMQA3ADAANgAxADEANgBmAC4AdgBi
AHAAcgBvAGoALgBkAGwAbAAAAJAAOAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIA
aQBwAHQAQwBvAG0AcABvAG4AZQBuAHQAXwA3ADcAZAA2ADMAOQBlADQAYQAwADYAMgA0ADgAMgBm
AGEAMgBiADMAMgBiAGMAMQAxADcAMAA2ADEAMQA2AGYALgB2AGIAcAByAG8AagAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACwMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                              </arrayElements>
                            </property>
                            <property
                              dataType="System.String"
                              description="Comma separated list of variables to be made available for read access"
                              name="ReadOnlyVariables"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.String"
                              description="Comma separated list of variables to be made available for read and write access"
                              name="ReadWriteVariables"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.String"
                              name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                            <property
                              dataType="System.String"
                              description="List of breakpoints present on the script."
                              isArray="true"
                              name="BreakpointCollection"
                              typeConverter="NOTBROWSABLE">
                              <arrayElements
                                arrayElementCount="0" />
                            </property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                              name="VSTAProjectName"
                              typeConverter="NOTBROWSABLE">ScriptComponent_77d639e4a062482fa2b32bc11706116f</property>
                            <property
                              dataType="System.String"
                              description="Specifies the programming language used by the script."
                              name="ScriptLanguage"
                              typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">VisualBasic</property>
                            <property
                              dataType="System.String"
                              description="Checksum to match component metedata against compiled codes."
                              name="MetadataChecksum"
                              typeConverter="NOTBROWSABLE">14d5d6835140e777e22b08d8c98fd690</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Inputs[Input 0]"
                              hasSideEffects="true"
                              name="Input 0">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Inputs[Input 0].Columns[Line]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="500"
                                  cachedName="Line"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output].Columns[Line]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0]"
                              name="Output 0"
                              synchronousInputId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Inputs[Input 0]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[maturityDateTimeStamp]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[maturityDateTimeStamp]"
                                  name="maturityDateTimeStamp" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[index]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[index]"
                                  name="index" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[details]"
                                  codePage="1252"
                                  dataType="str"
                                  length="8000"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[details]"
                                  name="details" />
                                <outputColumn
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[Flag]"
                                  codePage="1252"
                                  dataType="str"
                                  length="50"
                                  lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0].Columns[Flag]"
                                  name="Flag" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table.Paths[Flat File Source Output]"
                          endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Inputs[Input 0]"
                          name="Flat File Source Output"
                          startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source.Outputs[Flat File Source Output]" />
                        <path
                          refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table.Paths[Output 0]"
                          endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          name="Output 0"
                          startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns.Outputs[Output 0]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Set the Destination Path"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{C01C621E-03D1-45A4-A701-CE86E6793F74}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Set the Destination Path"
                  DTS:ThreadHint="1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_5edf98e006724b19a1571b6d089473a3"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_module,ps_workspace"
                      ReadWriteVariables="ps_successErrorflag,ps_destination,ps_isFormatError">
                      <ProjectItem
                        Name="scripttask_5edf98e006724b19a1571b6d089473a3.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_5edf98e006724b19a1571b6d089473a3.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_5edf98e006724b19a1571b6d089473a3.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{88489DC9-2CB2-427C-96B6-DA315AAF42FD}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

	Public Sub Main()
        If Dts.Variables.Item("ps_successErrorflag").Value.ToString = "s" Then
            Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Processed"
        Else
            Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Error"
            Dts.Variables("ps_isFormatError").Value = "y"
        End If
        'Dts.Variables("ps_parseCompleted").Value = "y"

	End Sub

End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_5edf98e006724b19a1571b6d089473a3.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_5edf98e006724b19a1571b6d089473a3.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("19e52980-d431-45bd-9e5f-5dadd8371380")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{60678CF1-3FE8-4985-BDB1-68C78F232459}</msb:ProjectId>
		<msb:DisplayName>scripttask_5edf98e006724b19a1571b6d089473a3</msb:DisplayName>
		<msb:CodeName>scripttask_5edf98e006724b19a1571b6d089473a3</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_5edf98e006724b19a1571b6d089473a3.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_5edf98e006724b19a1571b6d089473a3.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALU961IAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAXjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAw7AABPAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
OwAAAAAAAEgAAAACAAUAlCQAAHgWAAABAAAAAAAAANwjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAFACABAAAAAAAAAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAApvFQAACnJbAABwFigpAAAK
FjNsAm8lAAAKbyYAAApyXwAAcG8nAAAKAm8lAAAKbyYAAApyfQAAcG8nAAAKbygAAApvFQAACnKX
AABwAm8lAAAKbyYAAApymwAAcG8nAAAKbygAAApvFQAACnKvAABwKCoAAApvKwAACjiGAAAAAm8l
AAAKbyYAAApyXwAAcG8nAAAKAm8lAAAKbyYAAApyfQAAcG8nAAAKbygAAApvFQAACnKXAABwAm8l
AAAKbyYAAApymwAAcG8nAAAKbygAAApvFQAACnLFAABwKCoAAApvKwAACgJvJQAACm8mAAAKctMA
AHBvJwAACnL1AABwbysAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAALwHAAAjfgAAKAgAAJgJAAAjU3RyaW5ncwAAAADAEQAA/AAAACNVUwC8EgAAEAAA
ACNHVUlEAAAAzBIAAKwDAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAAAsAAAA
CgAAAAwAAAAZAAAABAAAADgAAAACAAAANgAAAA4AAAAEAAAACAAAAAkAAAAJAAAAAQAAAAUAAAAB
AAAAAwAAAAMAAAACAAAAAABeCQEAAAAAAAoAeAFOAQoArAGOAQYAvAG1AQoAFAJOAQYAkgK1AQoA
FAPqAgYASgM5AwYAdwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4AsQSbBA4AygSbBA4A9wTfBAYAIQUO
BQoAYAU5BQoAeAUTAA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1AQoAPQYTAAYAgQZiBgYApwaVBgYA
zga9BgYA4QYOBRIA/gY0BBYAVwc3BxYAbwc3BwoAgQc5BQYAmQe1AQYApwe1ARIAvQc0BAYAJgjC
BQYARgjCBQYAfghkCAYAlwiVBgYAtAhiBgYAwgiVBgYA3QiVBgYA+AiVBgYAEQmVBgYAKgmVBgYA
RwmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkAAQACAAABEAB4ADcADQAB
AAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAGABEAAAEQAPcAAgElAAgA
FQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0AMQAiAjoAMQBHAkcAIQAj
A5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCTBNwAUCAAAAAABhiIARMA
AQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsAAQCkIAAAAAATCPABKAAB
ALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwABAAghAAAAAEYChgJoAAIA
HCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIAZCEAAAAAAQDGAoAAAwCA
IQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQIQAAAAADGIgBEwAEANgh
AAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAiAAAAABEYwwEXAAUARCIA
AAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIAAAAABgB5BBMABQAAAAEA
hAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgBEwB5AIgBEwAkAIgBEwAs
AIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCBAIgBEwCJAIgBEwCRAIgB
SAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgBEwCxAIgBwAFEACMDkABM
AAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJANYGeALJANwGeALRAIgB
EwBRAIgBEwBRABAHggLZAGEHhwLhAHgHjALpAAsEkgLxAIsHlgL5AKAHnQLpAFgGpQIBAYgBTAIJ
AYgBEwARAYgBqgIZAYgBEwAhAYgBSAEpAYgBSAExAYgBSAE5AYgBSAFBAYgBSAFJAYgBSAFRAYgB
SAFZAYgBSAFhAYgBSAEIACwA4AAIADAA5QApAIMAYQEuAKsBcwMuAKMBXAMuAMMBcwMuAGMBVgMu
AHMBrwIuAOsAUQIuALsBUQIuAJsBUQIuALMBUQIuAHsBuAIuAIMB1wIuAIsBHwMuAJMBLANAACsA
5QBAABMA8ABDABMA8ABDABsA/wBJAIMAfwFjABsA/wBjABMA8ABpAIMAcgGAACsA5QCDABsA/wCD
AHMA5QCDAHsA5QCJAIMATQGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMA
bwLgACsA5QDpABMAbwIAASsA5QAAARMA8AAJARsB5QAgASsA5QAgARMA8AAjAWsB5QAjAWMBUQJA
ASsA5QBAARMA8ABgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA
8AAAAisA5QA0ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CBAABAAYABQAHAAYACAAIAAAArAFP
AAAAZQJUAAAAFAJZAAAAcQJeAAAALQOYAAAASgO1AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIA
BgAHAAIABwAJAAIADwALAAIAEgANAAIAEwAPAAEAFAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIx
AgSAAAABAAAAAAAAAAAAAAAAAAIBAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoA
EwAAAAAABAAAAAAAAAAAAAAAAQC1AQAAAAALAAAAAAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAA
ANAAGAcAAAAAAAAAAAEAAADfBwAABQAEAAYABAAKAAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsC
LQC2AS0AOAIAAAA8TW9kdWxlPgBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMATXlBcHBs
aWNhdGlvbgBTY3JpcHRUYXNrXzVlZGY5OGUwMDY3MjRiMTlhMTU3MWI2ZDA4OTQ3M2EzLnZicHJv
ai5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQ
cm92aWRlcmAxAE15UmVzb3VyY2VzAFNjcmlwdFRhc2tfNWVkZjk4ZTAwNjcyNGIxOWExNTcxYjZk
MDg5NDczYTMudmJwcm9qLk15LlJlc291cmNlcwBNeVNldHRpbmdzAFNjcmlwdFRhc2tfNWVkZjk4
ZTAwNjcyNGIxOWExNTcxYjZkMDg5NDczYTMudmJwcm9qAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBBcHBsaWNhdGlvbkJh
c2UALmN0b3IATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAQ29tcHV0ZXIAU3lzdGVtAE9i
amVjdAAuY2N0b3IAZ2V0X0NvbXB1dGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBnZXRfQXBw
bGljYXRpb24AbV9BcHBPYmplY3RQcm92aWRlcgBVc2VyAGdldF9Vc2VyAG1fVXNlck9iamVjdFBy
b3ZpZGVyAGdldF9XZWJTZXJ2aWNlcwBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBBcHBs
aWNhdGlvbgBXZWJTZXJ2aWNlcwBFcXVhbHMAbwBHZXRIYXNoQ29kZQBUeXBlAEdldFR5cGUAVG9T
dHJpbmcAQ3JlYXRlX19JbnN0YW5jZV9fAFQAaW5zdGFuY2UARGlzcG9zZV9fSW5zdGFuY2VfXwBn
ZXRfR2V0SW5zdGFuY2UATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwA
Q29udGV4dFZhbHVlYDEAbV9Db250ZXh0AEdldEluc3RhbmNlAFN5c3RlbS5SZXNvdXJjZXMAUmVz
b3VyY2VNYW5hZ2VyAF9yZXNNZ3IAU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AX3Jl
c0N1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBWYWx1
ZQBDdWx0dXJlAFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAG1f
VmFsdWUAbV9TeW5jT2JqZWN0AGdldF9WYWx1ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UATWFpbgBFbnVtAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0u
RGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUATWljcm9zb2Z0LlZpc3VhbEJhc2lj
LkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVB
dHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBIZWxwS2V5d29yZEF0dHJpYnV0
ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVj
dFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFjdGl2YXRvcgBDcmVh
dGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1
bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2libGVBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5UaHJlYWRpbmcATW9uaXRvcgBFbnRlcgBF
eGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0
cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBPcGVyYXRv
cnMAQ29tcGFyZVN0cmluZwBTdHJpbmcAQ29uY2F0AENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza181ZWRmOThlMDA2NzI0YjE5
YTE1NzFiNmQwODk0NzNhMy52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZl
cnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrXzVlZGY5OGUwMDY3MjRiMTlhMTU3MWI2ZDA4OTQ3M2Ez
LnZicHJvai5kbGwAAAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUA
cgBjAGUAcwAAJ3AAcwBfAHMAdQBjAGMAZQBzAHMARQByAHIAbwByAGYAbABhAGcAAANzAAAdcABz
AF8AZABlAHMAdABpAG4AYQB0AGkAbwBuAAAZcABzAF8AdwBvAHIAawBzAHAAYQBjAGUAAANcAAAT
cABzAF8AbQBvAGQAdQBsAGUAABVcAFAAcgBvAGMAZQBzAHMAZQBkAAANXABFAHIAcgBvAHIAACFw
AHMAXwBpAHMARgBvAHIAbQBhAHQARQByAHIAbwByAAADeQAAAAAAe+uSmzVHIE+nhMbvhPNG0wAI
t3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEH
BhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAA
DgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAA
EiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJECBggDBhEoBAAAAAAE
AQAAAAUgAQERNQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIM
BhUSGAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQEIAEBDhMBAA5NeS5XZWJT
ZXJ2aWNlcwAAEAEAC015LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxpY2F0aW9u
AAAEAAEcHAMHAQIDBwEIBgABEhURUQQHARIVAwcBDgUQAQAeAAQKAR4ABAcBHgAHIAQBDg4ODmEB
ADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNy
ZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAABhUSGAETAAYVEhkBEwAECgET
AAUgAQETAAgHAxMAEwATAAQgAQECBQEAAAAABCAAEmEGIAIBDhJhBgcCEh0SHQQHARIhCAEAAgAA
AAAABAABARwEBwESIAQgABJtBCAAEnEFIAESdRwDIAAcBgADCA4OAgcABA4ODg4OBCABARwEIAEB
CAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQM
AQAHMS4wLjAuMAAAKQEAJDE5ZTUyOTgwLWQ0MzEtNDViZC05ZTVmLTVkYWRkODM3MTM4MAAABQEA
AQAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAA3AQAyU2NyaXB0VGFza181ZWRmOThlMDA2NzI0YjE5
YTE1NzFiNmQwODk0NzNhMy52YnByb2oAAAA0OwAAAAAAAAAAAABOOwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAQDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAAAEAAAAAAAAAAAAAAAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARgAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA8AwAAAQAwADAAMAAwADAA
NABiADAAAACQADMAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBjAHIAaQBw
AHQAVABhAHMAawBfADUAZQBkAGYAOQA4AGUAMAAwADYANwAyADQAYgAxADkAYQAxADUANwAxAGIA
NgBkADAAOAA5ADQANwAzAGEAMwAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAACQADcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwA1AGUAZABmADkAOABlADAAMAA2ADcAMgA0AGIAMQA5
AGEAMQA1ADcAMQBiADYAZAAwADgAOQA0ADcAMwBhADMALgB2AGIAcAByAG8AagAuAGQAbABsAAAA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADMAAACYADcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBjAHIAaQBwAHQAVABhAHMAawBfADUAZQBkAGYAOQA4AGUAMAAwADYANwAyADQAYgAxADkAYQAx
ADUANwAxAGIANgBkADAAOAA5ADQANwAzAGEAMwAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAIgA
MwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIAaQBwAHQAVABhAHMAawBfADUAZQBk
AGYAOQA4AGUAMAAwADYANwAyADQAYgAxADkAYQAxADUANwAxAGIANgBkADAAOAA5ADQANwAzAGEA
MwAuAHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABgOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Update As Of Date in the Staging Tables"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Execute SQL Task"
                  DTS:Disabled="True"
                  DTS:DTSID="{00C1BA63-CCA9-4389-B344-EA38FDFC9374}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="1033"
                  DTS:ObjectName="Update As Of Date in the Staging Tables"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="2">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{10208DA0-9A66-4D54-AFD8-0AD5ADEC7879}"
                      SQLTask:SqlStatementSource="UPDATE    stage_source_price_curve_platts&#xA;SET              asOfDate = ?&#xA;WHERE     (asOfDate IS NULL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::ps_asOfDate"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{EDEFACFD-0537-4FFC-BC38-22034A888322}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Extract As Of Date from the file and Set the SuccessErrorFlag" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1.PrecedenceConstraints[Constraint 2]"
                  DTS:CreationName=""
                  DTS:DTSID="{0F38D400-0CAF-4B21-9AD6-90995EF1295F}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table"
                  DTS:ObjectName="Constraint 2"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Set the Destination Path"
                  DTS:Value="1" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1.PrecedenceConstraints[Constraint 4]"
                  DTS:CreationName=""
                  DTS:DTSID="{C51C3D2F-AA23-424E-B525-54B8E6AB3E5E}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Extract As Of Date from the file and Set the SuccessErrorFlag"
                  DTS:ObjectName="Constraint 4"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Set the Destination Path" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{A75AC19B-F411-44BC-931F-1DBC931EB2D5}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="1000"
              DTS:ObjectName="Treasury Scrapping - ParseLogic_3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the Destination Path"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{3D87EEFB-9910-4893-971C-5300F415D0DF}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Set the Destination Path"
                  DTS:ThreadHint="6">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_2f23c3ad87e74784990e6423b10d2e33"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadOnlyVariables="ps_module,ps_workspace"
                      ReadWriteVariables="ps_successErrorflag,ps_destination,ps_isFormatError">
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_2f23c3ad87e74784990e6423b10d2e33.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_2f23c3ad87e74784990e6423b10d2e33.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("daf59265-8877-4e9d-b520-42db01b4d90f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

	Public Sub Main()
        If Dts.Variables.Item("ps_successErrorflag").Value.ToString = "s" Then
            Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Processed"
        Else
            Dts.Variables("ps_destination").Value = Dts.Variables.Item("ps_workspace").Value.ToString & "\" & Dts.Variables.Item("ps_module").Value.ToString & "\Error"
            Dts.Variables("ps_isFormatError").Value = "y"
        End If
	End Sub

End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="scripttask_2f23c3ad87e74784990e6423b10d2e33.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_2f23c3ad87e74784990e6423b10d2e33.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_2f23c3ad87e74784990e6423b10d2e33.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{1866DF3C-2EA1-454C-9F52-7727C22FD5DB}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{C018056D-5EE0-46BF-B4A5-EA35DB4E35CF}</msb:ProjectId>
		<msb:DisplayName>scripttask_2f23c3ad87e74784990e6423b10d2e33</msb:DisplayName>
		<msb:CodeName>scripttask_2f23c3ad87e74784990e6423b10d2e33</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_2f23c3ad87e74784990e6423b10d2e33.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_2f23c3ad87e74784990e6423b10d2e33.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAo+61IAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAXjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAw7AABPAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
OwAAAAAAAEgAAAACAAUAlCQAAHgWAAABAAAAAAAAANwjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAFACABAAAAAAAAAm8lAAAKbyYAAApyMwAAcG8nAAAKbygAAApvFQAACnJbAABwFigpAAAK
FjNsAm8lAAAKbyYAAApyXwAAcG8nAAAKAm8lAAAKbyYAAApyfQAAcG8nAAAKbygAAApvFQAACnKX
AABwAm8lAAAKbyYAAApymwAAcG8nAAAKbygAAApvFQAACnKvAABwKCoAAApvKwAACjiGAAAAAm8l
AAAKbyYAAApyXwAAcG8nAAAKAm8lAAAKbyYAAApyfQAAcG8nAAAKbygAAApvFQAACnKXAABwAm8l
AAAKbyYAAApymwAAcG8nAAAKbygAAApvFQAACnLFAABwKCoAAApvKwAACgJvJQAACm8mAAAKctMA
AHBvJwAACnL1AABwbysAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAALwHAAAjfgAAKAgAAJgJAAAjU3RyaW5ncwAAAADAEQAA/AAAACNVUwC8EgAAEAAA
ACNHVUlEAAAAzBIAAKwDAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAAAsAAAA
CgAAAAwAAAAZAAAABAAAADgAAAACAAAANgAAAA4AAAAEAAAACAAAAAkAAAAJAAAAAQAAAAUAAAAB
AAAAAwAAAAMAAAACAAAAAABeCQEAAAAAAAoAeAFOAQoArAGOAQYAvAG1AQoAFAJOAQYAkgK1AQoA
FAPqAgYASgM5AwYAdwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4AsQSbBA4AygSbBA4A9wTfBAYAIQUO
BQoAYAU5BQoAeAUTAA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1AQoAPQYTAAYAgQZiBgYApwaVBgYA
zga9BgYA4QYOBRIA/gY0BBYAVwc3BxYAbwc3BwoAgQc5BQYAmQe1AQYApwe1ARIAvQc0BAYAJgjC
BQYARgjCBQYAfghkCAYAlwiVBgYAtAhiBgYAwgiVBgYA3QiVBgYA+AiVBgYAEQmVBgYAKgmVBgYA
RwmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkAAQACAAABEAB4ADcADQAB
AAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAGABEAAAEQAPcAAgElAAgA
FQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0AMQAiAjoAMQBHAkcAIQAj
A5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCTBNwAUCAAAAAABhiIARMA
AQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsAAQCkIAAAAAATCPABKAAB
ALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwABAAghAAAAAEYChgJoAAIA
HCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIAZCEAAAAAAQDGAoAAAwCA
IQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQIQAAAAADGIgBEwAEANgh
AAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAiAAAAABEYwwEXAAUARCIA
AAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIAAAAABgB5BBMABQAAAAEA
hAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgBEwB5AIgBEwAkAIgBEwAs
AIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCBAIgBEwCJAIgBEwCRAIgB
SAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgBEwCxAIgBwAFEACMDkABM
AAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJANYGeALJANwGeALRAIgB
EwBRAIgBEwBRABAHggLZAGEHhwLhAHgHjALpAAsEkgLxAIsHlgL5AKAHnQLpAFgGpQIBAYgBTAIJ
AYgBEwARAYgBqgIZAYgBEwAhAYgBSAEpAYgBSAExAYgBSAE5AYgBSAFBAYgBSAFJAYgBSAFRAYgB
SAFZAYgBSAFhAYgBSAEIACwA4AAIADAA5QApAIMAYQEuAKsBcwMuAKMBXAMuAMMBcwMuAGMBVgMu
AHMBrwIuAOsAUQIuALsBUQIuAJsBUQIuALMBUQIuAHsBuAIuAIMB1wIuAIsBHwMuAJMBLANAACsA
5QBAABMA8ABDABMA8ABDABsA/wBJAIMAfwFjABsA/wBjABMA8ABpAIMAcgGAACsA5QCDABsA/wCD
AHMA5QCDAHsA5QCJAIMATQGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMA
bwLgACsA5QDpABMAbwIAASsA5QAAARMA8AAJARsB5QAgASsA5QAgARMA8AAjAWsB5QAjAWMBUQJA
ASsA5QBAARMA8ABgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA
8AAAAisA5QA0ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CBAABAAYABQAHAAYACAAIAAAArAFP
AAAAZQJUAAAAFAJZAAAAcQJeAAAALQOYAAAASgO1AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIA
BgAHAAIABwAJAAIADwALAAIAEgANAAIAEwAPAAEAFAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIx
AgSAAAABAAAAAAAAAAAAAAAAAAIBAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoA
EwAAAAAABAAAAAAAAAAAAAAAAQC1AQAAAAALAAAAAAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAA
ANAAGAcAAAAAAAAAAAEAAADfBwAABQAEAAYABAAKAAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsC
LQC2AS0AOAIAAAA8TW9kdWxlPgBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMATXlBcHBs
aWNhdGlvbgBTY3JpcHRUYXNrXzJmMjNjM2FkODdlNzQ3ODQ5OTBlNjQyM2IxMGQyZTMzLnZicHJv
ai5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQ
cm92aWRlcmAxAE15UmVzb3VyY2VzAFNjcmlwdFRhc2tfMmYyM2MzYWQ4N2U3NDc4NDk5MGU2NDIz
YjEwZDJlMzMudmJwcm9qLk15LlJlc291cmNlcwBNeVNldHRpbmdzAFNjcmlwdFRhc2tfMmYyM2Mz
YWQ4N2U3NDc4NDk5MGU2NDIzYjEwZDJlMzMudmJwcm9qAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBBcHBsaWNhdGlvbkJh
c2UALmN0b3IATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAQ29tcHV0ZXIAU3lzdGVtAE9i
amVjdAAuY2N0b3IAZ2V0X0NvbXB1dGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBnZXRfQXBw
bGljYXRpb24AbV9BcHBPYmplY3RQcm92aWRlcgBVc2VyAGdldF9Vc2VyAG1fVXNlck9iamVjdFBy
b3ZpZGVyAGdldF9XZWJTZXJ2aWNlcwBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBBcHBs
aWNhdGlvbgBXZWJTZXJ2aWNlcwBFcXVhbHMAbwBHZXRIYXNoQ29kZQBUeXBlAEdldFR5cGUAVG9T
dHJpbmcAQ3JlYXRlX19JbnN0YW5jZV9fAFQAaW5zdGFuY2UARGlzcG9zZV9fSW5zdGFuY2VfXwBn
ZXRfR2V0SW5zdGFuY2UATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwA
Q29udGV4dFZhbHVlYDEAbV9Db250ZXh0AEdldEluc3RhbmNlAFN5c3RlbS5SZXNvdXJjZXMAUmVz
b3VyY2VNYW5hZ2VyAF9yZXNNZ3IAU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AX3Jl
c0N1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBWYWx1
ZQBDdWx0dXJlAFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAG1f
VmFsdWUAbV9TeW5jT2JqZWN0AGdldF9WYWx1ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UATWFpbgBFbnVtAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0u
RGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUATWljcm9zb2Z0LlZpc3VhbEJhc2lj
LkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVB
dHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBIZWxwS2V5d29yZEF0dHJpYnV0
ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVj
dFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFjdGl2YXRvcgBDcmVh
dGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1
bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2libGVBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5UaHJlYWRpbmcATW9uaXRvcgBFbnRlcgBF
eGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0
cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBPcGVyYXRv
cnMAQ29tcGFyZVN0cmluZwBTdHJpbmcAQ29uY2F0AENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza18yZjIzYzNhZDg3ZTc0Nzg0
OTkwZTY0MjNiMTBkMmUzMy52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZl
cnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrXzJmMjNjM2FkODdlNzQ3ODQ5OTBlNjQyM2IxMGQyZTMz
LnZicHJvai5kbGwAAAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUA
cgBjAGUAcwAAJ3AAcwBfAHMAdQBjAGMAZQBzAHMARQByAHIAbwByAGYAbABhAGcAAANzAAAdcABz
AF8AZABlAHMAdABpAG4AYQB0AGkAbwBuAAAZcABzAF8AdwBvAHIAawBzAHAAYQBjAGUAAANcAAAT
cABzAF8AbQBvAGQAdQBsAGUAABVcAFAAcgBvAGMAZQBzAHMAZQBkAAANXABFAHIAcgBvAHIAACFw
AHMAXwBpAHMARgBvAHIAbQBhAHQARQByAHIAbwByAAADeQAAAAAAZxWqREjfPEyL9w536UOnkAAI
t3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEH
BhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAA
DgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAA
EiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJECBggDBhEoBAAAAAAE
AQAAAAUgAQERNQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIM
BhUSGAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQEIAEBDhMBAA5NeS5XZWJT
ZXJ2aWNlcwAAEAEAC015LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxpY2F0aW9u
AAAEAAEcHAMHAQIDBwEIBgABEhURUQQHARIVAwcBDgUQAQAeAAQKAR4ABAcBHgAHIAQBDg4ODmEB
ADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNy
ZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAABhUSGAETAAYVEhkBEwAECgET
AAUgAQETAAgHAxMAEwATAAQgAQECBQEAAAAABCAAEmEGIAIBDhJhBgcCEh0SHQQHARIhCAEAAgAA
AAAABAABARwEBwESIAQgABJtBCAAEnEFIAESdRwDIAAcBgADCA4OAgcABA4ODg4OBCABARwEIAEB
CAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQM
AQAHMS4wLjAuMAAAKQEAJGRhZjU5MjY1LTg4NzctNGU5ZC1iNTIwLTQyZGIwMWI0ZDkwZgAABQEA
AQAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAA3AQAyU2NyaXB0VGFza18yZjIzYzNhZDg3ZTc0Nzg0
OTkwZTY0MjNiMTBkMmUzMy52YnByb2oAAAA0OwAAAAAAAAAAAABOOwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAQDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAAAEAAAAAAAAAAAAAAAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARgAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA8AwAAAQAwADAAMAAwADAA
NABiADAAAACQADMAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBjAHIAaQBw
AHQAVABhAHMAawBfADIAZgAyADMAYwAzAGEAZAA4ADcAZQA3ADQANwA4ADQAOQA5ADAAZQA2ADQA
MgAzAGIAMQAwAGQAMgBlADMAMwAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAACQADcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwAyAGYAMgAzAGMAMwBhAGQAOAA3AGUANwA0ADcAOAA0
ADkAOQAwAGUANgA0ADIAMwBiADEAMABkADIAZQAzADMALgB2AGIAcAByAG8AagAuAGQAbABsAAAA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADMAAACYADcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBjAHIAaQBwAHQAVABhAHMAawBfADIAZgAyADMAYwAzAGEAZAA4ADcAZQA3ADQANwA4ADQAOQA5
ADAAZQA2ADQAMgAzAGIAMQAwAGQAMgBlADMAMwAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAIgA
MwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIAaQBwAHQAVABhAHMAawBfADIAZgAy
ADMAYwAzAGEAZAA4ADcAZQA3ADQANwA4ADQAOQA5ADAAZQA2ADQAMgAzAGIAMQAwAGQAMgBlADMA
MwAuAHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABgOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the SuccessErrorflag"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{8CF2C0E0-655C-410F-A549-F13C5D23F282}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Set the SuccessErrorflag"
                  DTS:ThreadHint="5">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ScriptTask_c0daa5b7a7b74c7797b8cf31b89b9d47"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="VisualBasic"
                      ReadWriteVariables="ps_successErrorflag">
                      <ProjectItem
                        Name="My Project\AssemblyInfo.vb"
                        Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("5cdd7313-c5d6-4ed0-b247-548d29756d68")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.vb"
                        Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

	Public Sub Main()
        Dts.Variables("ps_successErrorflag").Value = "s"
	End Sub

End Class]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="scripttask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{D95B4F2C-7FD9-434D-8715-91250B1BA0FE}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Settings.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{2D9333E5-3503-415C-964D-E2E60DCE5AF1}</msb:ProjectId>
		<msb:DisplayName>scripttask_c0daa5b7a7b74c7797b8cf31b89b9d47</msb:DisplayName>
		<msb:CodeName>scripttask_c0daa5b7a7b74c7797b8cf31b89b9d47</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="My Project\Resources.Designer.vb"
                        Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                      <BinaryItem
                        Name="ScriptTask_c0daa5b7a7b74c7797b8cf31b89b9d47.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPs961IAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAAXjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA5AABLAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
OQAAAAAAAEgAAAACAAUAjCMAAIQVAAABAAAAAAAAANEiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqggJvJQAACm8mAAAKcjMAAHBvJwAACnJbAABwbygAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKAHAAAjfgAADAgAAHAJAAAjU3RyaW5ncwAA
AAB8EQAAYAAAACNVUwDcEQAAEAAAACNHVUlEAAAA7BEAAJgDAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkPAAAA+iUzABYAAAEAAAAqAAAACgAAAAwAAAAZAAAABAAAADUAAAACAAAANgAAAA4AAAAEAAAA
CAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAAA4CQEAAAAAAAoAeAFOAQoArAGO
AQYAvAG1AQoAFAJOAQYAkgK1AQoAFAPqAgYASgM5AwYAdwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4A
sQSbBA4AygSbBA4A9wTfBAYAIQUOBQoAYAU5BQoAeAUTAA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1
AQoAPQYTAAYAgQZiBgYApwaVBgYAzga9BgYA4QYOBRIA/gY0BBYAVwc3BxYAbwc3BwYAgQe1ARIA
lwc0BAYAAAjCBQYAIAjCBQYAWAg+CAYAcQiVBgYAjghiBgYAnAiVBgYAtwiVBgYA0giVBgYA6wiV
BgYABAmVBgYAIQmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkAAQACAAAB
EAB4ADcADQABAAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAGABEAAAEQ
APcAAgElAAgAFQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0AMQAiAjoA
MQBHAkcAIQAjA5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCTBNwAUCAA
AAAABhiIARMAAQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsAAQCkIAAA
AAATCPABKAABALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwABAAghAAAA
AEYChgJoAAIAHCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIAZCEAAAAA
AQDGAoAAAwCAIQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQIQAAAAAD
GIgBEwAEANghAAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAiAAAAABEY
wwEXAAUARCIAAAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIAAAAABgB5
BBMABQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgBEwB5AIgB
EwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCBAIgBEwCJ
AIgBEwCRAIgBSAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgBEwCxAIgB
wAFEACMDkABMAAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJANYGeALJ
ANwGeALRAIgBEwBRAIgBEwBRABAHggLZAGEHhwLhAHgHjALpAFgGkgLxAIgBTAL5AIgBEwABAYgB
lwIJAYgBEwARAYgBSAEZAYgBSAEhAYgBSAEpAYgBSAExAYgBSAE5AYgBSAFBAYgBSAFJAYgBSAFR
AYgBSAEIACwA4AAIADAA5QApAIMAYQEuAJMBYAMuAIsBSQMuAKsBYAMuAEsBQwMuAFsBnAIuAOsA
UQIuAKMBUQIuAIMBUQIuAJsBUQIuAGMBpQIuAGsBxAIuAHMBDAMuAHsBGQNAACsA5QBAABMA8ABD
ABMA8ABDABsA/wBJAIMAfwFjABsA/wBjABMA8ABpAIMAcgGAACsA5QCDABsA/wCDAHMA5QCDAHsA
5QCJAIMATQGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMAbwLgACsA5QDp
ABMAbwIAASsA5QAAARMA8AAJARsB5QAgASsA5QAgARMA8AAjAVMB5QAjAUsBUQJAASsA5QBAARMA
8ABgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA8AAAAisA5QA0
ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CBAABAAYABQAHAAYACAAIAAAArAFPAAAAZQJUAAAA
FAJZAAAAcQJeAAAALQOYAAAASgO1AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIABgAHAAIABwAJ
AAIADwALAAIAEgANAAIAEwAPAAEAFAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIxAgSAAAABAAAA
AAAAAAAAAAAAAAIBAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAABAAA
AAAAAAAAAAAAAQC1AQAAAAALAAAAAAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAAANAAGAcAAAAA
AAAAAAEAAAC5BwAABQAEAAYABAAKAAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsCLQC2AS0AOAIA
AAAAADxNb2R1bGU+AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9u
AFNjcmlwdFRhc2tfYzBkYWE1YjdhN2I3NGM3Nzk3YjhjZjMxYjg5YjlkNDcudmJwcm9qLk15AE15
Q29tcHV0ZXIATXlQcm9qZWN0AE15V2ViU2VydmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVy
YDEATXlSZXNvdXJjZXMAU2NyaXB0VGFza19jMGRhYTViN2E3Yjc0Yzc3OTdiOGNmMzFiODliOWQ0
Ny52YnByb2ouTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MAU2NyaXB0VGFza19jMGRhYTViN2E3Yjc0
Yzc3OTdiOGNmMzFiODliOWQ0Ny52YnByb2oAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5j
Y3RvcgBnZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlv
bgBtX0FwcE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIA
Z2V0X1dlYlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9u
AFdlYlNlcnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBD
cmVhdGVfX0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJ
bnN0YW5jZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0
VmFsdWVgMQBtX0NvbnRleHQAR2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAX3Jlc01ncgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVy
ZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1
cmUAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBt
X1N5bmNPYmplY3QAZ2V0X1ZhbHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBNYWluAEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0
ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGls
ZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0
ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3Rh
bmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAENMU0NvbXBsaWFudEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza19jMGRh
YTViN2E3Yjc0Yzc3OTdiOGNmMzFiODliOWQ0Ny52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrX2MwZGFhNWI3YTdiNzRjNzc5N2I4
Y2YzMWI4OWI5ZDQ3LnZicHJvai5kbGwAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkA
UgBlAHMAbwB1AHIAYwBlAHMAACdwAHMAXwBzAHUAYwBjAGUAcwBzAEUAcgByAG8AcgBmAGwAYQBn
AAADcwAAAEYMTe+hixtPmk/APOPUsocACLd6XFYZNOCJCLA/X38R1Qo6AyAAAQMAAAEEAAASDAcG
FRIYARIMBAAAEggHBhUSGAESCAQAABIRBwYVEhgBEhEEAAASFAcGFRIYARIUBAgAEgwECAASCAQI
ABIRBAgAEhQEIAECHAMgAAgEIAASFQMgAA4CHgAHEAEBHgAeAAcwAQEBEB4AAhMABCAAEwAHBhUS
GQETAAQoABMAAwYSHQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiACBhwEAAASIAQI
ABIgCImEXc2AgMyRAgYIAwYRKAQAAAAABAEAAAAFIAEBETUIAQABAAAAAAAFIAIBDg4YAQAKTXlU
ZW1wbGF0ZQgxMC4wLjAuMAAABhUSGAESDAYVEhgBEggGFRIYARIRBhUSGAESFAQHARIMBAcBEggE
BwESEQQHARIUBCABAQ4TAQAOTXkuV2ViU2VydmljZXMAABABAAtNeS5Db21wdXRlcgAADAEAB015
LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAABAABHBwDBwECAwcBCAYAARIVEVEEBwESFQMHAQ4F
EAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMu
U29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFu
Y2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMTABMAEwAEIAEBAgUBAAAAAAQgABJh
BiACAQ4SYQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcBEiAEIAASbQQgABJxBSABEnUcBCAB
ARwEIAEBCAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQMAQAHMS4wLjAuMAAAKQEAJDVjZGQ3MzEzLWM1ZDYtNGVkMC1iMjQ3LTU0OGQyOTc1NmQ2
OAAABQEAAQAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAA3AQAyU2NyaXB0VGFza19jMGRhYTViN2E3
Yjc0Yzc3OTdiOGNmMzFiODliOWQ0Ny52YnByb2oAADg5AAAAAAAAAAAAAE45AAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABAOQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAABAAAAAAAAAAAAAAABDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEYAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAPAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAkAAzAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAYwByAGkA
cAB0AFQAYQBzAGsAXwBjADAAZABhAGEANQBiADcAYQA3AGIANwA0AGMANwA3ADkANwBiADgAYwBm
ADMAMQBiADgAOQBiADkAZAA0ADcALgB2AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAkAA3AAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AYwAwAGQAYQBhADUAYgA3AGEANwBiADcANABjADcA
NwA5ADcAYgA4AGMAZgAzADEAYgA4ADkAYgA5AGQANAA3AC4AdgBiAHAAcgBvAGoALgBkAGwAbAAA
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQAzAAAAmAA3AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAYwByAGkAcAB0AFQAYQBzAGsAXwBjADAAZABhAGEANQBiADcAYQA3AGIANwA0AGMANwA3ADkA
NwBiADgAYwBmADMAMQBiADgAOQBiADkAZAA0ADcALgB2AGIAcAByAG8AagAuAGQAbABsAAAAAACI
ADMAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwBjADAA
ZABhAGEANQBiADcAYQA3AGIANwA0AGMANwA3ADkANwBiADgAYwBmADMAMQBiADgAOQBiADkAZAA0
ADcALgB2AGIAcAByAG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAYDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion"
                  DTS:CreationName="STOCK:SEQUENCE"
                  DTS:Description="Sequence Container"
                  DTS:DTSID="{DAE89005-EE73-4913-B975-BE1E31FD279F}"
                  DTS:ExecutableType="STOCK:SEQUENCE"
                  DTS:ForceExecutionResult="0"
                  DTS:LocaleID="-1"
                  DTS:MaxErrorCount="1000"
                  DTS:ObjectName="Staging Table Insertion">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table"
                      DTS:CreationName="SSIS.Pipeline.3"
                      DTS:DelayValidation="True"
                      DTS:Description="Data Flow Task"
                      DTS:DTSID="{5B9FAC43-32F2-4312-B2FA-AA13AC67E44B}"
                      DTS:ExecutableType="SSIS.Pipeline.3"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Insert As Of Date into Staging table"
                      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v9; (C) 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0" />
                      <DTS:PropertyExpression
                        DTS:Name="[XML Source].[XMLSchemaDefinition]">@[User::ps_XMLSchema_treasury]</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <pipeline
                          BLOBTempStoragePath=""
                          bufferTempStoragePath=""
                          engineThreads="5"
                          version="1">
                          <components>
                            <component
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join"
                              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
                              contactInfo="Merge Join;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                              description="Merges data from two datasets by using a join."
                              name="Merge Join"
                              version="1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the type of join to perform."
                                  name="JoinType"
                                  typeConverter="JoinType">2</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the number of columns in the ordering key."
                                  name="NumKeyColumns">1</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the null values are treated as equal values."
                                  name="TreatNullsAsEqual">true</property>
                                <property
                                  dataType="System.Int32"
                                  description="Indicates the requested maximum buffers per input before blocking."
                                  name="MaxBuffersPerInput">5</property>
                              </properties>
                              <inputs>
                                <input
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Left Input]"
                                  hasSideEffects="true"
                                  name="Merge Join Left Input">
                                  <inputColumns>
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[G_NEW_DATE_Id]"
                                      cachedDataType="ui8"
                                      cachedName="G_NEW_DATE_Id"
                                      cachedSortKeyPosition="1"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].Columns[G_NEW_DATE_Id]" />
                                  </inputColumns>
                                  <externalMetadataColumns />
                                </input>
                                <input
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Right Input]"
                                  hasSideEffects="true"
                                  name="Merge Join Right Input">
                                  <inputColumns>
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Right Input].Columns[G_NEW_DATE_Id]"
                                      cachedDataType="ui8"
                                      cachedName="G_NEW_DATE_Id"
                                      cachedSortKeyPosition="1"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[G_NEW_DATE_Id]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Right Input].Columns[BID_CURVE_DATE]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BID_CURVE_DATE"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[BID_CURVE_DATE]" />
                                  </inputColumns>
                                  <externalMetadataColumns />
                                </input>
                              </inputs>
                              <outputs>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Outputs[Merge Join Output]"
                                  name="Merge Join Output">
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BID_CURVE_DATE]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BID_CURVE_DATE]"
                                      name="BID_CURVE_DATE">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Right Input].Columns[BID_CURVE_DATE]}</property>
                                      </properties>
                                    </outputColumn>
                                  </outputColumns>
                                  <externalMetadataColumns />
                                </output>
                              </outputs>
                            </component>
                            <component
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination"
                              componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                              contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                              description="OLE DB Destination"
                              name="OLE DB Destination"
                              usesDispositions="true"
                              version="4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                                  name="CommandTimeout">0</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies the name of the database object used to open a rowset."
                                  name="OpenRowset">[dbo].[stage_source_price_curve_treasury]</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                                  name="OpenRowsetVariable"></property>
                                <property
                                  dataType="System.String"
                                  description="The SQL command to be executed."
                                  name="SqlCommand"
                                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                                  name="DefaultCodePage">1252</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Forces the use of the DefaultCodePage property value when describing character data."
                                  name="AlwaysUseDefaultCodePage">false</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the mode used to access the database."
                                  name="AccessMode"
                                  typeConverter="AccessMode">3</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                                  name="FastLoadKeepIdentity">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                                  name="FastLoadKeepNulls">false</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                                  name="FastLoadMaxInsertCommitSize">0</property>
                              </properties>
                              <connections>
                                <connection
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Connections[OleDbConnection]"
                                  connectionManagerID="Package.ConnectionManagers[OLE_CONN_MainDB]"
                                  connectionManagerRefId="Package.ConnectionManagers[OLE_CONN_MainDB]"
                                  description="The OLE DB runtime connection used to access the database."
                                  name="OleDbConnection" />
                              </connections>
                              <inputs>
                                <input
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                                  errorOrTruncationOperation="Insert"
                                  errorRowDisposition="FailComponent"
                                  hasSideEffects="true"
                                  name="OLE DB Destination Input">
                                  <inputColumns>
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BID_CURVE_DATE]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BID_CURVE_DATE"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[asOfdate]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BID_CURVE_DATE]" />
                                  </inputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[asOfdate]"
                                      dataType="wstr"
                                      length="255"
                                      name="asOfdate" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[1mo]"
                                      dataType="wstr"
                                      length="255"
                                      name="1mo" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[3mo]"
                                      dataType="wstr"
                                      length="255"
                                      name="3mo" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[6mo]"
                                      dataType="wstr"
                                      length="255"
                                      name="6mo" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[1yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="1yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[2yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="2yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[3yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="3yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[5yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="5yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[7yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="7yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[10yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="10yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[20yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="20yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[30yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="30yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[30yrDisplay]"
                                      dataType="wstr"
                                      length="255"
                                      name="30yrDisplay" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                                      dataType="i4"
                                      name="id" />
                                  </externalMetadataColumns>
                                </input>
                              </inputs>
                              <outputs>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                                  exclusionGroup="1"
                                  isErrorOut="true"
                                  name="OLE DB Destination Error Output"
                                  synchronousInputId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns />
                                </output>
                              </outputs>
                            </component>
                            <component
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source"
                              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                              contactInfo="Extracts data from an XML data file.;Microsoft Corporation;Microsoft SqlServer v9;  2004 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                              description="Extracts data from an XML data file."
                              name="XML Source"
                              usesDispositions="true"
                              version="2">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter, Microsoft.SqlServer.XmlSrc, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                                <property
                                  dataType="System.String"
                                  description="The XML data used by the XML source adapter."
                                  expressionType="Notify"
                                  name="XMLData"></property>
                                <property
                                  dataType="System.String"
                                  description="The variable used by the XML source adapter to specify XML data."
                                  name="XMLDataVariable">User::ps_fileNameInProcessWithPath</property>
                                <property
                                  dataType="System.Int32"
                                  description="Defines how the XML source adapter gets XML data."
                                  name="AccessMode">1</property>
                                <property
                                  dataType="System.String"
                                  description="The XML schema definition used by the XML source adapter."
                                  expressionType="Notify"
                                  name="XMLSchemaDefinition">E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\PriceCurves\Schema\treasury.xsd</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Identifies whether or not to use inline schema."
                                  name="UseInlineSchema">false</property>
                                <property
                                  dataType="System.Int32"
                                  description="Defines how XML integer types are mapped."
                                  name="XMLIntegerMapping"
                                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter, Microsoft.SqlServer.XmlSrc, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">1</property>
                              </properties>
                              <outputs>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT]"
                                  name="G_BC_CAT">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_1MONTH]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_1MONTH]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_1MONTH]"
                                      name="BC_1MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_3MONTH]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_3MONTH]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_3MONTH]"
                                      name="BC_3MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_6MONTH]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_6MONTH]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_6MONTH]"
                                      name="BC_6MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_1YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_1YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_1YEAR]"
                                      name="BC_1YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_2YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_2YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_2YEAR]"
                                      name="BC_2YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_3YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_3YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_3YEAR]"
                                      name="BC_3YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_5YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_5YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_5YEAR]"
                                      name="BC_5YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_7YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_7YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_7YEAR]"
                                      name="BC_7YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_10YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_10YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_10YEAR]"
                                      name="BC_10YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_20YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_20YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_20YEAR]"
                                      name="BC_20YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_30YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_30YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_30YEAR]"
                                      name="BC_30YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_30YEARDISPLAY]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_30YEARDISPLAY]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BC_30YEARDISPLAY]"
                                      name="BC_30YEARDISPLAY"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BOND_MKT_UNAVAIL]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[BOND_MKT_UNAVAIL]"
                                      name="BOND_MKT_UNAVAIL"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_1MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_3MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_6MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_1YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_2YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_3YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_5YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_7YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_10YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_20YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_30YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BC_30YEARDISPLAY]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_30YEARDISPLAY" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      dataType="wstr"
                                      length="255"
                                      name="BOND_MKT_UNAVAIL" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      name="LIST_G_BC_CAT_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output]"
                                  isErrorOut="true"
                                  name="G_BC_CAT Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_1MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_1MONTH]"
                                      name="BC_1MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_3MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_3MONTH]"
                                      name="BC_3MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_6MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_6MONTH]"
                                      name="BC_6MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_1YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_1YEAR]"
                                      name="BC_1YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_2YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_2YEAR]"
                                      name="BC_2YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_3YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_3YEAR]"
                                      name="BC_3YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_5YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_5YEAR]"
                                      name="BC_5YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_7YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_7YEAR]"
                                      name="BC_7YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_10YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_10YEAR]"
                                      name="BC_10YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_20YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_20YEAR]"
                                      name="BC_20YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_30YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_30YEAR]"
                                      name="BC_30YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_30YEARDISPLAY]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEARDISPLAY]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BC_30YEARDISPLAY]"
                                      name="BC_30YEARDISPLAY" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BOND_MKT_UNAVAIL]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[BOND_MKT_UNAVAIL]"
                                      name="BOND_MKT_UNAVAIL" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1MONTH]"
                                      dataType="nText"
                                      name="BC_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3MONTH]"
                                      dataType="nText"
                                      name="BC_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_6MONTH]"
                                      dataType="nText"
                                      name="BC_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1YEAR]"
                                      dataType="nText"
                                      name="BC_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_2YEAR]"
                                      dataType="nText"
                                      name="BC_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3YEAR]"
                                      dataType="nText"
                                      name="BC_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_5YEAR]"
                                      dataType="nText"
                                      name="BC_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_7YEAR]"
                                      dataType="nText"
                                      name="BC_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_10YEAR]"
                                      dataType="nText"
                                      name="BC_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_20YEAR]"
                                      dataType="nText"
                                      name="BC_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEAR]"
                                      dataType="nText"
                                      name="BC_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEARDISPLAY]"
                                      dataType="nText"
                                      name="BC_30YEARDISPLAY" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      dataType="nText"
                                      name="BOND_MKT_UNAVAIL" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      name="LIST_G_BC_CAT_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT]"
                                  isSorted="true"
                                  name="LIST_G_BC_CAT">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].Columns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id"
                                      sortKeyPosition="1"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      name="LIST_G_BC_CAT_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output]"
                                  isErrorOut="true"
                                  name="LIST_G_BC_CAT Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      name="LIST_G_BC_CAT_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE]"
                                  isSorted="true"
                                  name="G_NEW_DATE">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id"
                                      sortKeyPosition="1"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[BID_CURVE_DATE]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[BID_CURVE_DATE]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[BID_CURVE_DATE]"
                                      name="BID_CURVE_DATE"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[DAY_OF_WEEK]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[DAY_OF_WEEK]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[DAY_OF_WEEK]"
                                      name="DAY_OF_WEEK"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[NEW_DATE]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[NEW_DATE]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[NEW_DATE]"
                                      name="NEW_DATE"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[BID_CURVE_DATE]"
                                      dataType="wstr"
                                      length="255"
                                      name="BID_CURVE_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[DAY_OF_WEEK]"
                                      dataType="wstr"
                                      length="255"
                                      name="DAY_OF_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[NEW_DATE]"
                                      dataType="wstr"
                                      length="255"
                                      name="NEW_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="LIST_G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output]"
                                  isErrorOut="true"
                                  name="G_NEW_DATE Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[BID_CURVE_DATE]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[BID_CURVE_DATE]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[BID_CURVE_DATE]"
                                      name="BID_CURVE_DATE" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[DAY_OF_WEEK]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[DAY_OF_WEEK]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[DAY_OF_WEEK]"
                                      name="DAY_OF_WEEK" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[NEW_DATE]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[NEW_DATE]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[NEW_DATE]"
                                      name="NEW_DATE" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[BID_CURVE_DATE]"
                                      dataType="nText"
                                      name="BID_CURVE_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[DAY_OF_WEEK]"
                                      dataType="nText"
                                      name="DAY_OF_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[NEW_DATE]"
                                      dataType="nText"
                                      name="NEW_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="LIST_G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE]"
                                  name="LIST_G_NEW_DATE">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output]"
                                  isErrorOut="true"
                                  name="LIST_G_NEW_DATE Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH]"
                                  name="G_WEEK_OF_MONTH">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[WEEK_OF_MONTH]"
                                      dataType="ui2"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[WEEK_OF_MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[WEEK_OF_MONTH]"
                                      name="WEEK_OF_MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_IN_WEEK]"
                                      dataType="ui1"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_IN_WEEK]"
                                      name="NUM_DAYS_IN_WEEK"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="ui1"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      name="NUM_DAYS_FOR_CALCULATION"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1MONTH]"
                                      name="SUM_1MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3MONTH]"
                                      name="SUM_3MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_6MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_6MONTH]"
                                      name="SUM_6MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1YEAR]"
                                      name="SUM_1YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_2YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_2YEAR]"
                                      name="SUM_2YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3YEAR]"
                                      name="SUM_3YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_5YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_5YEAR]"
                                      name="SUM_5YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_7YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_7YEAR]"
                                      name="SUM_7YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_10YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_10YEAR]"
                                      name="SUM_10YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_20YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_20YEAR]"
                                      name="SUM_20YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_30YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[SUM_30YEAR]"
                                      name="SUM_30YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1MONTH]"
                                      name="AVERAGE_1MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3MONTH]"
                                      name="AVERAGE_3MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_6MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_6MONTH]"
                                      name="AVERAGE_6MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1YEAR]"
                                      name="AVERAGE_1YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_2YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_2YEAR]"
                                      name="AVERAGE_2YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3YEAR]"
                                      name="AVERAGE_3YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_5YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_5YEAR]"
                                      name="AVERAGE_5YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_7YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_7YEAR]"
                                      name="AVERAGE_7YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_10YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_10YEAR]"
                                      name="AVERAGE_10YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_20YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_20YEAR]"
                                      name="AVERAGE_20YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_30YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_30YEAR]"
                                      name="AVERAGE_30YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[WEEK_OF_MONTH]"
                                      dataType="ui2"
                                      name="WEEK_OF_MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      dataType="ui1"
                                      name="NUM_DAYS_IN_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="ui1"
                                      name="NUM_DAYS_FOR_CALCULATION" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1MONTH]"
                                      dataType="decimal"
                                      name="SUM_1MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3MONTH]"
                                      dataType="decimal"
                                      name="SUM_3MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_6MONTH]"
                                      dataType="decimal"
                                      name="SUM_6MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1YEAR]"
                                      dataType="decimal"
                                      name="SUM_1YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_2YEAR]"
                                      dataType="decimal"
                                      name="SUM_2YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3YEAR]"
                                      dataType="decimal"
                                      name="SUM_3YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_5YEAR]"
                                      dataType="decimal"
                                      name="SUM_5YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_7YEAR]"
                                      dataType="decimal"
                                      name="SUM_7YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_10YEAR]"
                                      dataType="decimal"
                                      name="SUM_10YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_20YEAR]"
                                      dataType="decimal"
                                      name="SUM_20YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_30YEAR]"
                                      dataType="decimal"
                                      name="SUM_30YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1MONTH]"
                                      dataType="decimal"
                                      name="AVERAGE_1MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3MONTH]"
                                      dataType="decimal"
                                      name="AVERAGE_3MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_6MONTH]"
                                      dataType="decimal"
                                      name="AVERAGE_6MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_1YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_2YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_2YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_3YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_5YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_5YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_7YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_7YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_10YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_10YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_20YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_20YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_30YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_30YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output]"
                                  isErrorOut="true"
                                  name="G_WEEK_OF_MONTH Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[WEEK_OF_MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[WEEK_OF_MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[WEEK_OF_MONTH]"
                                      name="WEEK_OF_MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_IN_WEEK]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_IN_WEEK]"
                                      name="NUM_DAYS_IN_WEEK" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      name="NUM_DAYS_FOR_CALCULATION" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1MONTH]"
                                      name="SUM_1MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3MONTH]"
                                      name="SUM_3MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_6MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_6MONTH]"
                                      name="SUM_6MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1YEAR]"
                                      name="SUM_1YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_2YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_2YEAR]"
                                      name="SUM_2YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3YEAR]"
                                      name="SUM_3YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_5YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_5YEAR]"
                                      name="SUM_5YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_7YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_7YEAR]"
                                      name="SUM_7YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_10YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_10YEAR]"
                                      name="SUM_10YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_20YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_20YEAR]"
                                      name="SUM_20YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_30YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_30YEAR]"
                                      name="SUM_30YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1MONTH]"
                                      name="AVERAGE_1MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3MONTH]"
                                      name="AVERAGE_3MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_6MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_6MONTH]"
                                      name="AVERAGE_6MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1YEAR]"
                                      name="AVERAGE_1YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_2YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_2YEAR]"
                                      name="AVERAGE_2YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3YEAR]"
                                      name="AVERAGE_3YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_5YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_5YEAR]"
                                      name="AVERAGE_5YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_7YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_7YEAR]"
                                      name="AVERAGE_7YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_10YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_10YEAR]"
                                      name="AVERAGE_10YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_20YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_20YEAR]"
                                      name="AVERAGE_20YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_30YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_30YEAR]"
                                      name="AVERAGE_30YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[WEEK_OF_MONTH]"
                                      dataType="nText"
                                      name="WEEK_OF_MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      dataType="nText"
                                      name="NUM_DAYS_IN_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="nText"
                                      name="NUM_DAYS_FOR_CALCULATION" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1MONTH]"
                                      dataType="nText"
                                      name="SUM_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3MONTH]"
                                      dataType="nText"
                                      name="SUM_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_6MONTH]"
                                      dataType="nText"
                                      name="SUM_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1YEAR]"
                                      dataType="nText"
                                      name="SUM_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_2YEAR]"
                                      dataType="nText"
                                      name="SUM_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3YEAR]"
                                      dataType="nText"
                                      name="SUM_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_5YEAR]"
                                      dataType="nText"
                                      name="SUM_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_7YEAR]"
                                      dataType="nText"
                                      name="SUM_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_10YEAR]"
                                      dataType="nText"
                                      name="SUM_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_20YEAR]"
                                      dataType="nText"
                                      name="SUM_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_30YEAR]"
                                      dataType="nText"
                                      name="SUM_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1MONTH]"
                                      dataType="nText"
                                      name="AVERAGE_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3MONTH]"
                                      dataType="nText"
                                      name="AVERAGE_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_6MONTH]"
                                      dataType="nText"
                                      name="AVERAGE_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_2YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_5YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_7YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_10YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_20YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_30YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH]"
                                  name="LIST_G_WEEK_OF_MONTH">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output]"
                                  isErrorOut="true"
                                  name="LIST_G_WEEK_OF_MONTH Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                              </outputs>
                            </component>
                          </components>
                          <paths>
                            <path
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table.Paths[G_NEW_DATE]"
                              endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Right Input]"
                              name="G_NEW_DATE"
                              startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[G_NEW_DATE]" />
                            <path
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table.Paths[LIST_G_BC_CAT]"
                              endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Inputs[Merge Join Left Input]"
                              name="LIST_G_BC_CAT"
                              startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source.Outputs[LIST_G_BC_CAT]" />
                            <path
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table.Paths[Merge Join Output]"
                              endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              name="Merge Join Output"
                              startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join.Outputs[Merge Join Output]" />
                          </paths>
                        </pipeline>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table"
                      DTS:CreationName="SSIS.Pipeline.3"
                      DTS:DelayValidation="True"
                      DTS:Description="Data Flow Task"
                      DTS:DTSID="{D1A7FFAC-5BE6-4003-A096-91DC18C3B1DA}"
                      DTS:ExecutableType="SSIS.Pipeline.3"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Insert Values  into Staging table"
                      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v9; (C) 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0" />
                      <DTS:PropertyExpression
                        DTS:Name="[XML Source 2].[XMLSchemaDefinition]">@[User::ps_XMLSchema_treasury]</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <pipeline
                          BLOBTempStoragePath=""
                          bufferTempStoragePath=""
                          engineThreads="5"
                          version="1">
                          <components>
                            <component
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join"
                              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
                              contactInfo="Merge Join;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                              description="Merges data from two datasets by using a join."
                              name="Merge Join"
                              version="1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the type of join to perform."
                                  name="JoinType"
                                  typeConverter="JoinType">2</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the number of columns in the ordering key."
                                  name="NumKeyColumns">1</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the null values are treated as equal values."
                                  name="TreatNullsAsEqual">true</property>
                                <property
                                  dataType="System.Int32"
                                  description="Indicates the requested maximum buffers per input before blocking."
                                  name="MaxBuffersPerInput">5</property>
                              </properties>
                              <inputs>
                                <input
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input]"
                                  hasSideEffects="true"
                                  name="Merge Join Left Input">
                                  <inputColumns>
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[LIST_G_BC_CAT_Id]"
                                      cachedDataType="ui8"
                                      cachedName="LIST_G_BC_CAT_Id"
                                      cachedSortKeyPosition="1"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[LIST_G_BC_CAT_Id]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_1MONTH]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_1MONTH"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_1MONTH]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_3MONTH]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_3MONTH"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_3MONTH]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_6MONTH]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_6MONTH"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_6MONTH]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_1YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_1YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_1YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_5YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_5YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_5YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_7YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_7YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_7YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_10YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_10YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_10YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_2YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_2YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_2YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_3YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_3YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_3YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_20YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_20YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_20YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_30YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_30YEAR"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_30YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_30YEARDISPLAY]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_30YEARDISPLAY"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_30YEARDISPLAY]" />
                                  </inputColumns>
                                  <externalMetadataColumns />
                                </input>
                                <input
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Right Input]"
                                  hasSideEffects="true"
                                  name="Merge Join Right Input">
                                  <inputColumns>
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Right Input].Columns[LIST_G_BC_CAT_Id]"
                                      cachedDataType="ui8"
                                      cachedName="LIST_G_BC_CAT_Id"
                                      cachedSortKeyPosition="1"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].Columns[LIST_G_BC_CAT_Id]" />
                                  </inputColumns>
                                  <externalMetadataColumns />
                                </input>
                              </inputs>
                              <outputs>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output]"
                                  name="Merge Join Output">
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_1MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_1MONTH]"
                                      name="BC_1MONTH">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_1MONTH]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_3MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_3MONTH]"
                                      name="BC_3MONTH">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_3MONTH]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_6MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_6MONTH]"
                                      name="BC_6MONTH">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_6MONTH]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_1YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_1YEAR]"
                                      name="BC_1YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_1YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_5YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_5YEAR]"
                                      name="BC_5YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_5YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_7YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_7YEAR]"
                                      name="BC_7YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_7YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_10YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_10YEAR]"
                                      name="BC_10YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_10YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_2YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_2YEAR]"
                                      name="BC_2YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_2YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_3YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_3YEAR]"
                                      name="BC_3YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_3YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_20YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_20YEAR]"
                                      name="BC_20YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_20YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_30YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_30YEAR]"
                                      name="BC_30YEAR">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_30YEAR]}</property>
                                      </properties>
                                    </outputColumn>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_30YEARDISPLAY]"
                                      dataType="wstr"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_30YEARDISPLAY]"
                                      name="BC_30YEARDISPLAY">
                                      <properties>
                                        <property
                                          containsID="true"
                                          dataType="System.Int32"
                                          description="The input column associated with this output column"
                                          name="InputColumnID">#{Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input].Columns[BC_30YEARDISPLAY]}</property>
                                      </properties>
                                    </outputColumn>
                                  </outputColumns>
                                  <externalMetadataColumns />
                                </output>
                              </outputs>
                            </component>
                            <component
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination"
                              componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                              contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                              description="OLE DB Destination"
                              name="OLE DB Destination"
                              usesDispositions="true"
                              version="4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                                  name="CommandTimeout">0</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies the name of the database object used to open a rowset."
                                  name="OpenRowset">[dbo].[stage_source_price_curve_treasury]</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                                  name="OpenRowsetVariable"></property>
                                <property
                                  dataType="System.String"
                                  description="The SQL command to be executed."
                                  name="SqlCommand"
                                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                                  name="DefaultCodePage">1252</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Forces the use of the DefaultCodePage property value when describing character data."
                                  name="AlwaysUseDefaultCodePage">false</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the mode used to access the database."
                                  name="AccessMode"
                                  typeConverter="AccessMode">3</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                                  name="FastLoadKeepIdentity">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                                  name="FastLoadKeepNulls">false</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                                  name="FastLoadMaxInsertCommitSize">0</property>
                              </properties>
                              <connections>
                                <connection
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Connections[OleDbConnection]"
                                  connectionManagerID="Package.ConnectionManagers[OLE_CONN_MainDB]"
                                  connectionManagerRefId="Package.ConnectionManagers[OLE_CONN_MainDB]"
                                  description="The OLE DB runtime connection used to access the database."
                                  name="OleDbConnection" />
                              </connections>
                              <inputs>
                                <input
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                                  errorOrTruncationOperation="Insert"
                                  errorRowDisposition="FailComponent"
                                  hasSideEffects="true"
                                  name="OLE DB Destination Input">
                                  <inputColumns>
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_1MONTH]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_1MONTH"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[1mo]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_1MONTH]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_3MONTH]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_3MONTH"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[3mo]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_3MONTH]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_6MONTH]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_6MONTH"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[6mo]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_6MONTH]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_1YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_1YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[1yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_1YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_5YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_5YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[5yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_5YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_7YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_7YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[7yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_7YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_10YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_10YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[10yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_10YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_2YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_2YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[2yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_2YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_3YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_3YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[3yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_3YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_20YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_20YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[20yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_20YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_30YEAR]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_30YEAR"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[30yr]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_30YEAR]" />
                                    <inputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BC_30YEARDISPLAY]"
                                      cachedDataType="wstr"
                                      cachedLength="255"
                                      cachedName="BC_30YEARDISPLAY"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[30yrDisplay]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output].Columns[BC_30YEARDISPLAY]" />
                                  </inputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[asOfdate]"
                                      dataType="wstr"
                                      length="255"
                                      name="asOfdate" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[1mo]"
                                      dataType="wstr"
                                      length="255"
                                      name="1mo" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[3mo]"
                                      dataType="wstr"
                                      length="255"
                                      name="3mo" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[6mo]"
                                      dataType="wstr"
                                      length="255"
                                      name="6mo" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[1yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="1yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[2yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="2yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[3yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="3yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[5yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="5yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[7yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="7yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[10yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="10yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[20yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="20yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[30yr]"
                                      dataType="wstr"
                                      length="255"
                                      name="30yr" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[30yrDisplay]"
                                      dataType="wstr"
                                      length="255"
                                      name="30yrDisplay" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                                      dataType="i4"
                                      name="id" />
                                  </externalMetadataColumns>
                                </input>
                              </inputs>
                              <outputs>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                                  exclusionGroup="1"
                                  isErrorOut="true"
                                  name="OLE DB Destination Error Output"
                                  synchronousInputId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns />
                                </output>
                              </outputs>
                            </component>
                            <component
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2"
                              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                              contactInfo="Extracts data from an XML data file.;Microsoft Corporation;Microsoft SqlServer v9;  2004 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                              description="Extracts data from an XML data file."
                              name="XML Source 2"
                              usesDispositions="true"
                              version="2">
                              <properties>
                                <property
                                  dataType="System.String"
                                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter, Microsoft.SqlServer.XmlSrc, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                                <property
                                  dataType="System.String"
                                  description="The XML data used by the XML source adapter."
                                  expressionType="Notify"
                                  name="XMLData"></property>
                                <property
                                  dataType="System.String"
                                  description="The variable used by the XML source adapter to specify XML data."
                                  name="XMLDataVariable">User::ps_fileNameInProcessWithPath</property>
                                <property
                                  dataType="System.Int32"
                                  description="Defines how the XML source adapter gets XML data."
                                  name="AccessMode">1</property>
                                <property
                                  dataType="System.String"
                                  description="The XML schema definition used by the XML source adapter."
                                  expressionType="Notify"
                                  name="XMLSchemaDefinition">E:\FARRMS_DataSrc\TRMTracker_LADWP\NymexTreasuryPlattsPriceCurve\Data\PriceCurves\Schema\treasury.xsd</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Identifies whether or not to use inline schema."
                                  name="UseInlineSchema">false</property>
                                <property
                                  dataType="System.Int32"
                                  description="Defines how XML integer types are mapped."
                                  name="XMLIntegerMapping"
                                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter, Microsoft.SqlServer.XmlSrc, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">1</property>
                              </properties>
                              <outputs>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT]"
                                  isSorted="true"
                                  name="G_BC_CAT">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_1MONTH]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_1MONTH]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_1MONTH]"
                                      name="BC_1MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_3MONTH]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_3MONTH]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_3MONTH]"
                                      name="BC_3MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_6MONTH]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_6MONTH]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_6MONTH]"
                                      name="BC_6MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_1YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_1YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_1YEAR]"
                                      name="BC_1YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_2YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_2YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_2YEAR]"
                                      name="BC_2YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_3YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_3YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_3YEAR]"
                                      name="BC_3YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_5YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_5YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_5YEAR]"
                                      name="BC_5YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_7YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_7YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_7YEAR]"
                                      name="BC_7YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_10YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_10YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_10YEAR]"
                                      name="BC_10YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_20YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_20YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_20YEAR]"
                                      name="BC_20YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_30YEAR]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_30YEAR]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_30YEAR]"
                                      name="BC_30YEAR"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_30YEARDISPLAY]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_30YEARDISPLAY]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BC_30YEARDISPLAY]"
                                      name="BC_30YEARDISPLAY"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BOND_MKT_UNAVAIL]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[BOND_MKT_UNAVAIL]"
                                      name="BOND_MKT_UNAVAIL"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id"
                                      sortKeyPosition="1"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_1MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_3MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_6MONTH]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_1YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_2YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_3YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_5YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_7YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_10YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_20YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_30YEAR]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BC_30YEARDISPLAY]"
                                      dataType="wstr"
                                      length="255"
                                      name="BC_30YEARDISPLAY" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      dataType="wstr"
                                      length="255"
                                      name="BOND_MKT_UNAVAIL" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      name="LIST_G_BC_CAT_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output]"
                                  isErrorOut="true"
                                  name="G_BC_CAT Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_1MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_1MONTH]"
                                      name="BC_1MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_3MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_3MONTH]"
                                      name="BC_3MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_6MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_6MONTH]"
                                      name="BC_6MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_1YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_1YEAR]"
                                      name="BC_1YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_2YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_2YEAR]"
                                      name="BC_2YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_3YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_3YEAR]"
                                      name="BC_3YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_5YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_5YEAR]"
                                      name="BC_5YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_7YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_7YEAR]"
                                      name="BC_7YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_10YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_10YEAR]"
                                      name="BC_10YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_20YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_20YEAR]"
                                      name="BC_20YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_30YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_30YEAR]"
                                      name="BC_30YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_30YEARDISPLAY]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEARDISPLAY]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BC_30YEARDISPLAY]"
                                      name="BC_30YEARDISPLAY" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BOND_MKT_UNAVAIL]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[BOND_MKT_UNAVAIL]"
                                      name="BOND_MKT_UNAVAIL" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1MONTH]"
                                      dataType="nText"
                                      name="BC_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3MONTH]"
                                      dataType="nText"
                                      name="BC_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_6MONTH]"
                                      dataType="nText"
                                      name="BC_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_1YEAR]"
                                      dataType="nText"
                                      name="BC_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_2YEAR]"
                                      dataType="nText"
                                      name="BC_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_3YEAR]"
                                      dataType="nText"
                                      name="BC_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_5YEAR]"
                                      dataType="nText"
                                      name="BC_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_7YEAR]"
                                      dataType="nText"
                                      name="BC_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_10YEAR]"
                                      dataType="nText"
                                      name="BC_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_20YEAR]"
                                      dataType="nText"
                                      name="BC_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEAR]"
                                      dataType="nText"
                                      name="BC_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BC_30YEARDISPLAY]"
                                      dataType="nText"
                                      name="BC_30YEARDISPLAY" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[BOND_MKT_UNAVAIL]"
                                      dataType="nText"
                                      name="BOND_MKT_UNAVAIL" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      name="LIST_G_BC_CAT_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT]"
                                  isSorted="true"
                                  name="LIST_G_BC_CAT">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id"
                                      sortKeyPosition="1"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].Columns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="ui8"
                                      name="LIST_G_BC_CAT_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output]"
                                  isErrorOut="true"
                                  name="LIST_G_BC_CAT Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_BC_CAT</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[LIST_G_BC_CAT_Id]"
                                      name="LIST_G_BC_CAT_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[LIST_G_BC_CAT_Id]"
                                      dataType="nText"
                                      name="LIST_G_BC_CAT_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE]"
                                  name="G_NEW_DATE">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[BID_CURVE_DATE]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[BID_CURVE_DATE]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[BID_CURVE_DATE]"
                                      name="BID_CURVE_DATE"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[DAY_OF_WEEK]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[DAY_OF_WEEK]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[DAY_OF_WEEK]"
                                      name="DAY_OF_WEEK"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[NEW_DATE]"
                                      dataType="wstr"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[NEW_DATE]"
                                      length="255"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[NEW_DATE]"
                                      name="NEW_DATE"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[BID_CURVE_DATE]"
                                      dataType="wstr"
                                      length="255"
                                      name="BID_CURVE_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[DAY_OF_WEEK]"
                                      dataType="wstr"
                                      length="255"
                                      name="DAY_OF_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[NEW_DATE]"
                                      dataType="wstr"
                                      length="255"
                                      name="NEW_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="LIST_G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output]"
                                  isErrorOut="true"
                                  name="G_NEW_DATE Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[G_NEW_DATE_Id]"
                                      name="G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[BID_CURVE_DATE]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[BID_CURVE_DATE]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[BID_CURVE_DATE]"
                                      name="BID_CURVE_DATE" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[DAY_OF_WEEK]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[DAY_OF_WEEK]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[DAY_OF_WEEK]"
                                      name="DAY_OF_WEEK" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[NEW_DATE]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[NEW_DATE]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[NEW_DATE]"
                                      name="NEW_DATE" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[BID_CURVE_DATE]"
                                      dataType="nText"
                                      name="BID_CURVE_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[DAY_OF_WEEK]"
                                      dataType="nText"
                                      name="DAY_OF_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[NEW_DATE]"
                                      dataType="nText"
                                      name="NEW_DATE" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="LIST_G_NEW_DATE_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE]"
                                  name="LIST_G_NEW_DATE">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="ui8"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output]"
                                  isErrorOut="true"
                                  name="LIST_G_NEW_DATE Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_NEW_DATE</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[LIST_G_NEW_DATE_Id]"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[LIST_G_NEW_DATE_Id]"
                                      dataType="nText"
                                      name="LIST_G_NEW_DATE_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_NEW_DATE Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH]"
                                  name="G_WEEK_OF_MONTH">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[WEEK_OF_MONTH]"
                                      dataType="ui2"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[WEEK_OF_MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[WEEK_OF_MONTH]"
                                      name="WEEK_OF_MONTH"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_IN_WEEK]"
                                      dataType="ui1"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_IN_WEEK]"
                                      name="NUM_DAYS_IN_WEEK"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="ui1"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      name="NUM_DAYS_FOR_CALCULATION"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1MONTH]"
                                      name="SUM_1MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3MONTH]"
                                      name="SUM_3MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_6MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_6MONTH]"
                                      name="SUM_6MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_1YEAR]"
                                      name="SUM_1YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_2YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_2YEAR]"
                                      name="SUM_2YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_3YEAR]"
                                      name="SUM_3YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_5YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_5YEAR]"
                                      name="SUM_5YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_7YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_7YEAR]"
                                      name="SUM_7YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_10YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_10YEAR]"
                                      name="SUM_10YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_20YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_20YEAR]"
                                      name="SUM_20YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_30YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[SUM_30YEAR]"
                                      name="SUM_30YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1MONTH]"
                                      name="AVERAGE_1MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3MONTH]"
                                      name="AVERAGE_3MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_6MONTH]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_6MONTH]"
                                      name="AVERAGE_6MONTH"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_1YEAR]"
                                      name="AVERAGE_1YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_2YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_2YEAR]"
                                      name="AVERAGE_2YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_3YEAR]"
                                      name="AVERAGE_3YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_5YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_5YEAR]"
                                      name="AVERAGE_5YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_7YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_7YEAR]"
                                      name="AVERAGE_7YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_10YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_10YEAR]"
                                      name="AVERAGE_10YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_20YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_20YEAR]"
                                      name="AVERAGE_20YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_30YEAR]"
                                      dataType="decimal"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[AVERAGE_30YEAR]"
                                      name="AVERAGE_30YEAR"
                                      scale="10"
                                      truncationRowDisposition="FailComponent" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[WEEK_OF_MONTH]"
                                      dataType="ui2"
                                      name="WEEK_OF_MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      dataType="ui1"
                                      name="NUM_DAYS_IN_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="ui1"
                                      name="NUM_DAYS_FOR_CALCULATION" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1MONTH]"
                                      dataType="decimal"
                                      name="SUM_1MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3MONTH]"
                                      dataType="decimal"
                                      name="SUM_3MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_6MONTH]"
                                      dataType="decimal"
                                      name="SUM_6MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_1YEAR]"
                                      dataType="decimal"
                                      name="SUM_1YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_2YEAR]"
                                      dataType="decimal"
                                      name="SUM_2YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_3YEAR]"
                                      dataType="decimal"
                                      name="SUM_3YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_5YEAR]"
                                      dataType="decimal"
                                      name="SUM_5YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_7YEAR]"
                                      dataType="decimal"
                                      name="SUM_7YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_10YEAR]"
                                      dataType="decimal"
                                      name="SUM_10YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_20YEAR]"
                                      dataType="decimal"
                                      name="SUM_20YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[SUM_30YEAR]"
                                      dataType="decimal"
                                      name="SUM_30YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1MONTH]"
                                      dataType="decimal"
                                      name="AVERAGE_1MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3MONTH]"
                                      dataType="decimal"
                                      name="AVERAGE_3MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_6MONTH]"
                                      dataType="decimal"
                                      name="AVERAGE_6MONTH"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_1YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_1YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_2YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_2YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_3YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_3YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_5YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_5YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_7YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_7YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_10YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_10YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_20YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_20YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[AVERAGE_30YEAR]"
                                      dataType="decimal"
                                      name="AVERAGE_30YEAR"
                                      scale="10" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output]"
                                  isErrorOut="true"
                                  name="G_WEEK_OF_MONTH Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[G_WEEK_OF_MONTH_Id]"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[WEEK_OF_MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[WEEK_OF_MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[WEEK_OF_MONTH]"
                                      name="WEEK_OF_MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_IN_WEEK]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_IN_WEEK]"
                                      name="NUM_DAYS_IN_WEEK" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[NUM_DAYS_FOR_CALCULATION]"
                                      name="NUM_DAYS_FOR_CALCULATION" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1MONTH]"
                                      name="SUM_1MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3MONTH]"
                                      name="SUM_3MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_6MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_6MONTH]"
                                      name="SUM_6MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_1YEAR]"
                                      name="SUM_1YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_2YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_2YEAR]"
                                      name="SUM_2YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_3YEAR]"
                                      name="SUM_3YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_5YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_5YEAR]"
                                      name="SUM_5YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_7YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_7YEAR]"
                                      name="SUM_7YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_10YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_10YEAR]"
                                      name="SUM_10YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_20YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_20YEAR]"
                                      name="SUM_20YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_30YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[SUM_30YEAR]"
                                      name="SUM_30YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1MONTH]"
                                      name="AVERAGE_1MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3MONTH]"
                                      name="AVERAGE_3MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_6MONTH]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_6MONTH]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_6MONTH]"
                                      name="AVERAGE_6MONTH" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_1YEAR]"
                                      name="AVERAGE_1YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_2YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_2YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_2YEAR]"
                                      name="AVERAGE_2YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_3YEAR]"
                                      name="AVERAGE_3YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_5YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_5YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_5YEAR]"
                                      name="AVERAGE_5YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_7YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_7YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_7YEAR]"
                                      name="AVERAGE_7YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_10YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_10YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_10YEAR]"
                                      name="AVERAGE_10YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_20YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_20YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_20YEAR]"
                                      name="AVERAGE_20YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_30YEAR]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_30YEAR]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[AVERAGE_30YEAR]"
                                      name="AVERAGE_30YEAR" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="G_WEEK_OF_MONTH_Id" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[WEEK_OF_MONTH]"
                                      dataType="nText"
                                      name="WEEK_OF_MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_IN_WEEK]"
                                      dataType="nText"
                                      name="NUM_DAYS_IN_WEEK" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[NUM_DAYS_FOR_CALCULATION]"
                                      dataType="nText"
                                      name="NUM_DAYS_FOR_CALCULATION" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1MONTH]"
                                      dataType="nText"
                                      name="SUM_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3MONTH]"
                                      dataType="nText"
                                      name="SUM_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_6MONTH]"
                                      dataType="nText"
                                      name="SUM_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_1YEAR]"
                                      dataType="nText"
                                      name="SUM_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_2YEAR]"
                                      dataType="nText"
                                      name="SUM_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_3YEAR]"
                                      dataType="nText"
                                      name="SUM_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_5YEAR]"
                                      dataType="nText"
                                      name="SUM_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_7YEAR]"
                                      dataType="nText"
                                      name="SUM_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_10YEAR]"
                                      dataType="nText"
                                      name="SUM_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_20YEAR]"
                                      dataType="nText"
                                      name="SUM_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[SUM_30YEAR]"
                                      dataType="nText"
                                      name="SUM_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1MONTH]"
                                      dataType="nText"
                                      name="AVERAGE_1MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3MONTH]"
                                      dataType="nText"
                                      name="AVERAGE_3MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_6MONTH]"
                                      dataType="nText"
                                      name="AVERAGE_6MONTH" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_1YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_1YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_2YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_2YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_3YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_3YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_5YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_5YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_7YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_7YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_10YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_10YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_20YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_20YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[AVERAGE_30YEAR]"
                                      dataType="nText"
                                      name="AVERAGE_30YEAR" />
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH]"
                                  name="LIST_G_WEEK_OF_MONTH">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      errorOrTruncationOperation="Conversion"
                                      errorRowDisposition="FailComponent"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id"
                                      truncationRowDisposition="FailComponent" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="ui8"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                                <output
                                  refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output]"
                                  isErrorOut="true"
                                  name="LIST_G_WEEK_OF_MONTH Error Output">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Identifies the rowset associated with the output."
                                      name="RowsetID">LIST_G_WEEK_OF_MONTH</property>
                                  </properties>
                                  <outputColumns>
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      externalMetadataColumnId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[LIST_G_WEEK_OF_MONTH_Id]"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorCode]"
                                      name="ErrorCode"
                                      specialFlags="1" />
                                    <outputColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      dataType="i4"
                                      lineageId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].Columns[ErrorColumn]"
                                      name="ErrorColumn"
                                      specialFlags="2" />
                                  </outputColumns>
                                  <externalMetadataColumns
                                    isUsed="True">
                                    <externalMetadataColumn
                                      refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_WEEK_OF_MONTH Error Output].ExternalColumns[LIST_G_WEEK_OF_MONTH_Id]"
                                      dataType="nText"
                                      name="LIST_G_WEEK_OF_MONTH_Id" />
                                  </externalMetadataColumns>
                                </output>
                              </outputs>
                            </component>
                          </components>
                          <paths>
                            <path
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table.Paths[G_BC_CAT]"
                              endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Left Input]"
                              name="G_BC_CAT"
                              startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[G_BC_CAT]" />
                            <path
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table.Paths[LIST_G_BC_CAT]"
                              endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Inputs[Merge Join Right Input]"
                              name="LIST_G_BC_CAT"
                              startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2.Outputs[LIST_G_BC_CAT]" />
                            <path
                              refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table.Paths[Merge Join Output]"
                              endId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              name="Merge Join Output"
                              startId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join.Outputs[Merge Join Output]" />
                          </paths>
                        </pipeline>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion.PrecedenceConstraints[Constraint]"
                      DTS:CreationName=""
                      DTS:DTSID="{A1F41D42-9D33-4ADD-8326-AE3AB0364339}"
                      DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint"
                      DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table" />
                  </DTS:PrecedenceConstraints>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{EC820DFC-A08C-4784-8642-12955C72197F}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the SuccessErrorflag" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{EA742C7B-1E0E-48EA-A3A0-77D3DE6E5EF7}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the Destination Path"
                  DTS:Value="1" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3.PrecedenceConstraints[Constraint 2]"
                  DTS:CreationName=""
                  DTS:DTSID="{60144307-6550-4F53-85E0-659D10D47C82}"
                  DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the SuccessErrorflag"
                  DTS:ObjectName="Constraint 2"
                  DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the Destination Path" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{B95766E6-1324-42A2-9058-174B19B3C306}"
              DTS:Expression="@ps_parseCompleted == &quot;y&quot;"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{8DA5A240-4119-41FB-B1B4-FE3056828765}"
              DTS:Expression="@ps_parseCompleted == &quot;y&quot;"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{7152A824-142C-44B5-B2A7-4FFA22976384}"
              DTS:EvalOp="1"
              DTS:Expression="@ps_param_parseType==1"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Decide what Parse Logic to Execute"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{B426D5A9-06FA-4D2E-BD8B-A7E6D49BF641}"
              DTS:EvalOp="1"
              DTS:Expression="@ps_param_parseType==2"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Decide what Parse Logic to Execute"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{FE1E96E4-9A04-4CC6-87AB-38A5A855A924}"
              DTS:EvalOp="1"
              DTS:Expression="@ps_param_parseType==3"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Decide what Parse Logic to Execute"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{CED622C5-6CF2-4872-88C8-04545F618440}"
              DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log"
              DTS:Value="2" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{A6FB2431-238F-4B3D-8530-BAF71A05D8A8}"
              DTS:ObjectName="{A6FB2431-238F-4B3D-8530-BAF71A05D8A8}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::ps_fileNameInProcess" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Price Curves for all the given Parse Types.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{5A34C05F-F1F1-4E3F-815A-3D103729F354}"
          DTS:From="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Price Curves for all the given Parse Types.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{0AAE9B1E-C059-4D4C-B3F9-004008ADD8C5}"
          DTS:EvalOp="1"
          DTS:Expression="@ps_isFormatError==&quot;y&quot;"
          DTS:From="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process Price Curves for all the given Parse Types\Post to message board on Format Error" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set ps_param_datatype as &quot;spc&quot;"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{D92256A1-60A2-4286-B9BE-7F7CB79C41EC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set ps_param_datatype as &quot;spc&quot;"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ScriptTask_ec8e8173eed54869a3336de3b6769e7e"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="ps_param_dataType">
          <ProjectItem
            Name="scripttask_ec8e8173eed54869a3336de3b6769e7e.vbproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_ec8e8173eed54869a3336de3b6769e7e.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_ec8e8173eed54869a3336de3b6769e7e.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{437CB36C-CD7E-4F8D-A5D2-9437FCD28947}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.

	Public Sub Main()
        Dts.Variables("ps_param_dataType").Value = "spc"
	End Sub

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_ec8e8173eed54869a3336de3b6769e7e.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ScriptTask_ec8e8173eed54869a3336de3b6769e7e.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d83277c1-a217-4474-9738-8ce07d7ecfbd")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{0C9CBA2E-3E7C-4D9A-916F-5C35E9D2A99E}</msb:ProjectId>
		<msb:DisplayName>scripttask_ec8e8173eed54869a3336de3b6769e7e</msb:DisplayName>
		<msb:CodeName>scripttask_ec8e8173eed54869a3336de3b6769e7e</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="scripttask_ec8e8173eed54869a3336de3b6769e7e.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ScriptTask_ec8e8173eed54869a3336de3b6769e7e.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD4+61IAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAAXjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA5AABLAAAAAEAAAFgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
OQAAAAAAAEgAAAACAAUAjCMAAIQVAAABAAAAAAAAANEiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqggJvJQAACm8mAAAKcjMAAHBvJwAACnJXAABwbygAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKAHAAAjfgAADAgAAHAJAAAjU3RyaW5ncwAA
AAB8EQAAYAAAACNVUwDcEQAAEAAAACNHVUlEAAAA7BEAAJgDAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkPAAAA+iUzABYAAAEAAAAqAAAACgAAAAwAAAAZAAAABAAAADUAAAACAAAANgAAAA4AAAAEAAAA
CAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAAA4CQEAAAAAAAoAeAFOAQoArAGO
AQYAvAG1AQoAFAJOAQYAkgK1AQoAFAPqAgYASgM5AwYAdwNiAw4A3gPJAxIAXQQ0BAYAfgS1AQ4A
sQSbBA4AygSbBA4A9wTfBAYAIQUOBQoAYAU5BQoAeAUTAA4ArQWQBQYA4gXCBQYAAAa1AQYAJAa1
AQoAPQYTAAYAgQZiBgYApwaVBgYAzga9BgYA4QYOBRIA/gY0BBYAVwc3BxYAbwc3BwYAgQe1ARIA
lwc0BAYAAAjCBQYAIAjCBQYAWAg+CAYAcQiVBgYAjghiBgYAnAiVBgYAtwiVBgYA0giVBgYA6wiV
BgYABAmVBgYAIQmVBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAAbQA3AAkAAQACAAAB
EAB4ADcADQABAAMABQEAAIIAAAANAAUACAAFAQAAkAAAAA0ABQAPAAAAAACrALcADQAGABEAAAEQ
APcAAgElAAgAFQABAAAANQECASkACgAYAAIBAABAAQAALQAKABoAMQDXASAAMQAAAi0AMQAiAjoA
MQBHAkcAIQAjA5AAEQBaA50AEQCDA6EAEQD2A78AEQD+A8MABgaDBNkAVoCLBNwAVoCTBNwAUCAA
AAAABhiIARMAAQBYIAAAAAAGGIgBEwABAGAgAAAAABEYwwEXAAEAjCAAAAAAEwjKARsAAQCkIAAA
AAATCPABKAABALwgAAAAABMIGQI1AAEA1CAAAAAAEwg3AkIAAQDsIAAAAABGAn0CYwABAAghAAAA
AEYChgJoAAIAHCEAAAAAgwCXAmwAAgA0IQAAAABGAp8CcQACAEghAAAAABEAqAJ4AAIAZCEAAAAA
AQDGAoAAAwCAIQAAAAAGGIgBEwAEAIghAAAAAAMI2gKLAAQAvCEAAAAABhiIARMABADQIQAAAAAD
GIgBEwAEANghAAAAABYIjwOlAAQAFCIAAAAAFgijA6oABAAoIgAAAAAWCK8DrwAEADAiAAAAABEY
wwEXAAUARCIAAAAABhiIARMABQBMIgAAAAAWCAsExgAFAKgiAAAAAAYYiAETAAUAsCIAAAAABgB5
BBMABQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMJAIgBEwBhAIgB6gBxAIgB+QARAIgBEwB5AIgB
EwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAkANoCiwAsANoCiwA0ANoCiwA8ANoCiwCBAIgBEwCJ
AIgBEwCRAIgBSAGZAPEFkwEZAH0CYwAZAIYCaAApABIGoAEZAJ8CcQCpAC4GsAEZAIgBEwCxAIgB
wAFEACMDkABMAAsEiwBMAFgGPQJMAIgBEwC5AIgBTAIpALAGVwI5AIgBXAJJAIgBEwDJANYGeALJ
ANwGeALRAIgBEwBRAIgBEwBRABAHggLZAGEHhwLhAHgHjALpAFgGkgLxAIgBTAL5AIgBEwABAYgB
lwIJAYgBEwARAYgBSAEZAYgBSAEhAYgBSAEpAYgBSAExAYgBSAE5AYgBSAFBAYgBSAFJAYgBSAFR
AYgBSAEIACwA4AAIADAA5QApAIMAYQEuAJMBYAMuAIsBSQMuAKsBYAMuAEsBQwMuAFsBnAIuAOsA
UQIuAKMBUQIuAIMBUQIuAJsBUQIuAGMBpQIuAGsBxAIuAHMBDAMuAHsBGQNAACsA5QBAABMA8ABD
ABMA8ABDABsA/wBJAIMAfwFjABsA/wBjABMA8ABpAIMAcgGAACsA5QCDABsA/wCDAHMA5QCDAHsA
5QCJAIMATQGgACsA5QCjAMMAyAGjABMA8ADAACsA5QDDABMA8ADDAOsAUQLJABMAbwLgACsA5QDp
ABMAbwIAASsA5QAAARMA8AAJARsB5QAgASsA5QAgARMA8AAjAVMB5QAjAUsBUQJAASsA5QBAARMA
8ABgARMA8ABgASsA5QCAASsA5QCgASsA5QDAASsA5QDAARMA8ADgASsA5QAAAhMA8AAAAisA5QA0
ATkBPgFDAZgBnAGnAawBuwG7AUMCYwJqAn0CBAABAAYABQAHAAYACAAIAAAArAFPAAAAZQJUAAAA
FAJZAAAAcQJeAAAALQOYAAAASgO1AAAAwQO6AAAAuwPLAAIABAADAAIABQAFAAIABgAHAAIABwAJ
AAIADwALAAIAEgANAAIAEwAPAAEAFAAPAAIAFwARAHUAdQCIABgBHwEmAS0BKgIxAgSAAAABAAAA
AAAAAAAAAAAAAAIBAAAEAAAAAAAAAAAAAAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAABAAA
AAAAAAAAAAAAAQC1AQAAAAALAAAAAAAAAAAAAADQABUEAAAAAAsAAAAAAAAAAAAAANAAGAcAAAAA
AAAAAAEAAAC5BwAABQAEAAYABAAKAAkAAAAQAAwAuwIAABAAGQC7AgAAAAAbALsCLQC2AS0AOAIA
AAAAADxNb2R1bGU+AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9u
AFNjcmlwdFRhc2tfZWM4ZTgxNzNlZWQ1NDg2OWEzMzM2ZGUzYjY3NjllN2UudmJwcm9qLk15AE15
Q29tcHV0ZXIATXlQcm9qZWN0AE15V2ViU2VydmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVy
YDEATXlSZXNvdXJjZXMAU2NyaXB0VGFza19lYzhlODE3M2VlZDU0ODY5YTMzMzZkZTNiNjc2OWU3
ZS52YnByb2ouTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MAU2NyaXB0VGFza19lYzhlODE3M2VlZDU0
ODY5YTMzMzZkZTNiNjc2OWU3ZS52YnByb2oAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5j
Y3RvcgBnZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlv
bgBtX0FwcE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIA
Z2V0X1dlYlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9u
AFdlYlNlcnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBD
cmVhdGVfX0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJ
bnN0YW5jZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0
VmFsdWVgMQBtX0NvbnRleHQAR2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAX3Jlc01ncgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVy
ZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1
cmUAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBt
X1N5bmNPYmplY3QAZ2V0X1ZhbHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBNYWluAEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0
ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGls
ZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0
ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3Rh
bmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAENMU0NvbXBsaWFudEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0VGFza19lYzhl
ODE3M2VlZDU0ODY5YTMzMzZkZTNiNjc2OWU3ZS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRUYXNrX2VjOGU4MTczZWVkNTQ4NjlhMzMz
NmRlM2I2NzY5ZTdlLnZicHJvai5kbGwAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkA
UgBlAHMAbwB1AHIAYwBlAHMAACNwAHMAXwBwAGEAcgBhAG0AXwBkAGEAdABhAFQAeQBwAGUAAAdz
AHAAYwAAAJltomGgBJlEvI8IIlfuv0cACLd6XFYZNOCJCLA/X38R1Qo6AyAAAQMAAAEEAAASDAcG
FRIYARIMBAAAEggHBhUSGAESCAQAABIRBwYVEhgBEhEEAAASFAcGFRIYARIUBAgAEgwECAASCAQI
ABIRBAgAEhQEIAECHAMgAAgEIAASFQMgAA4CHgAHEAEBHgAeAAcwAQEBEB4AAhMABCAAEwAHBhUS
GQETAAQoABMAAwYSHQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiACBhwEAAASIAQI
ABIgCImEXc2AgMyRAgYIAwYRKAQAAAAABAEAAAAFIAEBETUIAQABAAAAAAAFIAIBDg4YAQAKTXlU
ZW1wbGF0ZQgxMC4wLjAuMAAABhUSGAESDAYVEhgBEggGFRIYARIRBhUSGAESFAQHARIMBAcBEggE
BwESEQQHARIUBCABAQ4TAQAOTXkuV2ViU2VydmljZXMAABABAAtNeS5Db21wdXRlcgAADAEAB015
LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAABAABHBwDBwECAwcBCAYAARIVEVEEBwESFQMHAQ4F
EAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMu
U29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFu
Y2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMTABMAEwAEIAEBAgUBAAAAAAQgABJh
BiACAQ4SYQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcBEiAEIAASbQQgABJxBSABEnUcBCAB
ARwEIAEBCAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQMAQAHMS4wLjAuMAAAKQEAJGQ4MzI3N2MxLWEyMTctNDQ3NC05NzM4LThjZTA3ZDdlY2Zi
ZAAABQEAAQAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAA3AQAyU2NyaXB0VGFza19lYzhlODE3M2Vl
ZDU0ODY5YTMzMzZkZTNiNjc2OWU3ZS52YnByb2oAADg5AAAAAAAAAAAAAE45AAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABAOQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAABAAAAAAAAAAAAAAABDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEYAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAPAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAkAAzAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAYwByAGkA
cAB0AFQAYQBzAGsAXwBlAGMAOABlADgAMQA3ADMAZQBlAGQANQA0ADgANgA5AGEAMwAzADMANgBk
AGUAMwBiADYANwA2ADkAZQA3AGUALgB2AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAkAA3AAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8AZQBjADgAZQA4ADEANwAzAGUAZQBkADUANAA4ADYA
OQBhADMAMwAzADYAZABlADMAYgA2ADcANgA5AGUANwBlAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAA
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQAzAAAAmAA3AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAYwByAGkAcAB0AFQAYQBzAGsAXwBlAGMAOABlADgAMQA3ADMAZQBlAGQANQA0ADgANgA5AGEA
MwAzADMANgBkAGUAMwBiADYANwA2ADkAZQA3AGUALgB2AGIAcAByAG8AagAuAGQAbABsAAAAAACI
ADMAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwBlAGMA
OABlADgAMQA3ADMAZQBlAGQANQA0ADgANgA5AGEAMwAzADMANgBkAGUAMwBiADYANwA2ADkAZQA3
AGUALgB2AGIAcAByAG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAYDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{591D90FD-8E18-4039-9874-E0392674353F}"
      DTS:From="Package\Get the no of Parse Types"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Process Price Curves for all the given Parse Types" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{A684D6D1-75FE-4A37-A179-49B1D87DBC28}"
      DTS:From="Package\Clean all the staging tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get the no of Parse Types" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{AE2E3696-B5A1-4B6C-B585-CCCDE042E329}"
      DTS:From="Package\Process Price Curves for all the given Parse Types"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Set ps_param_datatype as &quot;spc&quot;"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{B527C8F7-0C06-44F6-80C6-12CCE08B9C25}"
      DTS:From="Package\Set ps_param_datatype as &quot;spc&quot;"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\call spa_adapter" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="224.8,44"
          Id="Package\call spa_adapter"
          TopLeft="798.858490566038,2181.7641509434" />
        <NodeLayout
          Size="224.8,44"
          Id="Package\Clean all the staging tables"
          TopLeft="474.066037735849,5.5" />
        <NodeLayout
          Size="230.4,44"
          Id="Package\Get the no of Parse Types"
          TopLeft="592.443396226415,125.877358490566" />
        <NodeLayout
          Size="151.2,44"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Call spa_adapter"
          TopLeft="517.320754716981,248.169811320754" />
        <NodeLayout
          Size="150.4,44"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Loop through all the files names\Delete the unwanted files"
          TopLeft="21.0566037735849,8.47169811320737" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="184.8,76.8"
          Size="184.8,120.8"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Loop through all the files names"
          TopLeft="31.2452830188679,185.150943396226" />
        <NodeLayout
          Size="144,44"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Nymex Scrapping"
          TopLeft="382.339622641509,99.7924528301887" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\SCT_Download_FTP"
          TopLeft="106.10242715082,95.2765777322905" />
        <NodeLayout
          Size="192,60.8"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Set ps_param_datatype as &quot;Error&quot;"
          TopLeft="273.056603773585,248.547169811321" />
        <NodeLayout
          Size="153.6,44"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Treasury Scrapping"
          TopLeft="532.377358490566,101.641509433962" />
        <NodeLayout
          Size="240.8,44"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path\Write every records from parseDetails to the variables"
          TopLeft="261.660377358491,11.7169811320755" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint]"
          TopLeft="381.962264150943,55.6415094339623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72.2264150943396,44.1509433962265"
              Start="0,0"
              End="72.2264150943396,36.6509433962265">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.0754716981132" />
                  <mssgle:LineSegment
                    End="72.2264150943396,22.0754716981132" />
                  <mssgle:LineSegment
                    End="72.2264150943396,36.6509433962265" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="2.14762160966979,27.0754716981132,67.931171875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 1]"
          TopLeft="192.50242715082,136.87657773229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-68.8571441319524,48.2743656639355"
              Start="0,0"
              End="-68.8571441319524,40.7743656639355">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1371828319678" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1371828319678"
                    Point2="0,24.1371828319678"
                    Point3="-4,24.1371828319678" />
                  <mssgle:LineSegment
                    End="-64.8571441319524,24.1371828319678" />
                  <mssgle:CubicBezierSegment
                    Point1="-64.8571441319524,24.1371828319678"
                    Point2="-68.8571441319524,24.1371828319678"
                    Point3="-68.8571441319524,28.1371828319678" />
                  <mssgle:LineSegment
                    End="-68.8571441319524,40.7743656639355" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 2]"
          TopLeft="323.860377358491,55.7169811320755">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-131.357950207671,39.559596600215"
              Start="0,0"
              End="-131.357950207671,32.059596600215">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.47539380357816" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.47539380357816"
                    Point2="0,13.4753938035782"
                    Point3="-4,13.4753938035782" />
                  <mssgle:LineSegment
                    End="-127.357950207671,13.4753938035782" />
                  <mssgle:CubicBezierSegment
                    Point1="-127.357950207671,13.4753938035782"
                    Point2="-131.357950207671,13.4753938035782"
                    Point3="-131.357950207671,17.4753938035782" />
                  <mssgle:LineSegment
                    End="-131.357950207671,32.059596600215" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-99.6445610413355,18.4753938035782,67.931171875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 3]"
          TopLeft="444.22641509434,55.6415094339623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="165.018867924528,46"
              Start="0,0"
              End="165.018867924528,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5094339622642" />
                  <mssgle:LineSegment
                    End="165.018867924528,11.5094339622642" />
                  <mssgle:LineSegment
                    End="165.018867924528,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="48.5438480247642,16.5094339622642,67.931171875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 4]"
          TopLeft="219.969093817487,136.87657773229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="103.087509956098,111.67059207903"
              Start="0,0"
              End="103.087509956098,104.17059207903">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.3205923013874" />
                  <mssgle:CubicBezierSegment
                    Point1="0,59.3205923013874"
                    Point2="0,63.3205923013874"
                    Point3="4,63.3205923013874" />
                  <mssgle:LineSegment
                    End="99.087509956098,63.3205923013874" />
                  <mssgle:CubicBezierSegment
                    Point1="99.087509956098,63.3205923013874"
                    Point2="103.087509956098,63.3205923013874"
                    Point3="103.087509956098,67.3205923013874" />
                  <mssgle:LineSegment
                    End="103.087509956098,104.17059207903" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="36.302407321799,68.3205923013874,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 5]"
          TopLeft="454.188679245283,143.716981132075">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-85.2830188679245,104.830188679245"
              Start="0,0"
              End="-85.2830188679245,97.3301886792451">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4150943396226" />
                  <mssgle:LineSegment
                    End="-85.2830188679245,52.4150943396226" />
                  <mssgle:LineSegment
                    End="-85.2830188679245,97.3301886792451" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-57.8828570902123,57.4150943396226,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 6]"
          TopLeft="609.245283018868,145.566037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-198.830188679245,102.981132075472"
              Start="0,0"
              End="-198.830188679245,95.4811320754716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5094339622642" />
                  <mssgle:LineSegment
                    End="-198.830188679245,51.5094339622642" />
                  <mssgle:LineSegment
                    End="-198.830188679245,95.4811320754716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-114.656441995873,56.5094339622642,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path.PrecedenceConstraints[Constraint 7]"
          TopLeft="464.754716981132,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.566037735849,-8.86792452830196"
              Start="0,0"
              End="45.066037735849,-8.86792452830196">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.3018867924528,0" />
                  <mssgle:LineSegment
                    End="26.3018867924528,-8.86792452830196" />
                  <mssgle:LineSegment
                    End="45.066037735849,-8.86792452830196" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="751.2,465.6"
          Size="751.2,509.6"
          Id="Package\Process Price Curves for all the given Parse Types\Import Pretask - Cleaning the staging tables, defining the teporary path, copying the files to temporary path"
          TopLeft="201.358490566038,24.2075471698113" />
        <NodeLayout
          Size="196,44"
          Id="Package\Process Price Curves for all the given Parse Types\Post to message board on Format Error"
          TopLeft="505.698113207547,1737.67924528302" />
        <NodeLayout
          Size="312,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Decide what Parse Logic to Execute"
          TopLeft="424.566037735849,27.2641509433963" />
        <NodeLayout
          Size="161.6,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Delete the file from temporary folder"
          TopLeft="293.056603773585,100.320754716981" />
        <NodeLayout
          Size="168,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Rename the file and copy to the Destination"
          TopLeft="289.962264150944,26.433962264151" />
        <NodeLayout
          Size="156.8,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log\Write Status Log"
          TopLeft="295.962264150944,176.094339622642" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log.PrecedenceConstraints[Constraint 5]"
          TopLeft="373.811320754717,70.3584905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.11320754716985,29.9622641509434"
              Start="0,0"
              End="0.11320754716985,22.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.9811320754717" />
                  <mssgle:LineSegment
                    End="0.11320754716985,14.9811320754717" />
                  <mssgle:LineSegment
                    End="0.11320754716985,22.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log.PrecedenceConstraints[Constraint 6]"
          TopLeft="373.924528301887,144.245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.377358490565939,31.8490566037735"
              Start="0,0"
              End="0.377358490565939,24.3490566037735">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9245283018868" />
                  <mssgle:LineSegment
                    End="0.377358490565939,15.9245283018868" />
                  <mssgle:LineSegment
                    End="0.377358490565939,24.3490566037735" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="61.886792452830186"
          IsExpanded="True"
          PanelSize="702.4,217.6"
          Size="702.4,279.2"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\File Rename,Copying to destination,Delete files from temp folder and write status log"
          TopLeft="179.358490566038,830.962264150943" />
        <NodeLayout
          Size="180.8,64.8"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Extract As Of Date from the file and Set the SuccessErrorFlag"
          TopLeft="24.7924528301887,121.490566037736" />
        <NodeLayout
          Size="350.4,48.8"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table"
          TopLeft="46.6792452830189,14.132075471698" />
        <NodeLayout
          Size="148,60"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Set the Destination Path"
          TopLeft="268.981132075472,157.943396226415" />
        <NodeLayout
          Size="203.2,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Update As Of Date in the Staging Tables"
          TopLeft="131.207547169811,263.264150943396" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint]"
          TopLeft="159.622641509434,63.0754716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-44.4905660377359,58.4150943396226"
              Start="0,0"
              End="-44.4905660377359,50.9150943396226">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.2075471698113" />
                  <mssgle:LineSegment
                    End="-44.4905660377359,29.2075471698113" />
                  <mssgle:LineSegment
                    End="-44.4905660377359,50.9150943396226" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint 1]"
          TopLeft="274.037735849057,263.264150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68.8301886792453,-45.3962264150944"
              Start="0,0"
              End="68.8301886792453,-37.8962264150944">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-22.6792452830189" />
                  <mssgle:LineSegment
                    End="68.8301886792453,-22.6792452830189" />
                  <mssgle:LineSegment
                    End="68.8301886792453,-37.8962264150944" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint 2]"
          TopLeft="115.132075471698,186.396226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.8867924528302,76.867924528302"
              Start="0,0"
              End="75.8867924528302,69.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.4528301886792" />
                  <mssgle:LineSegment
                    End="75.8867924528302,38.4528301886792" />
                  <mssgle:LineSegment
                    End="75.8867924528302,69.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2.PrecedenceConstraints[Constraint 3]"
          TopLeft="284.150943396226,63.0754716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.7169811320755,94.867924528302"
              Start="0,0"
              End="58.7169811320755,87.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.433962264151" />
                  <mssgle:LineSegment
                    End="58.7169811320755,47.433962264151" />
                  <mssgle:LineSegment
                    End="58.7169811320755,87.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="14.1171429097877,52.433962264151,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="468.8,359.2"
          Size="468.8,403.2"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2"
          TopLeft="498,179.037735849057" />
        <NodeLayout
          Size="167.2,70.4"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Extract As Of Date from the file and Set the SuccessErrorFlag"
          TopLeft="29.7735849056603,136.169811320755" />
        <NodeLayout
          Size="355.2,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table"
          TopLeft="40.943396226415,26.3207547169811" />
        <NodeLayout
          Size="140.8,72.8"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Set the Destination Path"
          TopLeft="264.377358490566,134.245283018868" />
        <NodeLayout
          Size="220,49.6"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Update As Of Date in the Staging Tables"
          TopLeft="117.924528301887,248.056603773585" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1.PrecedenceConstraints[Constraint]"
          TopLeft="156.377358490566,70.2452830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.2452830188679,65.9245283018868"
              Start="0,0"
              End="-43.2452830188679,58.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.9811320754716" />
                  <mssgle:LineSegment
                    End="-43.2452830188679,32.9811320754716" />
                  <mssgle:LineSegment
                    End="-43.2452830188679,58.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1.PrecedenceConstraints[Constraint 2]"
          TopLeft="280.905660377358,70.2452830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53.8490566037735,64"
              Start="0,0"
              End="53.8490566037735,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:LineSegment
                    End="53.8490566037735,32" />
                  <mssgle:LineSegment
                    End="53.8490566037735,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="11.6831806456368,37,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1.PrecedenceConstraints[Constraint 4]"
          TopLeft="196.490566037736,171.11320754717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.8867924528302,-0.415094339622783"
              Start="0,0"
              End="60.3867924528302,-0.415094339622783">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.9622641509434,0" />
                  <mssgle:LineSegment
                    End="33.9622641509434,-0.415094339622783" />
                  <mssgle:LineSegment
                    End="60.3867924528302,-0.415094339622783" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="457.6,318.4"
          Size="457.6,361.6"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1"
          TopLeft="14.0754716981132,176.622641509434" />
        <NodeLayout
          Size="136,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the Destination Path"
          TopLeft="476.905660377358,484.66037735849" />
        <NodeLayout
          Size="177.6,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Set the SuccessErrorflag"
          TopLeft="117.433962264151,382.849056603774" />
        <NodeLayout
          Size="180.8,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table"
          TopLeft="87.9622641509434,22.0943396226414" />
        <NodeLayout
          Size="196.8,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table"
          TopLeft="57.3584905660377,88.9622641509434" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion.PrecedenceConstraints[Constraint]"
          TopLeft="178.301886792453,66.0188679245282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.6037735849057,22.9433962264152"
              Start="0,0"
              End="-22.6037735849057,15.4433962264152">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.4716981132076" />
                  <mssgle:LineSegment
                    End="-22.6037735849057,11.4716981132076" />
                  <mssgle:LineSegment
                    End="-22.6037735849057,15.4433962264152" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="315.2,192"
          Size="315.2,236"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion"
          TopLeft="150.943396226415,52.3584905660377" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3.PrecedenceConstraints[Constraint]"
          TopLeft="246,288.283018867925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.6981132075472,94.566037735849"
              Start="0,0"
              End="-39.6981132075472,87.066037735849">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.2830188679245" />
                  <mssgle:LineSegment
                    End="-39.6981132075472,47.2830188679245" />
                  <mssgle:LineSegment
                    End="-39.6981132075472,87.066037735849" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3.PrecedenceConstraints[Constraint 1]"
          TopLeft="370.528301886792,288.283018867925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="153.509433962264,196.377358490566"
              Start="0,0"
              End="153.509433962264,188.877358490566">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.1886792452831" />
                  <mssgle:LineSegment
                    End="153.509433962264,98.1886792452831" />
                  <mssgle:LineSegment
                    End="153.509433962264,188.877358490566" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="61.5133693248821,103.188679245283,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3.PrecedenceConstraints[Constraint 2]"
          TopLeft="206.301886792453,426.77358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="317.735849056604,57.8867924528302"
              Start="0,0"
              End="317.735849056604,50.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.9433962264152" />
                  <mssgle:LineSegment
                    End="317.735849056604,28.9433962264152" />
                  <mssgle:LineSegment
                    End="317.735849056604,50.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="771.2,568"
          Size="771.2,612"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3"
          TopLeft="1011.58490566038,177.264150943396" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint]"
          TopLeft="243.207547169811,538.433962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121.169811320755,292.528301886792"
              Start="0,0"
              End="121.169811320755,285.028301886792">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,146.264150943396" />
                  <mssgle:LineSegment
                    End="121.169811320755,146.264150943396" />
                  <mssgle:LineSegment
                    End="121.169811320755,285.028301886792" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="35.2804525353773,151.264150943396,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 1]"
          TopLeft="732.603773584906,582.283018867925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-202.188679245283,248.679245283019"
              Start="0,0"
              End="-202.188679245283,241.179245283019">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,124.33962264151" />
                  <mssgle:LineSegment
                    End="-202.188679245283,124.33962264151" />
                  <mssgle:LineSegment
                    End="-202.188679245283,241.179245283019" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-126.398792747642,129.33962264151,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 2]"
          TopLeft="497.283018867925,71.1886792452831">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-254.075471698113,105.433962264151"
              Start="0,0"
              End="-254.075471698113,97.933962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3773584905659" />
                  <mssgle:LineSegment
                    End="-254.075471698113,26.3773584905659" />
                  <mssgle:LineSegment
                    End="-254.075471698113,97.933962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-135.037735849057,31.3773584905659,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 3]"
          TopLeft="580.301886792453,71.1886792452831">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="152.301886792453,107.849056603774"
              Start="0,0"
              End="152.301886792453,100.349056603774">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.9245283018868" />
                  <mssgle:LineSegment
                    End="152.301886792453,53.9245283018868" />
                  <mssgle:LineSegment
                    End="152.301886792453,100.349056603774" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="42.1853574587264,58.9245283018868,67.931171875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 4]"
          TopLeft="663.320754716981,71.1886792452831">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="733.811320754717,106.075471698113"
              Start="0,0"
              End="733.811320754717,98.5754716981132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5283018867924" />
                  <mssgle:LineSegment
                    End="733.811320754717,26.5283018867924" />
                  <mssgle:LineSegment
                    End="733.811320754717,98.5754716981132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="358.905660377358,31.5283018867924,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc.PrecedenceConstraints[Constraint 5]"
          TopLeft="1397.1320754717,789.528301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-700.679245283019,41.433962264151"
              Start="0,0"
              End="-700.679245283019,33.933962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7169811320755" />
                  <mssgle:LineSegment
                    End="-700.679245283019,20.7169811320755" />
                  <mssgle:LineSegment
                    End="-700.679245283019,33.933962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-375.644075766509,25.7169811320755,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1833.6,1138.4"
          Size="1833.6,1182.4"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc"
          TopLeft="7.81132075471714,493.150943396226" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types.PrecedenceConstraints[Constraint]"
          TopLeft="201.358490566038,279.007547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="723.252830188679,214.143396226415"
              Start="0,0"
              End="723.252830188679,206.643396226415">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="719.252830188679,0" />
                  <mssgle:CubicBezierSegment
                    Point1="719.252830188679,0"
                    Point2="723.252830188679,0"
                    Point3="723.252830188679,4" />
                  <mssgle:LineSegment
                    End="723.252830188679,206.643396226415" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="697.948377063679,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types.PrecedenceConstraints[Constraint 1]"
          TopLeft="924.679245283019,1674.92452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-321.169811320755,62.7547169811321"
              Start="0,0"
              End="-321.169811320755,55.2547169811321">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.3962264150944" />
                  <mssgle:LineSegment
                    End="-321.169811320755,31.3962264150944" />
                  <mssgle:LineSegment
                    End="-321.169811320755,55.2547169811321" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-168.584905660377,36.3962264150944,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1856.8,1836.8"
          Size="1856.8,1880.8"
          Id="Package\Process Price Curves for all the given Parse Types"
          TopLeft="5.5,203.122641509434" />
        <NodeLayout
          Size="216,44"
          Id="Package\Set ps_param_datatype as &quot;spc&quot;"
          TopLeft="521.122641509434,2182.14150943396" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="707.643396226415,169.877358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="226.256603773585,33.245283018868"
              Start="0,0"
              End="226.256603773585,25.745283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.622641509434" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.622641509434"
                    Point2="0,16.622641509434"
                    Point3="4,16.622641509434" />
                  <mssgle:LineSegment
                    End="222.256603773585,16.622641509434" />
                  <mssgle:CubicBezierSegment
                    Point1="222.256603773585,16.622641509434"
                    Point2="226.256603773585,16.622641509434"
                    Point3="226.256603773585,20.622641509434" />
                  <mssgle:LineSegment
                    End="226.256603773585,25.745283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="586.367924528302,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.867924528302,76.4528301886794"
              Start="0,0"
              End="120.867924528302,68.9528301886794">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.1509433962265" />
                  <mssgle:LineSegment
                    End="120.867924528302,42.1509433962265" />
                  <mssgle:LineSegment
                    End="120.867924528302,68.9528301886794" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="933.9,2083.92264150943">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-304.777358490566,98.218867924526"
              Start="0,0"
              End="-304.777358490566,90.718867924526">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.109433962263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.109433962263"
                    Point2="0,49.109433962263"
                    Point3="-4,49.109433962263" />
                  <mssgle:LineSegment
                    End="-300.777358490566,49.109433962263" />
                  <mssgle:CubicBezierSegment
                    Point1="-300.777358490566,49.109433962263"
                    Point2="-304.777358490566,49.109433962263"
                    Point3="-304.777358490566,53.109433962263" />
                  <mssgle:LineSegment
                    End="-304.777358490566,90.718867924526" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-177.693132370283,54.109433962263,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="736.783018867925,2204.10377358491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.0754716981132,-0.377358490566053"
              Start="0,0"
              End="54.5754716981132,-0.377358490566053">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.0566037735849,0" />
                  <mssgle:LineSegment
                    End="31.0566037735849,-0.377358490566053" />
                  <mssgle:LineSegment
                    End="54.5754716981132,-0.377358490566053" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table\Flat File Source"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Nymex Scrapping - ParseLogic_2\Insert the data into staging table.Paths[Flat File Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Transform to equal no of columns"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\Flat File Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table.Paths[Output 0]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Platts Data Format - ParseLogic_1\Insert the data into staging table.Paths[Flat File Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\XML Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\Merge Join"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table.Paths[Merge Join Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table.Paths[LIST_G_BC_CAT]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert As Of Date into Staging table.Paths[G_NEW_DATE]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\OLE DB Destination"
          TopLeft="59.6132075471698,359.462264150943" />
        <NodeLayout
          Size="136,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\Merge Join"
          TopLeft="63.4245283018868,232.254716981132" />
        <NodeLayout
          Size="219,44"
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table\XML Source 2"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table.Paths[Merge Join Output]"
          TopLeft="131.311320754717,276.179245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3.81132075471697,83.2830188679245"
              Start="0,0"
              End="-3.81132075471697,75.7830188679245">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.6226415094339" />
                  <mssgle:LineSegment
                    End="-3.81132075471697,41.6226415094339" />
                  <mssgle:LineSegment
                    End="-3.81132075471697,75.7830188679245" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table.Paths[LIST_G_BC_CAT]"
          TopLeft="156.330188679245,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-4.26415094339623,182.830188679245"
              Start="0,0"
              End="-4.26415094339623,175.330188679245">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,137.132075471698" />
                  <mssgle:LineSegment
                    End="-4.26415094339623,137.132075471698" />
                  <mssgle:LineSegment
                    End="-4.26415094339623,175.330188679245" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.2257864091981,142.132075471698,74.187421875,10.8671875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Price Curves for all the given Parse Types\Read each  Price Curve Doc\Treasury Scrapping - ParseLogic_3\Staging Table Insertion\Insert Values  into Staging table.Paths[G_BC_CAT]"
          TopLeft="73.311320754717,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.2452830188679,182.830188679245"
              Start="0,0"
              End="37.2452830188679,175.330188679245">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,137.132075471698" />
                  <mssgle:LineSegment
                    End="37.2452830188679,137.132075471698" />
                  <mssgle:LineSegment
                    End="37.2452830188679,175.330188679245" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.88858895931604,142.132075471698,49.0224609375,10.8671875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>